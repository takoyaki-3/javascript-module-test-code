/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./node_modules/@protobufjs/aspromise/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@protobufjs/aspromise/index.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/aspromise/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/base64/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@protobufjs/base64/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/base64/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/codegen/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@protobufjs/codegen/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/codegen/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/eventemitter/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@protobufjs/eventemitter/index.js ***!
  \********************************************************/
/***/ ((module) => {

eval("\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/eventemitter/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/fetch/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@protobufjs/fetch/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = __webpack_require__(/*! @protobufjs/aspromise */ \"./node_modules/@protobufjs/aspromise/index.js\"),\r\n    inquire   = __webpack_require__(/*! @protobufjs/inquire */ \"./node_modules/@protobufjs/inquire/index.js\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/fetch/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/float/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@protobufjs/float/index.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/float/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/inquire/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@protobufjs/inquire/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/inquire/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/path/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/path/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/path/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/pool/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/pool/index.js ***!
  \************************************************/
/***/ ((module) => {

eval("\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/pool/index.js?");

/***/ }),

/***/ "./node_modules/@protobufjs/utf8/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/utf8/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n//# sourceURL=webpack://my_module/./node_modules/@protobufjs/utf8/index.js?");

/***/ }),

/***/ "./node_modules/h3-js/dist/browser/h3-js.js":
/*!**************************************************!*\
  !*** ./node_modules/h3-js/dist/browser/h3-js.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// @ts-nocheck\nvar libh3 = function (libh3) {\n  libh3 = libh3 || {};\n  var Module = typeof libh3 !== \"undefined\" ? libh3 : {};\n  var moduleOverrides = {};\n  var key;\n\n  for (key in Module) {\n    if (Module.hasOwnProperty(key)) {\n      moduleOverrides[key] = Module[key];\n    }\n  }\n\n  var arguments_ = [];\n  var scriptDirectory = \"\";\n\n  function locateFile(path) {\n    if (Module[\"locateFile\"]) {\n      return Module[\"locateFile\"](path, scriptDirectory);\n    }\n\n    return scriptDirectory + path;\n  }\n\n  var readAsync;\n\n  {\n    if (typeof document !== \"undefined\" && document.currentScript) {\n      scriptDirectory = document.currentScript.src;\n    }\n\n    if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n      scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n    } else {\n      scriptDirectory = \"\";\n    }\n\n    readAsync = function readAsync(url, onload, onerror) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", url, true);\n      xhr.responseType = \"arraybuffer\";\n\n      xhr.onload = function xhr_onload() {\n        if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n          onload(xhr.response);\n          return;\n        }\n\n        var data = tryParseAsDataURI(url);\n\n        if (data) {\n          onload(data.buffer);\n          return;\n        }\n\n        onerror();\n      };\n\n      xhr.onerror = onerror;\n      xhr.send(null);\n    };\n  }\n\n  var out = Module[\"print\"] || console.log.bind(console);\n  var err = Module[\"printErr\"] || console.warn.bind(console);\n\n  for (key in moduleOverrides) {\n    if (moduleOverrides.hasOwnProperty(key)) {\n      Module[key] = moduleOverrides[key];\n    }\n  }\n\n  moduleOverrides = null;\n  if (Module[\"arguments\"]) { arguments_ = Module[\"arguments\"]; }\n\n  var tempRet0 = 0;\n\n  var setTempRet0 = function (value) {\n    tempRet0 = value;\n  };\n\n  var getTempRet0 = function () {\n    return tempRet0;\n  };\n\n  var GLOBAL_BASE = 8;\n\n  function setValue(ptr, value, type, noSafe) {\n    type = type || \"i8\";\n    if (type.charAt(type.length - 1) === \"*\") { type = \"i32\"; }\n\n    switch (type) {\n      case \"i1\":\n        HEAP8[ptr >> 0] = value;\n        break;\n\n      case \"i8\":\n        HEAP8[ptr >> 0] = value;\n        break;\n\n      case \"i16\":\n        HEAP16[ptr >> 1] = value;\n        break;\n\n      case \"i32\":\n        HEAP32[ptr >> 2] = value;\n        break;\n\n      case \"i64\":\n        tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n        break;\n\n      case \"float\":\n        HEAPF32[ptr >> 2] = value;\n        break;\n\n      case \"double\":\n        HEAPF64[ptr >> 3] = value;\n        break;\n\n      default:\n        abort(\"invalid type for setValue: \" + type);\n    }\n  }\n\n  function getValue(ptr, type, noSafe) {\n    type = type || \"i8\";\n    if (type.charAt(type.length - 1) === \"*\") { type = \"i32\"; }\n\n    switch (type) {\n      case \"i1\":\n        return HEAP8[ptr >> 0];\n\n      case \"i8\":\n        return HEAP8[ptr >> 0];\n\n      case \"i16\":\n        return HEAP16[ptr >> 1];\n\n      case \"i32\":\n        return HEAP32[ptr >> 2];\n\n      case \"i64\":\n        return HEAP32[ptr >> 2];\n\n      case \"float\":\n        return HEAPF32[ptr >> 2];\n\n      case \"double\":\n        return HEAPF64[ptr >> 3];\n\n      default:\n        abort(\"invalid type for getValue: \" + type);\n    }\n\n    return null;\n  }\n\n  var ABORT = false;\n\n  function assert(condition, text) {\n    if (!condition) {\n      abort(\"Assertion failed: \" + text);\n    }\n  }\n\n  function getCFunc(ident) {\n    var func = Module[\"_\" + ident];\n    assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n    return func;\n  }\n\n  function ccall(ident, returnType, argTypes, args, opts) {\n    var toC = {\n      \"string\": function (str) {\n        var ret = 0;\n\n        if (str !== null && str !== undefined && str !== 0) {\n          var len = (str.length << 2) + 1;\n          ret = stackAlloc(len);\n          stringToUTF8(str, ret, len);\n        }\n\n        return ret;\n      },\n      \"array\": function (arr) {\n        var ret = stackAlloc(arr.length);\n        writeArrayToMemory(arr, ret);\n        return ret;\n      }\n    };\n\n    function convertReturnValue(ret) {\n      if (returnType === \"string\") { return UTF8ToString(ret); }\n      if (returnType === \"boolean\") { return Boolean(ret); }\n      return ret;\n    }\n\n    var func = getCFunc(ident);\n    var cArgs = [];\n    var stack = 0;\n\n    if (args) {\n      for (var i = 0; i < args.length; i++) {\n        var converter = toC[argTypes[i]];\n\n        if (converter) {\n          if (stack === 0) { stack = stackSave(); }\n          cArgs[i] = converter(args[i]);\n        } else {\n          cArgs[i] = args[i];\n        }\n      }\n    }\n\n    var ret = func.apply(null, cArgs);\n    ret = convertReturnValue(ret);\n    if (stack !== 0) { stackRestore(stack); }\n    return ret;\n  }\n\n  function cwrap(ident, returnType, argTypes, opts) {\n    argTypes = argTypes || [];\n    var numericArgs = argTypes.every(function (type) {\n      return type === \"number\";\n    });\n    var numericRet = returnType !== \"string\";\n\n    if (numericRet && numericArgs && !opts) {\n      return getCFunc(ident);\n    }\n\n    return function () {\n      return ccall(ident, returnType, argTypes, arguments, opts);\n    };\n  }\n  var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n  function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n    var endIdx = idx + maxBytesToRead;\n    var endPtr = idx;\n\n    while (u8Array[endPtr] && !(endPtr >= endIdx)) { ++endPtr; }\n\n    if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n      return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n    } else {\n      var str = \"\";\n\n      while (idx < endPtr) {\n        var u0 = u8Array[idx++];\n\n        if (!(u0 & 128)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n\n        var u1 = u8Array[idx++] & 63;\n\n        if ((u0 & 224) == 192) {\n          str += String.fromCharCode((u0 & 31) << 6 | u1);\n          continue;\n        }\n\n        var u2 = u8Array[idx++] & 63;\n\n        if ((u0 & 240) == 224) {\n          u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n        } else {\n          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u8Array[idx++] & 63;\n        }\n\n        if (u0 < 65536) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        }\n      }\n    }\n\n    return str;\n  }\n\n  function UTF8ToString(ptr, maxBytesToRead) {\n    return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n  }\n\n  function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n    if (!(maxBytesToWrite > 0)) { return 0; }\n    var startIdx = outIdx;\n    var endIdx = outIdx + maxBytesToWrite - 1;\n\n    for (var i = 0; i < str.length; ++i) {\n      var u = str.charCodeAt(i);\n\n      if (u >= 55296 && u <= 57343) {\n        var u1 = str.charCodeAt(++i);\n        u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n      }\n\n      if (u <= 127) {\n        if (outIdx >= endIdx) { break; }\n        outU8Array[outIdx++] = u;\n      } else if (u <= 2047) {\n        if (outIdx + 1 >= endIdx) { break; }\n        outU8Array[outIdx++] = 192 | u >> 6;\n        outU8Array[outIdx++] = 128 | u & 63;\n      } else if (u <= 65535) {\n        if (outIdx + 2 >= endIdx) { break; }\n        outU8Array[outIdx++] = 224 | u >> 12;\n        outU8Array[outIdx++] = 128 | u >> 6 & 63;\n        outU8Array[outIdx++] = 128 | u & 63;\n      } else {\n        if (outIdx + 3 >= endIdx) { break; }\n        outU8Array[outIdx++] = 240 | u >> 18;\n        outU8Array[outIdx++] = 128 | u >> 12 & 63;\n        outU8Array[outIdx++] = 128 | u >> 6 & 63;\n        outU8Array[outIdx++] = 128 | u & 63;\n      }\n    }\n\n    outU8Array[outIdx] = 0;\n    return outIdx - startIdx;\n  }\n\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\n    return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n  }\n\n  var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\n  function writeArrayToMemory(array, buffer) {\n    HEAP8.set(array, buffer);\n  }\n\n  function alignUp(x, multiple) {\n    if (x % multiple > 0) {\n      x += multiple - x % multiple;\n    }\n\n    return x;\n  }\n\n  var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\n  function updateGlobalBufferAndViews(buf) {\n    buffer = buf;\n    Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n    Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n    Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n    Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n    Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n    Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n    Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n    Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n  }\n\n  var DYNAMIC_BASE = 5267040,\n      DYNAMICTOP_PTR = 24128;\n  var INITIAL_TOTAL_MEMORY = Module[\"TOTAL_MEMORY\"] || 33554432;\n\n  if (Module[\"buffer\"]) {\n    buffer = Module[\"buffer\"];\n  } else {\n    buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);\n  }\n\n  INITIAL_TOTAL_MEMORY = buffer.byteLength;\n  updateGlobalBufferAndViews(buffer);\n  HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n\n  function callRuntimeCallbacks(callbacks) {\n    while (callbacks.length > 0) {\n      var callback = callbacks.shift();\n\n      if (typeof callback == \"function\") {\n        callback();\n        continue;\n      }\n\n      var func = callback.func;\n\n      if (typeof func === \"number\") {\n        if (callback.arg === undefined) {\n          Module[\"dynCall_v\"](func);\n        } else {\n          Module[\"dynCall_vi\"](func, callback.arg);\n        }\n      } else {\n        func(callback.arg === undefined ? null : callback.arg);\n      }\n    }\n  }\n\n  var __ATPRERUN__ = [];\n  var __ATINIT__ = [];\n  var __ATMAIN__ = [];\n  var __ATPOSTRUN__ = [];\n\n  function preRun() {\n    if (Module[\"preRun\"]) {\n      if (typeof Module[\"preRun\"] == \"function\") { Module[\"preRun\"] = [Module[\"preRun\"]]; }\n\n      while (Module[\"preRun\"].length) {\n        addOnPreRun(Module[\"preRun\"].shift());\n      }\n    }\n\n    callRuntimeCallbacks(__ATPRERUN__);\n  }\n\n  function initRuntime() {\n    callRuntimeCallbacks(__ATINIT__);\n  }\n\n  function preMain() {\n    callRuntimeCallbacks(__ATMAIN__);\n  }\n\n  function postRun() {\n    if (Module[\"postRun\"]) {\n      if (typeof Module[\"postRun\"] == \"function\") { Module[\"postRun\"] = [Module[\"postRun\"]]; }\n\n      while (Module[\"postRun\"].length) {\n        addOnPostRun(Module[\"postRun\"].shift());\n      }\n    }\n\n    callRuntimeCallbacks(__ATPOSTRUN__);\n  }\n\n  function addOnPreRun(cb) {\n    __ATPRERUN__.unshift(cb);\n  }\n\n  function addOnPostRun(cb) {\n    __ATPOSTRUN__.unshift(cb);\n  }\n\n  var Math_abs = Math.abs;\n  var Math_ceil = Math.ceil;\n  var Math_floor = Math.floor;\n  var Math_min = Math.min;\n  var runDependencies = 0;\n  var runDependencyWatcher = null;\n  var dependenciesFulfilled = null;\n\n  function addRunDependency(id) {\n    runDependencies++;\n\n    if (Module[\"monitorRunDependencies\"]) {\n      Module[\"monitorRunDependencies\"](runDependencies);\n    }\n  }\n\n  function removeRunDependency(id) {\n    runDependencies--;\n\n    if (Module[\"monitorRunDependencies\"]) {\n      Module[\"monitorRunDependencies\"](runDependencies);\n    }\n\n    if (runDependencies == 0) {\n      if (runDependencyWatcher !== null) {\n        clearInterval(runDependencyWatcher);\n        runDependencyWatcher = null;\n      }\n\n      if (dependenciesFulfilled) {\n        var callback = dependenciesFulfilled;\n        dependenciesFulfilled = null;\n        callback();\n      }\n    }\n  }\n\n  Module[\"preloadedImages\"] = {};\n  Module[\"preloadedAudios\"] = {};\n  var memoryInitializer = null;\n  var dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n  function isDataURI(filename) {\n    return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0;\n  }\n\n  var tempDouble;\n  var tempI64;\n  memoryInitializer = \"data:application/octet-stream;base64,\";\n  var tempDoublePtr = 24144;\n\n  function demangle(func) {\n    return func;\n  }\n\n  function demangleAll(text) {\n    var regex = /\\b__Z[\\w\\d_]+/g;\n    return text.replace(regex, function (x) {\n      var y = demangle(x);\n      return x === y ? x : y + \" [\" + x + \"]\";\n    });\n  }\n\n  function jsStackTrace() {\n    var err = new Error();\n\n    if (!err.stack) {\n      try {\n        throw new Error(0);\n      } catch (e) {\n        err = e;\n      }\n\n      if (!err.stack) {\n        return \"(no stack trace available)\";\n      }\n    }\n\n    return err.stack.toString();\n  }\n\n  function stackTrace() {\n    var js = jsStackTrace();\n    if (Module[\"extraStackTrace\"]) { js += \"\\n\" + Module[\"extraStackTrace\"](); }\n    return demangleAll(js);\n  }\n\n  function ___assert_fail(condition, filename, line, func) {\n    abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n  }\n\n  function _emscripten_get_heap_size() {\n    return HEAP8.length;\n  }\n\n  function _emscripten_memcpy_big(dest, src, num) {\n    HEAPU8.set(HEAPU8.subarray(src, src + num), dest);\n  }\n\n  function ___setErrNo(value) {\n    if (Module[\"___errno_location\"]) { HEAP32[Module[\"___errno_location\"]() >> 2] = value; }\n    return value;\n  }\n\n  function abortOnCannotGrowMemory(requestedSize) {\n    abort(\"OOM\");\n  }\n\n  function emscripten_realloc_buffer(size) {\n    try {\n      var newBuffer = new ArrayBuffer(size);\n      if (newBuffer.byteLength != size) { return; }\n      new Int8Array(newBuffer).set(HEAP8);\n\n      _emscripten_replace_memory(newBuffer);\n\n      updateGlobalBufferAndViews(newBuffer);\n      return 1;\n    } catch (e) {}\n  }\n\n  function _emscripten_resize_heap(requestedSize) {\n    var oldSize = _emscripten_get_heap_size();\n\n    var PAGE_MULTIPLE = 16777216;\n    var LIMIT = 2147483648 - PAGE_MULTIPLE;\n\n    if (requestedSize > LIMIT) {\n      return false;\n    }\n\n    var MIN_TOTAL_MEMORY = 16777216;\n    var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY);\n\n    while (newSize < requestedSize) {\n      if (newSize <= 536870912) {\n        newSize = alignUp(2 * newSize, PAGE_MULTIPLE);\n      } else {\n        newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\n      }\n    }\n\n    var replacement = emscripten_realloc_buffer(newSize);\n\n    if (!replacement) {\n      return false;\n    }\n\n    return true;\n  }\n\n  var decodeBase64 = typeof atob === \"function\" ? atob : function (input) {\n    var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    do {\n      enc1 = keyStr.indexOf(input.charAt(i++));\n      enc2 = keyStr.indexOf(input.charAt(i++));\n      enc3 = keyStr.indexOf(input.charAt(i++));\n      enc4 = keyStr.indexOf(input.charAt(i++));\n      chr1 = enc1 << 2 | enc2 >> 4;\n      chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n      chr3 = (enc3 & 3) << 6 | enc4;\n      output = output + String.fromCharCode(chr1);\n\n      if (enc3 !== 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n\n      if (enc4 !== 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n    } while (i < input.length);\n\n    return output;\n  };\n\n  function intArrayFromBase64(s) {\n    try {\n      var decoded = decodeBase64(s);\n      var bytes = new Uint8Array(decoded.length);\n\n      for (var i = 0; i < decoded.length; ++i) {\n        bytes[i] = decoded.charCodeAt(i);\n      }\n\n      return bytes;\n    } catch (_) {\n      throw new Error(\"Converting base64 string to bytes failed.\");\n    }\n  }\n\n  function tryParseAsDataURI(filename) {\n    if (!isDataURI(filename)) {\n      return;\n    }\n\n    return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n  }\n\n  var asmGlobalArg = {\n    \"Math\": Math,\n    \"Int8Array\": Int8Array,\n    \"Int32Array\": Int32Array,\n    \"Uint8Array\": Uint8Array,\n    \"Float32Array\": Float32Array,\n    \"Float64Array\": Float64Array\n  };\n  var asmLibraryArg = {\n    \"a\": abort,\n    \"b\": setTempRet0,\n    \"c\": getTempRet0,\n    \"d\": ___assert_fail,\n    \"e\": ___setErrNo,\n    \"f\": _emscripten_get_heap_size,\n    \"g\": _emscripten_memcpy_big,\n    \"h\": _emscripten_resize_heap,\n    \"i\": abortOnCannotGrowMemory,\n    \"j\": demangle,\n    \"k\": demangleAll,\n    \"l\": emscripten_realloc_buffer,\n    \"m\": jsStackTrace,\n    \"n\": stackTrace,\n    \"o\": tempDoublePtr,\n    \"p\": DYNAMICTOP_PTR\n  }; // EMSCRIPTEN_START_ASM\n\n  var asm =\n  /** @suppress {uselessCode} */\n  function (global, env, buffer) {\n    \"almost asm\";\n\n    var a = new global.Int8Array(buffer),\n        b = new global.Int32Array(buffer),\n        c = new global.Uint8Array(buffer),\n        d = new global.Float32Array(buffer),\n        e = new global.Float64Array(buffer),\n        f = env.o | 0,\n        g = env.p | 0,\n        p = global.Math.floor,\n        q = global.Math.abs,\n        r = global.Math.sqrt,\n        s = global.Math.pow,\n        t = global.Math.cos,\n        u = global.Math.sin,\n        v = global.Math.tan,\n        w = global.Math.acos,\n        x = global.Math.asin,\n        y = global.Math.atan,\n        z = global.Math.atan2,\n        A = global.Math.ceil,\n        B = global.Math.imul,\n        C = global.Math.min,\n        D = global.Math.max,\n        E = global.Math.clz32,\n        G = env.b,\n        H = env.c,\n        I = env.d,\n        J = env.e,\n        K = env.f,\n        L = env.g,\n        M = env.h,\n        N = env.i,\n        T = 24160;\n\n    function W(newBuffer) {\n      a = new Int8Array(newBuffer);\n      c = new Uint8Array(newBuffer);\n      b = new Int32Array(newBuffer);\n      d = new Float32Array(newBuffer);\n      e = new Float64Array(newBuffer);\n      buffer = newBuffer;\n      return true;\n    } // EMSCRIPTEN_START_FUNCS\n\n\n    function X(a) {\n      a = a | 0;\n      var b = 0;\n      b = T;\n      T = T + a | 0;\n      T = T + 15 & -16;\n      return b | 0;\n    }\n\n    function Y() {\n      return T | 0;\n    }\n\n    function Z(a) {\n      a = a | 0;\n      T = a;\n    }\n\n    function _(a, b) {\n      a = a | 0;\n      b = b | 0;\n      T = a;\n    }\n\n    function $(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0;\n\n      if ((a | 0) < 0) {\n        c = 2;\n        return c | 0;\n      }\n\n      if ((a | 0) > 13780509) {\n        c = ic(15, c) | 0;\n        return c | 0;\n      } else {\n        d = ((a | 0) < 0) << 31 >> 31;\n        f = rd(a | 0, d | 0, 3, 0) | 0;\n        e = H() | 0;\n        d = ld(a | 0, d | 0, 1, 0) | 0;\n        d = rd(f | 0, e | 0, d | 0, H() | 0) | 0;\n        d = ld(d | 0, H() | 0, 1, 0) | 0;\n        a = H() | 0;\n        b[c >> 2] = d;\n        b[c + 4 >> 2] = a;\n        c = 0;\n        return c | 0;\n      }\n\n      return 0;\n    }\n\n    function aa(a, b, c, d) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      return ba(a, b, c, d, 0) | 0;\n    }\n\n    function ba(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0;\n      j = T;\n      T = T + 16 | 0;\n      h = j;\n\n      if (!(ca(a, c, d, e, f) | 0)) {\n        e = 0;\n        T = j;\n        return e | 0;\n      }\n\n      do { if ((d | 0) >= 0) {\n        if ((d | 0) > 13780509) {\n          g = ic(15, h) | 0;\n          if (g | 0) { break; }\n          i = h;\n          h = b[i >> 2] | 0;\n          i = b[i + 4 >> 2] | 0;\n        } else {\n          g = ((d | 0) < 0) << 31 >> 31;\n          k = rd(d | 0, g | 0, 3, 0) | 0;\n          i = H() | 0;\n          g = ld(d | 0, g | 0, 1, 0) | 0;\n          g = rd(k | 0, i | 0, g | 0, H() | 0) | 0;\n          g = ld(g | 0, H() | 0, 1, 0) | 0;\n          i = H() | 0;\n          b[h >> 2] = g;\n          b[h + 4 >> 2] = i;\n          h = g;\n        }\n\n        Bd(e | 0, 0, h << 3 | 0) | 0;\n\n        if (f | 0) {\n          Bd(f | 0, 0, h << 2 | 0) | 0;\n          g = da(a, c, d, e, f, h, i, 0) | 0;\n          break;\n        }\n\n        g = kd(h, 4) | 0;\n        if (!g) { g = 13; }else {\n          k = da(a, c, d, e, g, h, i, 0) | 0;\n          jd(g);\n          g = k;\n        }\n      } else { g = 2; } } while (0);\n\n      k = g;\n      T = j;\n      return k | 0;\n    }\n\n    function ca(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0;\n      q = T;\n      T = T + 16 | 0;\n      o = q;\n      p = q + 8 | 0;\n      n = o;\n      b[n >> 2] = a;\n      b[n + 4 >> 2] = c;\n\n      if ((d | 0) < 0) {\n        p = 2;\n        T = q;\n        return p | 0;\n      }\n\n      g = e;\n      b[g >> 2] = a;\n      b[g + 4 >> 2] = c;\n      g = (f | 0) != 0;\n      if (g) { b[f >> 2] = 0; }\n\n      if (xb(a, c) | 0) {\n        p = 9;\n        T = q;\n        return p | 0;\n      }\n\n      b[p >> 2] = 0;\n\n      a: do { if ((d | 0) >= 1) {\n        if (g) {\n          l = 1;\n          k = 0;\n          m = 0;\n          n = 1;\n          g = a;\n\n          while (1) {\n            if (!(k | m)) {\n              g = ea(g, c, 4, p, o) | 0;\n              if (g | 0) { break a; }\n              c = o;\n              g = b[c >> 2] | 0;\n              c = b[c + 4 >> 2] | 0;\n\n              if (xb(g, c) | 0) {\n                g = 9;\n                break a;\n              }\n            }\n\n            g = ea(g, c, b[22384 + (m << 2) >> 2] | 0, p, o) | 0;\n            if (g | 0) { break a; }\n            c = o;\n            g = b[c >> 2] | 0;\n            c = b[c + 4 >> 2] | 0;\n            a = e + (l << 3) | 0;\n            b[a >> 2] = g;\n            b[a + 4 >> 2] = c;\n            b[f + (l << 2) >> 2] = n;\n            a = k + 1 | 0;\n            h = (a | 0) == (n | 0);\n            i = m + 1 | 0;\n            j = (i | 0) == 6;\n\n            if (xb(g, c) | 0) {\n              g = 9;\n              break a;\n            }\n\n            n = n + (j & h & 1) | 0;\n\n            if ((n | 0) > (d | 0)) {\n              g = 0;\n              break;\n            } else {\n              l = l + 1 | 0;\n              k = h ? 0 : a;\n              m = h ? j ? 0 : i : m;\n            }\n          }\n        } else {\n          l = 1;\n          k = 0;\n          m = 0;\n          n = 1;\n          g = a;\n\n          while (1) {\n            if (!(k | m)) {\n              g = ea(g, c, 4, p, o) | 0;\n              if (g | 0) { break a; }\n              c = o;\n              g = b[c >> 2] | 0;\n              c = b[c + 4 >> 2] | 0;\n\n              if (xb(g, c) | 0) {\n                g = 9;\n                break a;\n              }\n            }\n\n            g = ea(g, c, b[22384 + (m << 2) >> 2] | 0, p, o) | 0;\n            if (g | 0) { break a; }\n            c = o;\n            g = b[c >> 2] | 0;\n            c = b[c + 4 >> 2] | 0;\n            a = e + (l << 3) | 0;\n            b[a >> 2] = g;\n            b[a + 4 >> 2] = c;\n            a = k + 1 | 0;\n            h = (a | 0) == (n | 0);\n            i = m + 1 | 0;\n            j = (i | 0) == 6;\n\n            if (xb(g, c) | 0) {\n              g = 9;\n              break a;\n            }\n\n            n = n + (j & h & 1) | 0;\n\n            if ((n | 0) > (d | 0)) {\n              g = 0;\n              break;\n            } else {\n              l = l + 1 | 0;\n              k = h ? 0 : a;\n              m = h ? j ? 0 : i : m;\n            }\n          }\n        }\n      } else { g = 0; } } while (0);\n\n      p = g;\n      T = q;\n      return p | 0;\n    }\n\n    function da(a, c, d, e, f, g, h, i) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      g = g | 0;\n      h = h | 0;\n      i = i | 0;\n      var j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0;\n      q = T;\n      T = T + 16 | 0;\n      o = q + 8 | 0;\n      p = q;\n      j = td(a | 0, c | 0, g | 0, h | 0) | 0;\n      l = H() | 0;\n      m = e + (j << 3) | 0;\n      r = m;\n      s = b[r >> 2] | 0;\n      r = b[r + 4 >> 2] | 0;\n      k = (s | 0) == (a | 0) & (r | 0) == (c | 0);\n      if (!((s | 0) == 0 & (r | 0) == 0 | k)) { do {\n        j = ld(j | 0, l | 0, 1, 0) | 0;\n        j = sd(j | 0, H() | 0, g | 0, h | 0) | 0;\n        l = H() | 0;\n        m = e + (j << 3) | 0;\n        s = m;\n        r = b[s >> 2] | 0;\n        s = b[s + 4 >> 2] | 0;\n        k = (r | 0) == (a | 0) & (s | 0) == (c | 0);\n      } while (!((r | 0) == 0 & (s | 0) == 0 | k)); }\n      j = f + (j << 2) | 0;\n\n      if (k ? (b[j >> 2] | 0) <= (i | 0) : 0) {\n        s = 0;\n        T = q;\n        return s | 0;\n      }\n\n      s = m;\n      b[s >> 2] = a;\n      b[s + 4 >> 2] = c;\n      b[j >> 2] = i;\n\n      if ((i | 0) >= (d | 0)) {\n        s = 0;\n        T = q;\n        return s | 0;\n      }\n\n      k = i + 1 | 0;\n      b[o >> 2] = 0;\n      j = ea(a, c, 2, o, p) | 0;\n\n      switch (j | 0) {\n        case 9:\n          {\n            n = 9;\n            break;\n          }\n\n        case 0:\n          {\n            j = p;\n            j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n            if (!j) { n = 9; }\n            break;\n          }\n\n        default:\n\n      }\n\n      a: do { if ((n | 0) == 9) {\n        b[o >> 2] = 0;\n        j = ea(a, c, 3, o, p) | 0;\n\n        switch (j | 0) {\n          case 9:\n            break;\n\n          case 0:\n            {\n              j = p;\n              j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n              if (j | 0) { break a; }\n              break;\n            }\n\n          default:\n            break a;\n        }\n\n        b[o >> 2] = 0;\n        j = ea(a, c, 1, o, p) | 0;\n\n        switch (j | 0) {\n          case 9:\n            break;\n\n          case 0:\n            {\n              j = p;\n              j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n              if (j | 0) { break a; }\n              break;\n            }\n\n          default:\n            break a;\n        }\n\n        b[o >> 2] = 0;\n        j = ea(a, c, 5, o, p) | 0;\n\n        switch (j | 0) {\n          case 9:\n            break;\n\n          case 0:\n            {\n              j = p;\n              j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n              if (j | 0) { break a; }\n              break;\n            }\n\n          default:\n            break a;\n        }\n\n        b[o >> 2] = 0;\n        j = ea(a, c, 4, o, p) | 0;\n\n        switch (j | 0) {\n          case 9:\n            break;\n\n          case 0:\n            {\n              j = p;\n              j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n              if (j | 0) { break a; }\n              break;\n            }\n\n          default:\n            break a;\n        }\n\n        b[o >> 2] = 0;\n        j = ea(a, c, 6, o, p) | 0;\n\n        switch (j | 0) {\n          case 9:\n            break;\n\n          case 0:\n            {\n              j = p;\n              j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n              if (j | 0) { break a; }\n              break;\n            }\n\n          default:\n            break a;\n        }\n\n        s = 0;\n        T = q;\n        return s | 0;\n      } } while (0);\n\n      s = j;\n      T = q;\n      return s | 0;\n    }\n\n    function ea(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0;\n\n      if (d >>> 0 > 6) {\n        f = 1;\n        return f | 0;\n      }\n\n      m = (b[e >> 2] | 0) % 6 | 0;\n      b[e >> 2] = m;\n\n      if ((m | 0) > 0) {\n        g = 0;\n\n        do {\n          d = Sa(d) | 0;\n          g = g + 1 | 0;\n        } while ((g | 0) < (b[e >> 2] | 0));\n      }\n\n      m = vd(a | 0, c | 0, 45) | 0;\n      H() | 0;\n      l = m & 127;\n\n      if (l >>> 0 > 121) {\n        f = 5;\n        return f | 0;\n      }\n\n      j = Fb(a, c) | 0;\n      g = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      g = g & 15;\n\n      a: do { if (!g) { k = 8; }else {\n        while (1) {\n          h = (15 - g | 0) * 3 | 0;\n          i = vd(a | 0, c | 0, h | 0) | 0;\n          H() | 0;\n          i = i & 7;\n\n          if ((i | 0) == 7) {\n            c = 5;\n            break;\n          }\n\n          p = (Lb(g) | 0) == 0;\n          g = g + -1 | 0;\n          n = wd(7, 0, h | 0) | 0;\n          c = c & ~(H() | 0);\n          o = wd(b[(p ? 432 : 16) + (i * 28 | 0) + (d << 2) >> 2] | 0, 0, h | 0) | 0;\n          h = H() | 0;\n          d = b[(p ? 640 : 224) + (i * 28 | 0) + (d << 2) >> 2] | 0;\n          a = o | a & ~n;\n          c = h | c;\n\n          if (!d) {\n            d = 0;\n            break a;\n          }\n\n          if (!g) {\n            k = 8;\n            break a;\n          }\n        }\n\n        return c | 0;\n      } } while (0);\n\n      if ((k | 0) == 8) {\n        p = b[848 + (l * 28 | 0) + (d << 2) >> 2] | 0;\n        o = wd(p | 0, 0, 45) | 0;\n        a = o | a;\n        c = H() | 0 | c & -1040385;\n        d = b[4272 + (l * 28 | 0) + (d << 2) >> 2] | 0;\n\n        if ((p & 127 | 0) == 127) {\n          p = wd(b[848 + (l * 28 | 0) + 20 >> 2] | 0, 0, 45) | 0;\n          c = H() | 0 | c & -1040385;\n          d = b[4272 + (l * 28 | 0) + 20 >> 2] | 0;\n          a = Hb(p | a, c) | 0;\n          c = H() | 0;\n          b[e >> 2] = (b[e >> 2] | 0) + 1;\n        }\n      }\n\n      i = vd(a | 0, c | 0, 45) | 0;\n      H() | 0;\n      i = i & 127;\n\n      b: do { if (!(ma(i) | 0)) {\n        if ((d | 0) > 0) {\n          g = 0;\n\n          do {\n            a = Hb(a, c) | 0;\n            c = H() | 0;\n            g = g + 1 | 0;\n          } while ((g | 0) != (d | 0));\n        }\n      } else {\n        c: do { if ((Fb(a, c) | 0) == 1) {\n          if ((l | 0) != (i | 0)) { if (sa(i, b[7696 + (l * 28 | 0) >> 2] | 0) | 0) {\n            a = Jb(a, c) | 0;\n            h = 1;\n            c = H() | 0;\n            break;\n          } else { I(23313, 22416, 436, 22424); } }\n\n          switch (j | 0) {\n            case 3:\n              {\n                a = Hb(a, c) | 0;\n                c = H() | 0;\n                b[e >> 2] = (b[e >> 2] | 0) + 1;\n                h = 0;\n                break c;\n              }\n\n            case 5:\n              {\n                a = Jb(a, c) | 0;\n                c = H() | 0;\n                b[e >> 2] = (b[e >> 2] | 0) + 5;\n                h = 0;\n                break c;\n              }\n\n            case 0:\n              {\n                p = 9;\n                return p | 0;\n              }\n\n            default:\n              {\n                p = 1;\n                return p | 0;\n              }\n          }\n        } else { h = 0; } } while (0);\n\n        if ((d | 0) > 0) {\n          g = 0;\n\n          do {\n            a = Gb(a, c) | 0;\n            c = H() | 0;\n            g = g + 1 | 0;\n          } while ((g | 0) != (d | 0));\n        }\n\n        if ((l | 0) != (i | 0)) {\n          if (!(na(i) | 0)) {\n            if ((h | 0) != 0 | (Fb(a, c) | 0) != 5) { break; }\n            b[e >> 2] = (b[e >> 2] | 0) + 1;\n            break;\n          }\n\n          switch (m & 127) {\n            case 8:\n            case 118:\n              break b;\n\n            default:\n\n          }\n\n          if ((Fb(a, c) | 0) != 3) { b[e >> 2] = (b[e >> 2] | 0) + 1; }\n        }\n      } } while (0);\n\n      b[e >> 2] = ((b[e >> 2] | 0) + d | 0) % 6 | 0;\n      p = f;\n      b[p >> 2] = a;\n      b[p + 4 >> 2] = c;\n      p = 0;\n      return p | 0;\n    }\n\n    function fa(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0;\n      i = T;\n      T = T + 16 | 0;\n      g = i;\n      h = i + 8 | 0;\n      f = (xb(a, c) | 0) == 0;\n      f = f ? 1 : 2;\n\n      while (1) {\n        b[h >> 2] = 0;\n        k = (ea(a, c, f, h, g) | 0) == 0;\n        j = g;\n\n        if (k & ((b[j >> 2] | 0) == (d | 0) ? (b[j + 4 >> 2] | 0) == (e | 0) : 0)) {\n          a = 4;\n          break;\n        }\n\n        f = f + 1 | 0;\n\n        if (f >>> 0 >= 7) {\n          f = 7;\n          a = 4;\n          break;\n        }\n      }\n\n      if ((a | 0) == 4) {\n        T = i;\n        return f | 0;\n      }\n\n      return 0;\n    }\n\n    function ga(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0;\n      p = T;\n      T = T + 16 | 0;\n      n = p;\n      o = p + 8 | 0;\n      m = n;\n      b[m >> 2] = a;\n      b[m + 4 >> 2] = c;\n\n      if (!d) {\n        o = e;\n        b[o >> 2] = a;\n        b[o + 4 >> 2] = c;\n        o = 0;\n        T = p;\n        return o | 0;\n      }\n\n      b[o >> 2] = 0;\n\n      a: do { if (!(xb(a, c) | 0)) {\n        g = (d | 0) > 0;\n\n        if (g) {\n          f = 0;\n          m = a;\n\n          do {\n            a = ea(m, c, 4, o, n) | 0;\n            if (a | 0) { break a; }\n            c = n;\n            m = b[c >> 2] | 0;\n            c = b[c + 4 >> 2] | 0;\n            f = f + 1 | 0;\n\n            if (xb(m, c) | 0) {\n              a = 9;\n              break a;\n            }\n          } while ((f | 0) < (d | 0));\n\n          l = e;\n          b[l >> 2] = m;\n          b[l + 4 >> 2] = c;\n          l = d + -1 | 0;\n\n          if (g) {\n            k = 0;\n            a = 1;\n\n            do {\n              f = 22384 + (k << 2) | 0;\n\n              if ((k | 0) == 5) {\n                h = b[f >> 2] | 0;\n                g = 0;\n                f = a;\n\n                while (1) {\n                  a = n;\n                  a = ea(b[a >> 2] | 0, b[a + 4 >> 2] | 0, h, o, n) | 0;\n                  if (a | 0) { break a; }\n\n                  if ((g | 0) != (l | 0)) {\n                    j = n;\n                    i = b[j >> 2] | 0;\n                    j = b[j + 4 >> 2] | 0;\n                    a = e + (f << 3) | 0;\n                    b[a >> 2] = i;\n                    b[a + 4 >> 2] = j;\n                    if (!(xb(i, j) | 0)) { a = f + 1 | 0; }else {\n                      a = 9;\n                      break a;\n                    }\n                  } else { a = f; }\n\n                  g = g + 1 | 0;\n                  if ((g | 0) >= (d | 0)) { break; }else { f = a; }\n                }\n              } else {\n                h = n;\n                j = b[f >> 2] | 0;\n                i = 0;\n                f = a;\n                g = b[h >> 2] | 0;\n                h = b[h + 4 >> 2] | 0;\n\n                while (1) {\n                  a = ea(g, h, j, o, n) | 0;\n                  if (a | 0) { break a; }\n                  h = n;\n                  g = b[h >> 2] | 0;\n                  h = b[h + 4 >> 2] | 0;\n                  a = e + (f << 3) | 0;\n                  b[a >> 2] = g;\n                  b[a + 4 >> 2] = h;\n                  a = f + 1 | 0;\n\n                  if (xb(g, h) | 0) {\n                    a = 9;\n                    break a;\n                  }\n\n                  i = i + 1 | 0;\n                  if ((i | 0) >= (d | 0)) { break; }else { f = a; }\n                }\n              }\n\n              k = k + 1 | 0;\n            } while (k >>> 0 < 6);\n\n            a = n;\n            h = m;\n            f = b[a >> 2] | 0;\n            g = c;\n            a = b[a + 4 >> 2] | 0;\n          } else {\n            h = m;\n            f = m;\n            g = c;\n            a = c;\n          }\n        } else {\n          h = e;\n          b[h >> 2] = a;\n          b[h + 4 >> 2] = c;\n          h = a;\n          f = a;\n          g = c;\n          a = c;\n        }\n\n        a = (h | 0) == (f | 0) & (g | 0) == (a | 0) ? 0 : 9;\n      } else { a = 9; } } while (0);\n\n      o = a;\n      T = p;\n      return o | 0;\n    }\n\n    function ha(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0;\n      i = T;\n      T = T + 48 | 0;\n      f = i + 16 | 0;\n      g = i + 8 | 0;\n      h = i;\n\n      if (d | 0) {\n        h = 15;\n        T = i;\n        return h | 0;\n      }\n\n      k = a;\n      j = b[k + 4 >> 2] | 0;\n      d = g;\n      b[d >> 2] = b[k >> 2];\n      b[d + 4 >> 2] = j;\n      Ec(g, f);\n      c = za(f, c, h) | 0;\n\n      if (!c) {\n        d = b[g >> 2] | 0;\n        g = b[a + 8 >> 2] | 0;\n\n        if ((g | 0) > 0) {\n          f = b[a + 12 >> 2] | 0;\n          c = 0;\n\n          do {\n            d = (b[f + (c << 3) >> 2] | 0) + d | 0;\n            c = c + 1 | 0;\n          } while ((c | 0) < (g | 0));\n        }\n\n        c = h;\n        f = b[c >> 2] | 0;\n        c = b[c + 4 >> 2] | 0;\n        g = ((d | 0) < 0) << 31 >> 31;\n\n        if ((c | 0) < (g | 0) | (c | 0) == (g | 0) & f >>> 0 < d >>> 0) {\n          c = h;\n          b[c >> 2] = d;\n          b[c + 4 >> 2] = g;\n          c = g;\n        } else { d = f; }\n\n        j = ld(d | 0, c | 0, 12, 0) | 0;\n        k = H() | 0;\n        c = h;\n        b[c >> 2] = j;\n        b[c + 4 >> 2] = k;\n        c = e;\n        b[c >> 2] = j;\n        b[c + 4 >> 2] = k;\n        c = 0;\n      }\n\n      k = c;\n      T = i;\n      return k | 0;\n    }\n\n    function ia(a, c, d, f, g, h, i) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      f = f | 0;\n      g = g | 0;\n      h = h | 0;\n      i = i | 0;\n      var j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0,\n          v = 0,\n          w = 0,\n          x = 0,\n          y = 0,\n          z = 0,\n          A = 0,\n          B = 0,\n          C = 0,\n          D = 0,\n          E = 0,\n          F = 0,\n          G = 0,\n          I = 0,\n          J = 0.0,\n          K = 0.0,\n          L = 0.0,\n          M = 0.0;\n      I = T;\n      T = T + 64 | 0;\n      D = I + 48 | 0;\n      E = I + 32 | 0;\n      F = I + 24 | 0;\n      x = I + 8 | 0;\n      y = I;\n      k = b[a >> 2] | 0;\n\n      if ((k | 0) <= 0) {\n        G = 0;\n        T = I;\n        return G | 0;\n      }\n\n      z = a + 4 | 0;\n      A = D + 8 | 0;\n      B = E + 8 | 0;\n      C = x + 8 | 0;\n      j = 0;\n      v = 0;\n\n      while (1) {\n        l = b[z >> 2] | 0;\n        u = l + (v << 4) | 0;\n        b[D >> 2] = b[u >> 2];\n        b[D + 4 >> 2] = b[u + 4 >> 2];\n        b[D + 8 >> 2] = b[u + 8 >> 2];\n        b[D + 12 >> 2] = b[u + 12 >> 2];\n\n        if ((v | 0) == (k + -1 | 0)) {\n          b[E >> 2] = b[l >> 2];\n          b[E + 4 >> 2] = b[l + 4 >> 2];\n          b[E + 8 >> 2] = b[l + 8 >> 2];\n          b[E + 12 >> 2] = b[l + 12 >> 2];\n        } else {\n          u = l + (v + 1 << 4) | 0;\n          b[E >> 2] = b[u >> 2];\n          b[E + 4 >> 2] = b[u + 4 >> 2];\n          b[E + 8 >> 2] = b[u + 8 >> 2];\n          b[E + 12 >> 2] = b[u + 12 >> 2];\n        }\n\n        k = Aa(D, E, f, F) | 0;\n\n        a: do { if (!k) {\n          l = F;\n          k = b[l >> 2] | 0;\n          l = b[l + 4 >> 2] | 0;\n\n          if ((l | 0) > 0 | (l | 0) == 0 & k >>> 0 > 0) {\n            t = 0;\n            u = 0;\n\n            b: while (1) {\n              M = +e[D >> 3];\n              s = md(k | 0, l | 0, t | 0, u | 0) | 0;\n              L = +(s >>> 0) + 4294967296.0 * +(H() | 0);\n              J = +(k >>> 0) + 4294967296.0 * +(l | 0);\n              K = +(t >>> 0) + 4294967296.0 * +(u | 0);\n              e[x >> 3] = M * L / J + +e[E >> 3] * K / J;\n              e[C >> 3] = +e[A >> 3] * L / J + +e[B >> 3] * K / J;\n              k = Mb(x, f, y) | 0;\n\n              if (k | 0) {\n                j = k;\n                break;\n              }\n\n              s = y;\n              r = b[s >> 2] | 0;\n              s = b[s + 4 >> 2] | 0;\n              o = td(r | 0, s | 0, c | 0, d | 0) | 0;\n              m = H() | 0;\n              k = i + (o << 3) | 0;\n              n = k;\n              l = b[n >> 2] | 0;\n              n = b[n + 4 >> 2] | 0;\n\n              c: do { if ((l | 0) == 0 & (n | 0) == 0) {\n                w = k;\n                G = 16;\n              } else {\n                p = 0;\n                q = 0;\n\n                while (1) {\n                  if ((p | 0) > (d | 0) | (p | 0) == (d | 0) & q >>> 0 > c >>> 0) {\n                    j = 1;\n                    break b;\n                  }\n\n                  if ((l | 0) == (r | 0) & (n | 0) == (s | 0)) { break c; }\n                  k = ld(o | 0, m | 0, 1, 0) | 0;\n                  o = sd(k | 0, H() | 0, c | 0, d | 0) | 0;\n                  m = H() | 0;\n                  q = ld(q | 0, p | 0, 1, 0) | 0;\n                  p = H() | 0;\n                  k = i + (o << 3) | 0;\n                  n = k;\n                  l = b[n >> 2] | 0;\n                  n = b[n + 4 >> 2] | 0;\n\n                  if ((l | 0) == 0 & (n | 0) == 0) {\n                    w = k;\n                    G = 16;\n                    break;\n                  }\n                }\n              } } while (0);\n\n              if ((G | 0) == 16 ? (G = 0, !((r | 0) == 0 & (s | 0) == 0)) : 0) {\n                q = w;\n                b[q >> 2] = r;\n                b[q + 4 >> 2] = s;\n                q = h + (b[g >> 2] << 3) | 0;\n                b[q >> 2] = r;\n                b[q + 4 >> 2] = s;\n                q = g;\n                q = ld(b[q >> 2] | 0, b[q + 4 >> 2] | 0, 1, 0) | 0;\n                r = H() | 0;\n                s = g;\n                b[s >> 2] = q;\n                b[s + 4 >> 2] = r;\n              }\n\n              t = ld(t | 0, u | 0, 1, 0) | 0;\n              u = H() | 0;\n              l = F;\n              k = b[l >> 2] | 0;\n              l = b[l + 4 >> 2] | 0;\n\n              if (!((l | 0) > (u | 0) | (l | 0) == (u | 0) & k >>> 0 > t >>> 0)) {\n                l = 1;\n                break a;\n              }\n            }\n\n            l = 0;\n          } else { l = 1; }\n        } else {\n          l = 0;\n          j = k;\n        } } while (0);\n\n        v = v + 1 | 0;\n\n        if (!l) {\n          G = 21;\n          break;\n        }\n\n        k = b[a >> 2] | 0;\n\n        if ((v | 0) >= (k | 0)) {\n          j = 0;\n          G = 21;\n          break;\n        }\n      }\n\n      if ((G | 0) == 21) {\n        T = I;\n        return j | 0;\n      }\n\n      return 0;\n    }\n\n    function ja(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0,\n          v = 0,\n          w = 0,\n          x = 0,\n          y = 0,\n          z = 0,\n          A = 0,\n          B = 0,\n          C = 0,\n          D = 0,\n          E = 0,\n          F = 0,\n          G = 0,\n          I = 0,\n          J = 0,\n          K = 0;\n      K = T;\n      T = T + 112 | 0;\n      F = K + 80 | 0;\n      j = K + 72 | 0;\n      G = K;\n      I = K + 56 | 0;\n\n      if (d | 0) {\n        J = 15;\n        T = K;\n        return J | 0;\n      }\n\n      k = a + 8 | 0;\n      J = id((b[k >> 2] << 5) + 32 | 0) | 0;\n\n      if (!J) {\n        J = 13;\n        T = K;\n        return J | 0;\n      }\n\n      Fc(a, J);\n      D = a;\n      E = b[D + 4 >> 2] | 0;\n      d = j;\n      b[d >> 2] = b[D >> 2];\n      b[d + 4 >> 2] = E;\n      Ec(j, F);\n      d = za(F, c, G) | 0;\n\n      if (!d) {\n        d = b[j >> 2] | 0;\n        g = b[k >> 2] | 0;\n\n        if ((g | 0) > 0) {\n          h = b[a + 12 >> 2] | 0;\n          f = 0;\n\n          do {\n            d = (b[h + (f << 3) >> 2] | 0) + d | 0;\n            f = f + 1 | 0;\n          } while ((f | 0) != (g | 0));\n\n          f = d;\n        } else { f = d; }\n\n        d = G;\n        g = b[d >> 2] | 0;\n        d = b[d + 4 >> 2] | 0;\n        h = ((f | 0) < 0) << 31 >> 31;\n\n        if ((d | 0) < (h | 0) | (d | 0) == (h | 0) & g >>> 0 < f >>> 0) {\n          d = G;\n          b[d >> 2] = f;\n          b[d + 4 >> 2] = h;\n          d = h;\n        } else { f = g; }\n\n        D = ld(f | 0, d | 0, 12, 0) | 0;\n        E = H() | 0;\n        d = G;\n        b[d >> 2] = D;\n        b[d + 4 >> 2] = E;\n        d = 0;\n      } else {\n        D = 0;\n        E = 0;\n      }\n\n      if (d | 0) {\n        jd(J);\n        J = d;\n        T = K;\n        return J | 0;\n      }\n\n      f = kd(D, 8) | 0;\n\n      if (!f) {\n        jd(J);\n        J = 13;\n        T = K;\n        return J | 0;\n      }\n\n      i = kd(D, 8) | 0;\n\n      if (!i) {\n        jd(J);\n        jd(f);\n        J = 13;\n        T = K;\n        return J | 0;\n      }\n\n      B = F;\n      b[B >> 2] = 0;\n      b[B + 4 >> 2] = 0;\n      B = a;\n      C = b[B + 4 >> 2] | 0;\n      d = j;\n      b[d >> 2] = b[B >> 2];\n      b[d + 4 >> 2] = C;\n      d = ia(j, D, E, c, F, f, i) | 0;\n\n      a: do { if (!d) {\n        b: do { if ((b[k >> 2] | 0) > 0) {\n          h = a + 12 | 0;\n          g = 0;\n\n          while (1) {\n            d = ia((b[h >> 2] | 0) + (g << 3) | 0, D, E, c, F, f, i) | 0;\n            g = g + 1 | 0;\n            if (d | 0) { break; }\n            if ((g | 0) >= (b[k >> 2] | 0)) { break b; }\n          }\n\n          jd(f);\n          jd(i);\n          jd(J);\n          break a;\n        } } while (0);\n\n        if ((E | 0) > 0 | (E | 0) == 0 & D >>> 0 > 0) { Bd(i | 0, 0, D << 3 | 0) | 0; }\n        C = F;\n        B = b[C + 4 >> 2] | 0;\n\n        c: do { if ((B | 0) > 0 | (B | 0) == 0 & (b[C >> 2] | 0) >>> 0 > 0) {\n          y = f;\n          z = i;\n          A = f;\n          B = i;\n          C = f;\n          d = f;\n          v = f;\n          w = i;\n          x = i;\n          f = i;\n\n          d: while (1) {\n            r = 0;\n            s = 0;\n            t = 0;\n            u = 0;\n            g = 0;\n            h = 0;\n\n            while (1) {\n              i = G;\n              j = i + 56 | 0;\n\n              do {\n                b[i >> 2] = 0;\n                i = i + 4 | 0;\n              } while ((i | 0) < (j | 0));\n\n              c = y + (r << 3) | 0;\n              k = b[c >> 2] | 0;\n              c = b[c + 4 >> 2] | 0;\n\n              if (ca(k, c, 1, G, 0) | 0) {\n                i = G;\n                j = i + 56 | 0;\n\n                do {\n                  b[i >> 2] = 0;\n                  i = i + 4 | 0;\n                } while ((i | 0) < (j | 0));\n\n                i = kd(7, 4) | 0;\n\n                if (i | 0) {\n                  da(k, c, 1, G, i, 7, 0, 0) | 0;\n                  jd(i);\n                }\n              }\n\n              q = 0;\n\n              while (1) {\n                p = G + (q << 3) | 0;\n                o = b[p >> 2] | 0;\n                p = b[p + 4 >> 2] | 0;\n\n                e: do { if (!((o | 0) == 0 & (p | 0) == 0)) {\n                  l = td(o | 0, p | 0, D | 0, E | 0) | 0;\n                  k = H() | 0;\n                  i = e + (l << 3) | 0;\n                  c = i;\n                  j = b[c >> 2] | 0;\n                  c = b[c + 4 >> 2] | 0;\n\n                  if (!((j | 0) == 0 & (c | 0) == 0)) {\n                    m = 0;\n                    n = 0;\n\n                    do {\n                      if ((m | 0) > (E | 0) | (m | 0) == (E | 0) & n >>> 0 > D >>> 0) { break d; }\n\n                      if ((j | 0) == (o | 0) & (c | 0) == (p | 0)) {\n                        i = g;\n                        j = h;\n                        break e;\n                      }\n\n                      i = ld(l | 0, k | 0, 1, 0) | 0;\n                      l = sd(i | 0, H() | 0, D | 0, E | 0) | 0;\n                      k = H() | 0;\n                      n = ld(n | 0, m | 0, 1, 0) | 0;\n                      m = H() | 0;\n                      i = e + (l << 3) | 0;\n                      c = i;\n                      j = b[c >> 2] | 0;\n                      c = b[c + 4 >> 2] | 0;\n                    } while (!((j | 0) == 0 & (c | 0) == 0));\n                  }\n\n                  if (!((o | 0) == 0 & (p | 0) == 0)) {\n                    Pb(o, p, I) | 0;\n\n                    if (Gc(a, J, I) | 0) {\n                      n = ld(g | 0, h | 0, 1, 0) | 0;\n                      h = H() | 0;\n                      m = i;\n                      b[m >> 2] = o;\n                      b[m + 4 >> 2] = p;\n                      g = z + (g << 3) | 0;\n                      b[g >> 2] = o;\n                      b[g + 4 >> 2] = p;\n                      g = n;\n                    }\n\n                    i = g;\n                    j = h;\n                  } else {\n                    i = g;\n                    j = h;\n                  }\n                } else {\n                  i = g;\n                  j = h;\n                } } while (0);\n\n                q = q + 1 | 0;\n                if (q >>> 0 >= 7) { break; }else {\n                  g = i;\n                  h = j;\n                }\n              }\n\n              r = ld(r | 0, s | 0, 1, 0) | 0;\n              s = H() | 0;\n              t = ld(t | 0, u | 0, 1, 0) | 0;\n              u = H() | 0;\n              h = F;\n              g = b[h >> 2] | 0;\n              h = b[h + 4 >> 2] | 0;\n              if (!((u | 0) < (h | 0) | (u | 0) == (h | 0) & t >>> 0 < g >>> 0)) { break; }else {\n                g = i;\n                h = j;\n              }\n            }\n\n            if ((h | 0) > 0 | (h | 0) == 0 & g >>> 0 > 0) {\n              g = 0;\n              h = 0;\n\n              do {\n                u = y + (g << 3) | 0;\n                b[u >> 2] = 0;\n                b[u + 4 >> 2] = 0;\n                g = ld(g | 0, h | 0, 1, 0) | 0;\n                h = H() | 0;\n                u = F;\n                t = b[u + 4 >> 2] | 0;\n              } while ((h | 0) < (t | 0) | ((h | 0) == (t | 0) ? g >>> 0 < (b[u >> 2] | 0) >>> 0 : 0));\n            }\n\n            u = F;\n            b[u >> 2] = i;\n            b[u + 4 >> 2] = j;\n\n            if ((j | 0) > 0 | (j | 0) == 0 & i >>> 0 > 0) {\n              q = f;\n              r = x;\n              s = C;\n              t = w;\n              u = z;\n              f = v;\n              x = d;\n              w = A;\n              v = q;\n              d = r;\n              C = B;\n              B = s;\n              A = t;\n              z = y;\n              y = u;\n            } else { break c; }\n          }\n\n          jd(A);\n          jd(B);\n          jd(J);\n          d = 1;\n          break a;\n        } else { d = i; } } while (0);\n\n        jd(J);\n        jd(f);\n        jd(d);\n        d = 0;\n      } else {\n        jd(f);\n        jd(i);\n        jd(J);\n      } } while (0);\n\n      J = d;\n      T = K;\n      return J | 0;\n    }\n\n    function ka(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0;\n      l = T;\n      T = T + 176 | 0;\n      j = l;\n\n      if ((c | 0) < 1) {\n        _c(d, 0, 0);\n\n        k = 0;\n        T = l;\n        return k | 0;\n      }\n\n      i = a;\n      i = vd(b[i >> 2] | 0, b[i + 4 >> 2] | 0, 52) | 0;\n      H() | 0;\n\n      _c(d, (c | 0) > 6 ? c : 6, i & 15);\n\n      i = 0;\n\n      while (1) {\n        e = a + (i << 3) | 0;\n        e = Qb(b[e >> 2] | 0, b[e + 4 >> 2] | 0, j) | 0;\n        if (e | 0) { break; }\n        e = b[j >> 2] | 0;\n\n        if ((e | 0) > 0) {\n          h = 0;\n\n          do {\n            g = j + 8 + (h << 4) | 0;\n            h = h + 1 | 0;\n            e = j + 8 + (((h | 0) % (e | 0) | 0) << 4) | 0;\n            f = dd(d, e, g) | 0;\n            if (!f) { cd(d, g, e) | 0; }else { bd(d, f) | 0; }\n            e = b[j >> 2] | 0;\n          } while ((h | 0) < (e | 0));\n        }\n\n        i = i + 1 | 0;\n\n        if ((i | 0) >= (c | 0)) {\n          e = 0;\n          k = 13;\n          break;\n        }\n      }\n\n      if ((k | 0) == 13) {\n        T = l;\n        return e | 0;\n      }\n\n      $c(d);\n      k = e;\n      T = l;\n      return k | 0;\n    }\n\n    function la(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0;\n      g = T;\n      T = T + 32 | 0;\n      e = g;\n      f = g + 16 | 0;\n      a = ka(a, c, f) | 0;\n\n      if (a | 0) {\n        d = a;\n        T = g;\n        return d | 0;\n      }\n\n      b[d >> 2] = 0;\n      b[d + 4 >> 2] = 0;\n      b[d + 8 >> 2] = 0;\n      a = ad(f) | 0;\n      if (a | 0) { do {\n        c = qc(d) | 0;\n\n        do {\n          rc(c, a) | 0;\n          h = a + 16 | 0;\n          b[e >> 2] = b[h >> 2];\n          b[e + 4 >> 2] = b[h + 4 >> 2];\n          b[e + 8 >> 2] = b[h + 8 >> 2];\n          b[e + 12 >> 2] = b[h + 12 >> 2];\n          bd(f, a) | 0;\n          a = ed(f, e) | 0;\n        } while ((a | 0) != 0);\n\n        a = ad(f) | 0;\n      } while ((a | 0) != 0); }\n      $c(f);\n      a = tc(d) | 0;\n\n      if (!a) {\n        h = 0;\n        T = g;\n        return h | 0;\n      }\n\n      sc(d);\n      h = a;\n      T = g;\n      return h | 0;\n    }\n\n    function ma(a) {\n      a = a | 0;\n\n      if (a >>> 0 > 121) {\n        a = 0;\n        return a | 0;\n      }\n\n      a = b[7696 + (a * 28 | 0) + 16 >> 2] | 0;\n      return a | 0;\n    }\n\n    function na(a) {\n      a = a | 0;\n      return (a | 0) == 4 | (a | 0) == 117 | 0;\n    }\n\n    function oa(a) {\n      a = a | 0;\n      return b[11120 + ((b[a >> 2] | 0) * 216 | 0) + ((b[a + 4 >> 2] | 0) * 72 | 0) + ((b[a + 8 >> 2] | 0) * 24 | 0) + (b[a + 12 >> 2] << 3) >> 2] | 0;\n    }\n\n    function pa(a) {\n      a = a | 0;\n      return b[11120 + ((b[a >> 2] | 0) * 216 | 0) + ((b[a + 4 >> 2] | 0) * 72 | 0) + ((b[a + 8 >> 2] | 0) * 24 | 0) + (b[a + 12 >> 2] << 3) + 4 >> 2] | 0;\n    }\n\n    function qa(a, c) {\n      a = a | 0;\n      c = c | 0;\n      a = 7696 + (a * 28 | 0) | 0;\n      b[c >> 2] = b[a >> 2];\n      b[c + 4 >> 2] = b[a + 4 >> 2];\n      b[c + 8 >> 2] = b[a + 8 >> 2];\n      b[c + 12 >> 2] = b[a + 12 >> 2];\n      return;\n    }\n\n    function ra(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0;\n\n      if (c >>> 0 > 20) {\n        c = -1;\n        return c | 0;\n      }\n\n      do { if ((b[11120 + (c * 216 | 0) >> 2] | 0) != (a | 0)) {\n        if ((b[11120 + (c * 216 | 0) + 8 >> 2] | 0) != (a | 0)) {\n          if ((b[11120 + (c * 216 | 0) + 16 >> 2] | 0) != (a | 0)) {\n            if ((b[11120 + (c * 216 | 0) + 24 >> 2] | 0) != (a | 0)) {\n              if ((b[11120 + (c * 216 | 0) + 32 >> 2] | 0) != (a | 0)) {\n                if ((b[11120 + (c * 216 | 0) + 40 >> 2] | 0) != (a | 0)) {\n                  if ((b[11120 + (c * 216 | 0) + 48 >> 2] | 0) != (a | 0)) {\n                    if ((b[11120 + (c * 216 | 0) + 56 >> 2] | 0) != (a | 0)) {\n                      if ((b[11120 + (c * 216 | 0) + 64 >> 2] | 0) != (a | 0)) {\n                        if ((b[11120 + (c * 216 | 0) + 72 >> 2] | 0) != (a | 0)) {\n                          if ((b[11120 + (c * 216 | 0) + 80 >> 2] | 0) != (a | 0)) {\n                            if ((b[11120 + (c * 216 | 0) + 88 >> 2] | 0) != (a | 0)) {\n                              if ((b[11120 + (c * 216 | 0) + 96 >> 2] | 0) != (a | 0)) {\n                                if ((b[11120 + (c * 216 | 0) + 104 >> 2] | 0) != (a | 0)) {\n                                  if ((b[11120 + (c * 216 | 0) + 112 >> 2] | 0) != (a | 0)) {\n                                    if ((b[11120 + (c * 216 | 0) + 120 >> 2] | 0) != (a | 0)) {\n                                      if ((b[11120 + (c * 216 | 0) + 128 >> 2] | 0) != (a | 0)) {\n                                        if ((b[11120 + (c * 216 | 0) + 136 >> 2] | 0) == (a | 0)) {\n                                          a = 2;\n                                          d = 1;\n                                          e = 2;\n                                        } else {\n                                          if ((b[11120 + (c * 216 | 0) + 144 >> 2] | 0) == (a | 0)) {\n                                            a = 0;\n                                            d = 2;\n                                            e = 0;\n                                            break;\n                                          }\n\n                                          if ((b[11120 + (c * 216 | 0) + 152 >> 2] | 0) == (a | 0)) {\n                                            a = 0;\n                                            d = 2;\n                                            e = 1;\n                                            break;\n                                          }\n\n                                          if ((b[11120 + (c * 216 | 0) + 160 >> 2] | 0) == (a | 0)) {\n                                            a = 0;\n                                            d = 2;\n                                            e = 2;\n                                            break;\n                                          }\n\n                                          if ((b[11120 + (c * 216 | 0) + 168 >> 2] | 0) == (a | 0)) {\n                                            a = 1;\n                                            d = 2;\n                                            e = 0;\n                                            break;\n                                          }\n\n                                          if ((b[11120 + (c * 216 | 0) + 176 >> 2] | 0) == (a | 0)) {\n                                            a = 1;\n                                            d = 2;\n                                            e = 1;\n                                            break;\n                                          }\n\n                                          if ((b[11120 + (c * 216 | 0) + 184 >> 2] | 0) == (a | 0)) {\n                                            a = 1;\n                                            d = 2;\n                                            e = 2;\n                                            break;\n                                          }\n\n                                          if ((b[11120 + (c * 216 | 0) + 192 >> 2] | 0) == (a | 0)) {\n                                            a = 2;\n                                            d = 2;\n                                            e = 0;\n                                            break;\n                                          }\n\n                                          if ((b[11120 + (c * 216 | 0) + 200 >> 2] | 0) == (a | 0)) {\n                                            a = 2;\n                                            d = 2;\n                                            e = 1;\n                                            break;\n                                          }\n\n                                          if ((b[11120 + (c * 216 | 0) + 208 >> 2] | 0) == (a | 0)) {\n                                            a = 2;\n                                            d = 2;\n                                            e = 2;\n                                            break;\n                                          } else { a = -1; }\n\n                                          return a | 0;\n                                        }\n                                      } else {\n                                        a = 2;\n                                        d = 1;\n                                        e = 1;\n                                      }\n                                    } else {\n                                      a = 2;\n                                      d = 1;\n                                      e = 0;\n                                    }\n                                  } else {\n                                    a = 1;\n                                    d = 1;\n                                    e = 2;\n                                  }\n                                } else {\n                                  a = 1;\n                                  d = 1;\n                                  e = 1;\n                                }\n                              } else {\n                                a = 1;\n                                d = 1;\n                                e = 0;\n                              }\n                            } else {\n                              a = 0;\n                              d = 1;\n                              e = 2;\n                            }\n                          } else {\n                            a = 0;\n                            d = 1;\n                            e = 1;\n                          }\n                        } else {\n                          a = 0;\n                          d = 1;\n                          e = 0;\n                        }\n                      } else {\n                        a = 2;\n                        d = 0;\n                        e = 2;\n                      }\n                    } else {\n                      a = 2;\n                      d = 0;\n                      e = 1;\n                    }\n                  } else {\n                    a = 2;\n                    d = 0;\n                    e = 0;\n                  }\n                } else {\n                  a = 1;\n                  d = 0;\n                  e = 2;\n                }\n              } else {\n                a = 1;\n                d = 0;\n                e = 1;\n              }\n            } else {\n              a = 1;\n              d = 0;\n              e = 0;\n            }\n          } else {\n            a = 0;\n            d = 0;\n            e = 2;\n          }\n        } else {\n          a = 0;\n          d = 0;\n          e = 1;\n        }\n      } else {\n        a = 0;\n        d = 0;\n        e = 0;\n      } } while (0);\n\n      c = b[11120 + (c * 216 | 0) + (d * 72 | 0) + (a * 24 | 0) + (e << 3) + 4 >> 2] | 0;\n      return c | 0;\n    }\n\n    function sa(a, c) {\n      a = a | 0;\n      c = c | 0;\n\n      if ((b[7696 + (a * 28 | 0) + 20 >> 2] | 0) == (c | 0)) {\n        c = 1;\n        return c | 0;\n      }\n\n      c = (b[7696 + (a * 28 | 0) + 24 >> 2] | 0) == (c | 0);\n      return c | 0;\n    }\n\n    function ta(a, c) {\n      a = a | 0;\n      c = c | 0;\n      return b[848 + (a * 28 | 0) + (c << 2) >> 2] | 0;\n    }\n\n    function ua(a, c) {\n      a = a | 0;\n      c = c | 0;\n\n      if ((b[848 + (a * 28 | 0) >> 2] | 0) == (c | 0)) {\n        c = 0;\n        return c | 0;\n      }\n\n      if ((b[848 + (a * 28 | 0) + 4 >> 2] | 0) == (c | 0)) {\n        c = 1;\n        return c | 0;\n      }\n\n      if ((b[848 + (a * 28 | 0) + 8 >> 2] | 0) == (c | 0)) {\n        c = 2;\n        return c | 0;\n      }\n\n      if ((b[848 + (a * 28 | 0) + 12 >> 2] | 0) == (c | 0)) {\n        c = 3;\n        return c | 0;\n      }\n\n      if ((b[848 + (a * 28 | 0) + 16 >> 2] | 0) == (c | 0)) {\n        c = 4;\n        return c | 0;\n      }\n\n      if ((b[848 + (a * 28 | 0) + 20 >> 2] | 0) == (c | 0)) {\n        c = 5;\n        return c | 0;\n      } else { return ((b[848 + (a * 28 | 0) + 24 >> 2] | 0) == (c | 0) ? 6 : 7) | 0; }\n\n      return 0;\n    }\n\n    function va() {\n      return 122;\n    }\n\n    function wa(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0;\n      c = 0;\n\n      do {\n        wd(c | 0, 0, 45) | 0;\n        e = H() | 0 | 134225919;\n        d = a + (c << 3) | 0;\n        b[d >> 2] = -1;\n        b[d + 4 >> 2] = e;\n        c = c + 1 | 0;\n      } while ((c | 0) != 122);\n\n      return 0;\n    }\n\n    function xa(a) {\n      a = a | 0;\n      return +e[a + 16 >> 3] < +e[a + 24 >> 3] | 0;\n    }\n\n    function ya(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0.0,\n          d = 0.0,\n          f = 0.0;\n      c = +e[b >> 3];\n\n      if (!(c >= +e[a + 8 >> 3])) {\n        b = 0;\n        return b | 0;\n      }\n\n      if (!(c <= +e[a >> 3])) {\n        b = 0;\n        return b | 0;\n      }\n\n      d = +e[a + 16 >> 3];\n      c = +e[a + 24 >> 3];\n      f = +e[b + 8 >> 3];\n      b = f >= c;\n      a = f <= d & 1;\n\n      if (d < c) {\n        if (b) { a = 1; }\n      } else if (!b) { a = 0; }\n\n      b = (a | 0) != 0;\n      return b | 0;\n    }\n\n    function za(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var g = 0.0,\n          h = 0.0,\n          i = 0.0,\n          j = 0.0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0.0,\n          v = 0.0;\n      t = T;\n      T = T + 288 | 0;\n      n = t + 264 | 0;\n      o = t + 96 | 0;\n      m = t;\n      k = m;\n      l = k + 96 | 0;\n\n      do {\n        b[k >> 2] = 0;\n        k = k + 4 | 0;\n      } while ((k | 0) < (l | 0));\n\n      c = Ub(c, m) | 0;\n\n      if (c | 0) {\n        s = c;\n        T = t;\n        return s | 0;\n      }\n\n      l = m;\n      m = b[l >> 2] | 0;\n      l = b[l + 4 >> 2] | 0;\n      Pb(m, l, n) | 0;\n      Qb(m, l, o) | 0;\n      j = +ac(n, o + 8 | 0);\n      e[n >> 3] = +e[a >> 3];\n      l = n + 8 | 0;\n      e[l >> 3] = +e[a + 16 >> 3];\n      e[o >> 3] = +e[a + 8 >> 3];\n      m = o + 8 | 0;\n      e[m >> 3] = +e[a + 24 >> 3];\n      h = +ac(n, o);\n      v = +e[l >> 3] - +e[m >> 3];\n      i = +q(+v);\n      u = +e[n >> 3] - +e[o >> 3];\n      g = +q(+u);\n\n      if (!(v == 0.0 | u == 0.0) ? (v = +xd(+i, +g), v = +A(+(h * h / +yd(+(v / +yd(+i, +g)), 3.0) / (j * (j * 2.59807621135) * .8))), e[f >> 3] = v, r = ~~v >>> 0, s = +q(v) >= 1.0 ? v > 0.0 ? ~~+C(+p(v / 4294967296.0), 4294967295.0) >>> 0 : ~~+A((v - +(~~v >>> 0)) / 4294967296.0) >>> 0 : 0, !((b[f + 4 >> 2] & 2146435072 | 0) == 2146435072)) : 0) {\n        o = (r | 0) == 0 & (s | 0) == 0;\n        c = d;\n        b[c >> 2] = o ? 1 : r;\n        b[c + 4 >> 2] = o ? 0 : s;\n        c = 0;\n      } else { c = 1; }\n\n      s = c;\n      T = t;\n      return s | 0;\n    }\n\n    function Aa(a, c, d, g) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      g = g | 0;\n      var h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0.0;\n      m = T;\n      T = T + 288 | 0;\n      j = m + 264 | 0;\n      k = m + 96 | 0;\n      l = m;\n      h = l;\n      i = h + 96 | 0;\n\n      do {\n        b[h >> 2] = 0;\n        h = h + 4 | 0;\n      } while ((h | 0) < (i | 0));\n\n      d = Ub(d, l) | 0;\n\n      if (d | 0) {\n        g = d;\n        T = m;\n        return g | 0;\n      }\n\n      d = l;\n      h = b[d >> 2] | 0;\n      d = b[d + 4 >> 2] | 0;\n      Pb(h, d, j) | 0;\n      Qb(h, d, k) | 0;\n      n = +ac(j, k + 8 | 0);\n      n = +A(+(+ac(a, c) / (n * 2.0)));\n      e[f >> 3] = n;\n      d = ~~n >>> 0;\n      h = +q(n) >= 1.0 ? n > 0.0 ? ~~+C(+p(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+A((n - +(~~n >>> 0)) / 4294967296.0) >>> 0 : 0;\n\n      if ((b[f + 4 >> 2] & 2146435072 | 0) == 2146435072) {\n        g = 1;\n        T = m;\n        return g | 0;\n      }\n\n      l = (d | 0) == 0 & (h | 0) == 0;\n      b[g >> 2] = l ? 1 : d;\n      b[g + 4 >> 2] = l ? 0 : h;\n      g = 0;\n      T = m;\n      return g | 0;\n    }\n\n    function Ba(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      b[a >> 2] = c;\n      b[a + 4 >> 2] = d;\n      b[a + 8 >> 2] = e;\n      return;\n    }\n\n    function Ca(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0.0,\n          j = 0.0,\n          k = 0.0,\n          l = 0.0,\n          m = 0,\n          n = 0,\n          o = 0.0;\n      n = c + 8 | 0;\n      b[n >> 2] = 0;\n      k = +e[a >> 3];\n      i = +q(+k);\n      l = +e[a + 8 >> 3];\n      j = +q(+l) / .8660254037844386;\n      i = i + j * .5;\n      d = ~~i;\n      a = ~~j;\n      i = i - +(d | 0);\n      j = j - +(a | 0);\n\n      do { if (i < .5) {\n        if (i < .3333333333333333) {\n          b[c >> 2] = d;\n\n          if (j < (i + 1.0) * .5) {\n            b[c + 4 >> 2] = a;\n            break;\n          } else {\n            a = a + 1 | 0;\n            b[c + 4 >> 2] = a;\n            break;\n          }\n        } else {\n          o = 1.0 - i;\n          a = (!(j < o) & 1) + a | 0;\n          b[c + 4 >> 2] = a;\n\n          if (o <= j & j < i * 2.0) {\n            d = d + 1 | 0;\n            b[c >> 2] = d;\n            break;\n          } else {\n            b[c >> 2] = d;\n            break;\n          }\n        }\n      } else {\n        if (!(i < .6666666666666666)) {\n          d = d + 1 | 0;\n          b[c >> 2] = d;\n\n          if (j < i * .5) {\n            b[c + 4 >> 2] = a;\n            break;\n          } else {\n            a = a + 1 | 0;\n            b[c + 4 >> 2] = a;\n            break;\n          }\n        }\n\n        if (j < 1.0 - i) {\n          b[c + 4 >> 2] = a;\n\n          if (i * 2.0 + -1.0 < j) {\n            b[c >> 2] = d;\n            break;\n          }\n        } else {\n          a = a + 1 | 0;\n          b[c + 4 >> 2] = a;\n        }\n\n        d = d + 1 | 0;\n        b[c >> 2] = d;\n      } } while (0);\n\n      do { if (k < 0.0) { if (!(a & 1)) {\n        m = (a | 0) / 2 | 0;\n        m = md(d | 0, ((d | 0) < 0) << 31 >> 31 | 0, m | 0, ((m | 0) < 0) << 31 >> 31 | 0) | 0;\n        d = ~~(+(d | 0) - (+(m >>> 0) + 4294967296.0 * +(H() | 0)) * 2.0);\n        b[c >> 2] = d;\n        break;\n      } else {\n        m = (a + 1 | 0) / 2 | 0;\n        m = md(d | 0, ((d | 0) < 0) << 31 >> 31 | 0, m | 0, ((m | 0) < 0) << 31 >> 31 | 0) | 0;\n        d = ~~(+(d | 0) - ((+(m >>> 0) + 4294967296.0 * +(H() | 0)) * 2.0 + 1.0));\n        b[c >> 2] = d;\n        break;\n      } } } while (0);\n\n      m = c + 4 | 0;\n\n      if (l < 0.0) {\n        d = d - ((a << 1 | 1 | 0) / 2 | 0) | 0;\n        b[c >> 2] = d;\n        a = 0 - a | 0;\n        b[m >> 2] = a;\n      }\n\n      f = a - d | 0;\n\n      if ((d | 0) < 0) {\n        g = 0 - d | 0;\n        b[m >> 2] = f;\n        b[n >> 2] = g;\n        b[c >> 2] = 0;\n        a = f;\n        d = 0;\n      } else { g = 0; }\n\n      if ((a | 0) < 0) {\n        d = d - a | 0;\n        b[c >> 2] = d;\n        g = g - a | 0;\n        b[n >> 2] = g;\n        b[m >> 2] = 0;\n        a = 0;\n      }\n\n      h = d - g | 0;\n      f = a - g | 0;\n\n      if ((g | 0) < 0) {\n        b[c >> 2] = h;\n        b[m >> 2] = f;\n        b[n >> 2] = 0;\n        a = f;\n        d = h;\n        g = 0;\n      }\n\n      f = (a | 0) < (d | 0) ? a : d;\n      f = (g | 0) < (f | 0) ? g : f;\n      if ((f | 0) <= 0) { return; }\n      b[c >> 2] = d - f;\n      b[m >> 2] = a - f;\n      b[n >> 2] = g - f;\n      return;\n    }\n\n    function Da(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0;\n      c = b[a >> 2] | 0;\n      h = a + 4 | 0;\n      d = b[h >> 2] | 0;\n\n      if ((c | 0) < 0) {\n        d = d - c | 0;\n        b[h >> 2] = d;\n        g = a + 8 | 0;\n        b[g >> 2] = (b[g >> 2] | 0) - c;\n        b[a >> 2] = 0;\n        c = 0;\n      }\n\n      if ((d | 0) < 0) {\n        c = c - d | 0;\n        b[a >> 2] = c;\n        g = a + 8 | 0;\n        f = (b[g >> 2] | 0) - d | 0;\n        b[g >> 2] = f;\n        b[h >> 2] = 0;\n        d = 0;\n      } else {\n        f = a + 8 | 0;\n        g = f;\n        f = b[f >> 2] | 0;\n      }\n\n      if ((f | 0) < 0) {\n        c = c - f | 0;\n        b[a >> 2] = c;\n        d = d - f | 0;\n        b[h >> 2] = d;\n        b[g >> 2] = 0;\n        f = 0;\n      }\n\n      e = (d | 0) < (c | 0) ? d : c;\n      e = (f | 0) < (e | 0) ? f : e;\n      if ((e | 0) <= 0) { return; }\n      b[a >> 2] = c - e;\n      b[h >> 2] = d - e;\n      b[g >> 2] = f - e;\n      return;\n    }\n\n    function Ea(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0.0,\n          f = 0;\n      f = b[a + 8 >> 2] | 0;\n      d = +((b[a + 4 >> 2] | 0) - f | 0);\n      e[c >> 3] = +((b[a >> 2] | 0) - f | 0) - d * .5;\n      e[c + 8 >> 3] = d * .8660254037844386;\n      return;\n    }\n\n    function Fa(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      b[d >> 2] = (b[c >> 2] | 0) + (b[a >> 2] | 0);\n      b[d + 4 >> 2] = (b[c + 4 >> 2] | 0) + (b[a + 4 >> 2] | 0);\n      b[d + 8 >> 2] = (b[c + 8 >> 2] | 0) + (b[a + 8 >> 2] | 0);\n      return;\n    }\n\n    function Ga(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      b[d >> 2] = (b[a >> 2] | 0) - (b[c >> 2] | 0);\n      b[d + 4 >> 2] = (b[a + 4 >> 2] | 0) - (b[c + 4 >> 2] | 0);\n      b[d + 8 >> 2] = (b[a + 8 >> 2] | 0) - (b[c + 8 >> 2] | 0);\n      return;\n    }\n\n    function Ha(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0;\n      d = B(b[a >> 2] | 0, c) | 0;\n      b[a >> 2] = d;\n      d = a + 4 | 0;\n      e = B(b[d >> 2] | 0, c) | 0;\n      b[d >> 2] = e;\n      a = a + 8 | 0;\n      c = B(b[a >> 2] | 0, c) | 0;\n      b[a >> 2] = c;\n      return;\n    }\n\n    function Ia(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = b[a >> 2] | 0;\n      i = (h | 0) < 0;\n      e = (b[a + 4 >> 2] | 0) - (i ? h : 0) | 0;\n      g = (e | 0) < 0;\n      f = (g ? 0 - e | 0 : 0) + ((b[a + 8 >> 2] | 0) - (i ? h : 0)) | 0;\n      d = (f | 0) < 0;\n      a = d ? 0 : f;\n      c = (g ? 0 : e) - (d ? f : 0) | 0;\n      f = (i ? 0 : h) - (g ? e : 0) - (d ? f : 0) | 0;\n      d = (c | 0) < (f | 0) ? c : f;\n      d = (a | 0) < (d | 0) ? a : d;\n      e = (d | 0) > 0;\n      a = a - (e ? d : 0) | 0;\n      c = c - (e ? d : 0) | 0;\n\n      a: do { switch (f - (e ? d : 0) | 0) {\n        case 0:\n          switch (c | 0) {\n            case 0:\n              {\n                i = (a | 0) == 0 ? 0 : (a | 0) == 1 ? 1 : 7;\n                return i | 0;\n              }\n\n            case 1:\n              {\n                i = (a | 0) == 0 ? 2 : (a | 0) == 1 ? 3 : 7;\n                return i | 0;\n              }\n\n            default:\n              break a;\n          }\n\n        case 1:\n          switch (c | 0) {\n            case 0:\n              {\n                i = (a | 0) == 0 ? 4 : (a | 0) == 1 ? 5 : 7;\n                return i | 0;\n              }\n\n            case 1:\n              {\n                if (!a) { a = 6; }else { break a; }\n                return a | 0;\n              }\n\n            default:\n              break a;\n          }\n\n        default:\n\n      } } while (0);\n\n      i = 7;\n      return i | 0;\n    }\n\n    function Ja(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = a + 8 | 0;\n      f = b[h >> 2] | 0;\n      g = (b[a >> 2] | 0) - f | 0;\n      i = a + 4 | 0;\n      f = (b[i >> 2] | 0) - f | 0;\n\n      do { if (g >>> 0 > 715827881 | f >>> 0 > 715827881) {\n        d = (g | 0) > 0;\n\n        if (d) {\n          if ((2147483647 - g | 0) < (g | 0)) {\n            i = 1;\n            return i | 0;\n          }\n\n          if ((2147483647 - (g << 1) | 0) < (g | 0)) {\n            i = 1;\n            return i | 0;\n          }\n        } else {\n          if ((-2147483648 - g | 0) > (g | 0)) {\n            i = 1;\n            return i | 0;\n          }\n\n          if ((-2147483648 - (g << 1) | 0) > (g | 0)) {\n            i = 1;\n            return i | 0;\n          }\n        }\n\n        c = g * 3 | 0;\n\n        if ((f | 0) > 0) {\n          if ((2147483647 - f | 0) < (f | 0)) {\n            i = 1;\n            return i | 0;\n          }\n        } else if ((-2147483648 - f | 0) > (f | 0)) {\n          i = 1;\n          return i | 0;\n        }\n\n        e = f << 1;\n\n        if ((g | 0) > -1) {\n          if ((c | -2147483648 | 0) >= (f | 0)) {\n            i = 1;\n            return i | 0;\n          }\n        } else if ((c ^ -2147483648 | 0) < (f | 0)) {\n          i = 1;\n          return i | 0;\n        }\n\n        if (d) {\n          if ((2147483647 - g | 0) < (e | 0)) { c = 1; }else {\n            d = e;\n            break;\n          }\n          return c | 0;\n        } else {\n          if ((-2147483648 - g | 0) > (e | 0)) { c = 1; }else {\n            d = e;\n            break;\n          }\n          return c | 0;\n        }\n      } else {\n        d = f << 1;\n        c = g * 3 | 0;\n      } } while (0);\n\n      e = hd(+(c - f | 0) / 7.0) | 0;\n      b[a >> 2] = e;\n      f = hd(+(d + g | 0) / 7.0) | 0;\n      b[i >> 2] = f;\n      b[h >> 2] = 0;\n      d = (f | 0) < (e | 0);\n      c = d ? e : f;\n      d = d ? f : e;\n\n      do { if ((d | 0) < 0) {\n        if ((c | 0) > 0) {\n          if ((c | -2147483648 | 0) < (d | 0) & ((d | 0) != -2147483648 & (2147483647 - c | 0) >= (d | 0))) { break; }\n          I(23313, 22444, 355, 22455);\n        }\n\n        if ((d | 0) == -2147483648 | (-2147483648 - c | 0) > (d | 0)) { I(23313, 22444, 355, 22455); }\n\n        if ((c | 0) > -1) {\n          if ((c | -2147483648 | 0) < (d | 0)) { break; }\n          I(23313, 22444, 355, 22455);\n        } else {\n          if ((c ^ -2147483648 | 0) >= (d | 0)) { break; }\n          I(23313, 22444, 355, 22455);\n        }\n      } } while (0);\n\n      c = f - e | 0;\n\n      if ((e | 0) < 0) {\n        d = 0 - e | 0;\n        b[i >> 2] = c;\n        b[h >> 2] = d;\n        b[a >> 2] = 0;\n        e = 0;\n      } else {\n        c = f;\n        d = 0;\n      }\n\n      if ((c | 0) < 0) {\n        e = e - c | 0;\n        b[a >> 2] = e;\n        d = d - c | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = 0;\n        c = 0;\n      }\n\n      g = e - d | 0;\n      f = c - d | 0;\n\n      if ((d | 0) < 0) {\n        b[a >> 2] = g;\n        b[i >> 2] = f;\n        b[h >> 2] = 0;\n        c = f;\n        f = g;\n        d = 0;\n      } else { f = e; }\n\n      e = (c | 0) < (f | 0) ? c : f;\n      e = (d | 0) < (e | 0) ? d : e;\n\n      if ((e | 0) <= 0) {\n        i = 0;\n        return i | 0;\n      }\n\n      b[a >> 2] = f - e;\n      b[i >> 2] = c - e;\n      b[h >> 2] = d - e;\n      i = 0;\n      return i | 0;\n    }\n\n    function Ka(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = a + 8 | 0;\n      f = b[h >> 2] | 0;\n      g = (b[a >> 2] | 0) - f | 0;\n      i = a + 4 | 0;\n      f = (b[i >> 2] | 0) - f | 0;\n\n      do { if (g >>> 0 > 715827881 | f >>> 0 > 715827881) {\n        d = (g | 0) > 0;\n\n        if (d) {\n          if ((2147483647 - g | 0) < (g | 0)) {\n            i = 1;\n            return i | 0;\n          }\n        } else if ((-2147483648 - g | 0) > (g | 0)) {\n          i = 1;\n          return i | 0;\n        }\n\n        c = g << 1;\n\n        if ((f | 0) > 0) {\n          if ((2147483647 - f | 0) < (f | 0)) {\n            i = 1;\n            return i | 0;\n          }\n\n          if ((2147483647 - (f << 1) | 0) < (f | 0)) {\n            i = 1;\n            return i | 0;\n          }\n        } else {\n          if ((-2147483648 - f | 0) > (f | 0)) {\n            i = 1;\n            return i | 0;\n          }\n\n          if ((-2147483648 - (f << 1) | 0) > (f | 0)) {\n            i = 1;\n            return i | 0;\n          }\n        }\n\n        e = f * 3 | 0;\n\n        if (d) {\n          if ((2147483647 - c | 0) < (f | 0)) {\n            i = 1;\n            return i | 0;\n          }\n        } else if ((-2147483648 - c | 0) > (f | 0)) {\n          i = 1;\n          return i | 0;\n        }\n\n        if ((f | 0) > -1) {\n          if ((e | -2147483648 | 0) < (g | 0)) {\n            d = e;\n            break;\n          } else { c = 1; }\n\n          return c | 0;\n        } else {\n          if ((e ^ -2147483648 | 0) < (g | 0)) { c = 1; }else {\n            d = e;\n            break;\n          }\n          return c | 0;\n        }\n      } else {\n        d = f * 3 | 0;\n        c = g << 1;\n      } } while (0);\n\n      e = hd(+(c + f | 0) / 7.0) | 0;\n      b[a >> 2] = e;\n      f = hd(+(d - g | 0) / 7.0) | 0;\n      b[i >> 2] = f;\n      b[h >> 2] = 0;\n      d = (f | 0) < (e | 0);\n      c = d ? e : f;\n      d = d ? f : e;\n\n      do { if ((d | 0) < 0) {\n        if ((c | 0) > 0) {\n          if ((c | -2147483648 | 0) < (d | 0) & ((d | 0) != -2147483648 & (2147483647 - c | 0) >= (d | 0))) { break; }\n          I(23313, 22444, 404, 22469);\n        }\n\n        if ((d | 0) == -2147483648 | (-2147483648 - c | 0) > (d | 0)) { I(23313, 22444, 404, 22469); }\n\n        if ((c | 0) > -1) {\n          if ((c | -2147483648 | 0) < (d | 0)) { break; }\n          I(23313, 22444, 404, 22469);\n        } else {\n          if ((c ^ -2147483648 | 0) >= (d | 0)) { break; }\n          I(23313, 22444, 404, 22469);\n        }\n      } } while (0);\n\n      c = f - e | 0;\n\n      if ((e | 0) < 0) {\n        d = 0 - e | 0;\n        b[i >> 2] = c;\n        b[h >> 2] = d;\n        b[a >> 2] = 0;\n        e = 0;\n      } else {\n        c = f;\n        d = 0;\n      }\n\n      if ((c | 0) < 0) {\n        e = e - c | 0;\n        b[a >> 2] = e;\n        d = d - c | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = 0;\n        c = 0;\n      }\n\n      g = e - d | 0;\n      f = c - d | 0;\n\n      if ((d | 0) < 0) {\n        b[a >> 2] = g;\n        b[i >> 2] = f;\n        b[h >> 2] = 0;\n        c = f;\n        f = g;\n        d = 0;\n      } else { f = e; }\n\n      e = (c | 0) < (f | 0) ? c : f;\n      e = (d | 0) < (e | 0) ? d : e;\n\n      if ((e | 0) <= 0) {\n        i = 0;\n        return i | 0;\n      }\n\n      b[a >> 2] = f - e;\n      b[i >> 2] = c - e;\n      b[h >> 2] = d - e;\n      i = 0;\n      return i | 0;\n    }\n\n    function La(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = a + 8 | 0;\n      d = b[h >> 2] | 0;\n      c = (b[a >> 2] | 0) - d | 0;\n      i = a + 4 | 0;\n      d = (b[i >> 2] | 0) - d | 0;\n      e = hd(+((c * 3 | 0) - d | 0) / 7.0) | 0;\n      b[a >> 2] = e;\n      c = hd(+((d << 1) + c | 0) / 7.0) | 0;\n      b[i >> 2] = c;\n      b[h >> 2] = 0;\n      d = c - e | 0;\n\n      if ((e | 0) < 0) {\n        g = 0 - e | 0;\n        b[i >> 2] = d;\n        b[h >> 2] = g;\n        b[a >> 2] = 0;\n        c = d;\n        e = 0;\n        d = g;\n      } else { d = 0; }\n\n      if ((c | 0) < 0) {\n        e = e - c | 0;\n        b[a >> 2] = e;\n        d = d - c | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = 0;\n        c = 0;\n      }\n\n      g = e - d | 0;\n      f = c - d | 0;\n\n      if ((d | 0) < 0) {\n        b[a >> 2] = g;\n        b[i >> 2] = f;\n        b[h >> 2] = 0;\n        c = f;\n        f = g;\n        d = 0;\n      } else { f = e; }\n\n      e = (c | 0) < (f | 0) ? c : f;\n      e = (d | 0) < (e | 0) ? d : e;\n      if ((e | 0) <= 0) { return; }\n      b[a >> 2] = f - e;\n      b[i >> 2] = c - e;\n      b[h >> 2] = d - e;\n      return;\n    }\n\n    function Ma(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = a + 8 | 0;\n      d = b[h >> 2] | 0;\n      c = (b[a >> 2] | 0) - d | 0;\n      i = a + 4 | 0;\n      d = (b[i >> 2] | 0) - d | 0;\n      e = hd(+((c << 1) + d | 0) / 7.0) | 0;\n      b[a >> 2] = e;\n      c = hd(+((d * 3 | 0) - c | 0) / 7.0) | 0;\n      b[i >> 2] = c;\n      b[h >> 2] = 0;\n      d = c - e | 0;\n\n      if ((e | 0) < 0) {\n        g = 0 - e | 0;\n        b[i >> 2] = d;\n        b[h >> 2] = g;\n        b[a >> 2] = 0;\n        c = d;\n        e = 0;\n        d = g;\n      } else { d = 0; }\n\n      if ((c | 0) < 0) {\n        e = e - c | 0;\n        b[a >> 2] = e;\n        d = d - c | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = 0;\n        c = 0;\n      }\n\n      g = e - d | 0;\n      f = c - d | 0;\n\n      if ((d | 0) < 0) {\n        b[a >> 2] = g;\n        b[i >> 2] = f;\n        b[h >> 2] = 0;\n        c = f;\n        f = g;\n        d = 0;\n      } else { f = e; }\n\n      e = (c | 0) < (f | 0) ? c : f;\n      e = (d | 0) < (e | 0) ? d : e;\n      if ((e | 0) <= 0) { return; }\n      b[a >> 2] = f - e;\n      b[i >> 2] = c - e;\n      b[h >> 2] = d - e;\n      return;\n    }\n\n    function Na(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      c = b[a >> 2] | 0;\n      h = a + 4 | 0;\n      d = b[h >> 2] | 0;\n      i = a + 8 | 0;\n      e = b[i >> 2] | 0;\n      f = d + (c * 3 | 0) | 0;\n      b[a >> 2] = f;\n      d = e + (d * 3 | 0) | 0;\n      b[h >> 2] = d;\n      c = (e * 3 | 0) + c | 0;\n      b[i >> 2] = c;\n      e = d - f | 0;\n\n      if ((f | 0) < 0) {\n        c = c - f | 0;\n        b[h >> 2] = e;\n        b[i >> 2] = c;\n        b[a >> 2] = 0;\n        d = e;\n        e = 0;\n      } else { e = f; }\n\n      if ((d | 0) < 0) {\n        e = e - d | 0;\n        b[a >> 2] = e;\n        c = c - d | 0;\n        b[i >> 2] = c;\n        b[h >> 2] = 0;\n        d = 0;\n      }\n\n      g = e - c | 0;\n      f = d - c | 0;\n\n      if ((c | 0) < 0) {\n        b[a >> 2] = g;\n        b[h >> 2] = f;\n        b[i >> 2] = 0;\n        e = g;\n        c = 0;\n      } else { f = d; }\n\n      d = (f | 0) < (e | 0) ? f : e;\n      d = (c | 0) < (d | 0) ? c : d;\n      if ((d | 0) <= 0) { return; }\n      b[a >> 2] = e - d;\n      b[h >> 2] = f - d;\n      b[i >> 2] = c - d;\n      return;\n    }\n\n    function Oa(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      f = b[a >> 2] | 0;\n      h = a + 4 | 0;\n      c = b[h >> 2] | 0;\n      i = a + 8 | 0;\n      d = b[i >> 2] | 0;\n      e = (c * 3 | 0) + f | 0;\n      f = d + (f * 3 | 0) | 0;\n      b[a >> 2] = f;\n      b[h >> 2] = e;\n      c = (d * 3 | 0) + c | 0;\n      b[i >> 2] = c;\n      d = e - f | 0;\n\n      if ((f | 0) < 0) {\n        c = c - f | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = c;\n        b[a >> 2] = 0;\n        f = 0;\n      } else { d = e; }\n\n      if ((d | 0) < 0) {\n        f = f - d | 0;\n        b[a >> 2] = f;\n        c = c - d | 0;\n        b[i >> 2] = c;\n        b[h >> 2] = 0;\n        d = 0;\n      }\n\n      g = f - c | 0;\n      e = d - c | 0;\n\n      if ((c | 0) < 0) {\n        b[a >> 2] = g;\n        b[h >> 2] = e;\n        b[i >> 2] = 0;\n        f = g;\n        c = 0;\n      } else { e = d; }\n\n      d = (e | 0) < (f | 0) ? e : f;\n      d = (c | 0) < (d | 0) ? c : d;\n      if ((d | 0) <= 0) { return; }\n      b[a >> 2] = f - d;\n      b[h >> 2] = e - d;\n      b[i >> 2] = c - d;\n      return;\n    }\n\n    function Pa(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      if ((c + -1 | 0) >>> 0 >= 6) { return; }\n      f = (b[15440 + (c * 12 | 0) >> 2] | 0) + (b[a >> 2] | 0) | 0;\n      b[a >> 2] = f;\n      i = a + 4 | 0;\n      e = (b[15440 + (c * 12 | 0) + 4 >> 2] | 0) + (b[i >> 2] | 0) | 0;\n      b[i >> 2] = e;\n      h = a + 8 | 0;\n      c = (b[15440 + (c * 12 | 0) + 8 >> 2] | 0) + (b[h >> 2] | 0) | 0;\n      b[h >> 2] = c;\n      d = e - f | 0;\n\n      if ((f | 0) < 0) {\n        c = c - f | 0;\n        b[i >> 2] = d;\n        b[h >> 2] = c;\n        b[a >> 2] = 0;\n        e = 0;\n      } else {\n        d = e;\n        e = f;\n      }\n\n      if ((d | 0) < 0) {\n        e = e - d | 0;\n        b[a >> 2] = e;\n        c = c - d | 0;\n        b[h >> 2] = c;\n        b[i >> 2] = 0;\n        d = 0;\n      }\n\n      g = e - c | 0;\n      f = d - c | 0;\n\n      if ((c | 0) < 0) {\n        b[a >> 2] = g;\n        b[i >> 2] = f;\n        b[h >> 2] = 0;\n        e = g;\n        c = 0;\n      } else { f = d; }\n\n      d = (f | 0) < (e | 0) ? f : e;\n      d = (c | 0) < (d | 0) ? c : d;\n      if ((d | 0) <= 0) { return; }\n      b[a >> 2] = e - d;\n      b[i >> 2] = f - d;\n      b[h >> 2] = c - d;\n      return;\n    }\n\n    function Qa(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      f = b[a >> 2] | 0;\n      h = a + 4 | 0;\n      c = b[h >> 2] | 0;\n      i = a + 8 | 0;\n      d = b[i >> 2] | 0;\n      e = c + f | 0;\n      f = d + f | 0;\n      b[a >> 2] = f;\n      b[h >> 2] = e;\n      c = d + c | 0;\n      b[i >> 2] = c;\n      d = e - f | 0;\n\n      if ((f | 0) < 0) {\n        c = c - f | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = c;\n        b[a >> 2] = 0;\n        e = 0;\n      } else {\n        d = e;\n        e = f;\n      }\n\n      if ((d | 0) < 0) {\n        e = e - d | 0;\n        b[a >> 2] = e;\n        c = c - d | 0;\n        b[i >> 2] = c;\n        b[h >> 2] = 0;\n        d = 0;\n      }\n\n      g = e - c | 0;\n      f = d - c | 0;\n\n      if ((c | 0) < 0) {\n        b[a >> 2] = g;\n        b[h >> 2] = f;\n        b[i >> 2] = 0;\n        e = g;\n        c = 0;\n      } else { f = d; }\n\n      d = (f | 0) < (e | 0) ? f : e;\n      d = (c | 0) < (d | 0) ? c : d;\n      if ((d | 0) <= 0) { return; }\n      b[a >> 2] = e - d;\n      b[h >> 2] = f - d;\n      b[i >> 2] = c - d;\n      return;\n    }\n\n    function Ra(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      c = b[a >> 2] | 0;\n      h = a + 4 | 0;\n      e = b[h >> 2] | 0;\n      i = a + 8 | 0;\n      d = b[i >> 2] | 0;\n      f = e + c | 0;\n      b[a >> 2] = f;\n      e = d + e | 0;\n      b[h >> 2] = e;\n      c = d + c | 0;\n      b[i >> 2] = c;\n      d = e - f | 0;\n\n      if ((f | 0) < 0) {\n        c = c - f | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = c;\n        b[a >> 2] = 0;\n        e = 0;\n      } else {\n        d = e;\n        e = f;\n      }\n\n      if ((d | 0) < 0) {\n        e = e - d | 0;\n        b[a >> 2] = e;\n        c = c - d | 0;\n        b[i >> 2] = c;\n        b[h >> 2] = 0;\n        d = 0;\n      }\n\n      g = e - c | 0;\n      f = d - c | 0;\n\n      if ((c | 0) < 0) {\n        b[a >> 2] = g;\n        b[h >> 2] = f;\n        b[i >> 2] = 0;\n        e = g;\n        c = 0;\n      } else { f = d; }\n\n      d = (f | 0) < (e | 0) ? f : e;\n      d = (c | 0) < (d | 0) ? c : d;\n      if ((d | 0) <= 0) { return; }\n      b[a >> 2] = e - d;\n      b[h >> 2] = f - d;\n      b[i >> 2] = c - d;\n      return;\n    }\n\n    function Sa(a) {\n      a = a | 0;\n\n      switch (a | 0) {\n        case 1:\n          {\n            a = 5;\n            break;\n          }\n\n        case 5:\n          {\n            a = 4;\n            break;\n          }\n\n        case 4:\n          {\n            a = 6;\n            break;\n          }\n\n        case 6:\n          {\n            a = 2;\n            break;\n          }\n\n        case 2:\n          {\n            a = 3;\n            break;\n          }\n\n        case 3:\n          {\n            a = 1;\n            break;\n          }\n\n        default:\n\n      }\n\n      return a | 0;\n    }\n\n    function Ta(a) {\n      a = a | 0;\n\n      switch (a | 0) {\n        case 1:\n          {\n            a = 3;\n            break;\n          }\n\n        case 3:\n          {\n            a = 2;\n            break;\n          }\n\n        case 2:\n          {\n            a = 6;\n            break;\n          }\n\n        case 6:\n          {\n            a = 4;\n            break;\n          }\n\n        case 4:\n          {\n            a = 5;\n            break;\n          }\n\n        case 5:\n          {\n            a = 1;\n            break;\n          }\n\n        default:\n\n      }\n\n      return a | 0;\n    }\n\n    function Ua(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      c = b[a >> 2] | 0;\n      h = a + 4 | 0;\n      d = b[h >> 2] | 0;\n      i = a + 8 | 0;\n      e = b[i >> 2] | 0;\n      f = d + (c << 1) | 0;\n      b[a >> 2] = f;\n      d = e + (d << 1) | 0;\n      b[h >> 2] = d;\n      c = (e << 1) + c | 0;\n      b[i >> 2] = c;\n      e = d - f | 0;\n\n      if ((f | 0) < 0) {\n        c = c - f | 0;\n        b[h >> 2] = e;\n        b[i >> 2] = c;\n        b[a >> 2] = 0;\n        d = e;\n        e = 0;\n      } else { e = f; }\n\n      if ((d | 0) < 0) {\n        e = e - d | 0;\n        b[a >> 2] = e;\n        c = c - d | 0;\n        b[i >> 2] = c;\n        b[h >> 2] = 0;\n        d = 0;\n      }\n\n      g = e - c | 0;\n      f = d - c | 0;\n\n      if ((c | 0) < 0) {\n        b[a >> 2] = g;\n        b[h >> 2] = f;\n        b[i >> 2] = 0;\n        e = g;\n        c = 0;\n      } else { f = d; }\n\n      d = (f | 0) < (e | 0) ? f : e;\n      d = (c | 0) < (d | 0) ? c : d;\n      if ((d | 0) <= 0) { return; }\n      b[a >> 2] = e - d;\n      b[h >> 2] = f - d;\n      b[i >> 2] = c - d;\n      return;\n    }\n\n    function Va(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      f = b[a >> 2] | 0;\n      h = a + 4 | 0;\n      c = b[h >> 2] | 0;\n      i = a + 8 | 0;\n      d = b[i >> 2] | 0;\n      e = (c << 1) + f | 0;\n      f = d + (f << 1) | 0;\n      b[a >> 2] = f;\n      b[h >> 2] = e;\n      c = (d << 1) + c | 0;\n      b[i >> 2] = c;\n      d = e - f | 0;\n\n      if ((f | 0) < 0) {\n        c = c - f | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = c;\n        b[a >> 2] = 0;\n        f = 0;\n      } else { d = e; }\n\n      if ((d | 0) < 0) {\n        f = f - d | 0;\n        b[a >> 2] = f;\n        c = c - d | 0;\n        b[i >> 2] = c;\n        b[h >> 2] = 0;\n        d = 0;\n      }\n\n      g = f - c | 0;\n      e = d - c | 0;\n\n      if ((c | 0) < 0) {\n        b[a >> 2] = g;\n        b[h >> 2] = e;\n        b[i >> 2] = 0;\n        f = g;\n        c = 0;\n      } else { e = d; }\n\n      d = (e | 0) < (f | 0) ? e : f;\n      d = (c | 0) < (d | 0) ? c : d;\n      if ((d | 0) <= 0) { return; }\n      b[a >> 2] = f - d;\n      b[h >> 2] = e - d;\n      b[i >> 2] = c - d;\n      return;\n    }\n\n    function Wa(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = (b[a >> 2] | 0) - (b[c >> 2] | 0) | 0;\n      i = (h | 0) < 0;\n      e = (b[a + 4 >> 2] | 0) - (b[c + 4 >> 2] | 0) - (i ? h : 0) | 0;\n      g = (e | 0) < 0;\n      f = (i ? 0 - h | 0 : 0) + (b[a + 8 >> 2] | 0) - (b[c + 8 >> 2] | 0) + (g ? 0 - e | 0 : 0) | 0;\n      a = (f | 0) < 0;\n      c = a ? 0 : f;\n      d = (g ? 0 : e) - (a ? f : 0) | 0;\n      f = (i ? 0 : h) - (g ? e : 0) - (a ? f : 0) | 0;\n      a = (d | 0) < (f | 0) ? d : f;\n      a = (c | 0) < (a | 0) ? c : a;\n      e = (a | 0) > 0;\n      c = c - (e ? a : 0) | 0;\n      d = d - (e ? a : 0) | 0;\n      a = f - (e ? a : 0) | 0;\n      a = (a | 0) > -1 ? a : 0 - a | 0;\n      d = (d | 0) > -1 ? d : 0 - d | 0;\n      c = (c | 0) > -1 ? c : 0 - c | 0;\n      c = (d | 0) > (c | 0) ? d : c;\n      return ((a | 0) > (c | 0) ? a : c) | 0;\n    }\n\n    function Xa(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0;\n      d = b[a + 8 >> 2] | 0;\n      b[c >> 2] = (b[a >> 2] | 0) - d;\n      b[c + 4 >> 2] = (b[a + 4 >> 2] | 0) - d;\n      return;\n    }\n\n    function Ya(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      e = b[a >> 2] | 0;\n      b[c >> 2] = e;\n      f = b[a + 4 >> 2] | 0;\n      h = c + 4 | 0;\n      b[h >> 2] = f;\n      i = c + 8 | 0;\n      b[i >> 2] = 0;\n      d = (f | 0) < (e | 0);\n      a = d ? e : f;\n      d = d ? f : e;\n\n      do { if ((d | 0) < 0) {\n        if ((a | 0) > 0) {\n          if ((a | -2147483648 | 0) < (d | 0) & ((d | 0) != -2147483648 & (2147483647 - a | 0) >= (d | 0))) { break; }else { a = 1; }\n          return a | 0;\n        }\n\n        if ((d | 0) == -2147483648 | (-2147483648 - a | 0) > (d | 0)) {\n          c = 1;\n          return c | 0;\n        }\n\n        if ((a | 0) > -1) {\n          if ((a | -2147483648 | 0) < (d | 0)) { break; }else { a = 1; }\n          return a | 0;\n        } else {\n          if ((a ^ -2147483648 | 0) < (d | 0)) { a = 1; }else { break; }\n          return a | 0;\n        }\n      } } while (0);\n\n      a = f - e | 0;\n\n      if ((e | 0) < 0) {\n        d = 0 - e | 0;\n        b[h >> 2] = a;\n        b[i >> 2] = d;\n        b[c >> 2] = 0;\n        e = 0;\n      } else {\n        a = f;\n        d = 0;\n      }\n\n      if ((a | 0) < 0) {\n        e = e - a | 0;\n        b[c >> 2] = e;\n        d = d - a | 0;\n        b[i >> 2] = d;\n        b[h >> 2] = 0;\n        a = 0;\n      }\n\n      g = e - d | 0;\n      f = a - d | 0;\n\n      if ((d | 0) < 0) {\n        b[c >> 2] = g;\n        b[h >> 2] = f;\n        b[i >> 2] = 0;\n        a = f;\n        f = g;\n        d = 0;\n      } else { f = e; }\n\n      e = (a | 0) < (f | 0) ? a : f;\n      e = (d | 0) < (e | 0) ? d : e;\n\n      if ((e | 0) <= 0) {\n        c = 0;\n        return c | 0;\n      }\n\n      b[c >> 2] = f - e;\n      b[h >> 2] = a - e;\n      b[i >> 2] = d - e;\n      c = 0;\n      return c | 0;\n    }\n\n    function Za(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0;\n      c = a + 8 | 0;\n      f = b[c >> 2] | 0;\n      d = f - (b[a >> 2] | 0) | 0;\n      b[a >> 2] = d;\n      e = a + 4 | 0;\n      a = (b[e >> 2] | 0) - f | 0;\n      b[e >> 2] = a;\n      b[c >> 2] = 0 - (a + d);\n      return;\n    }\n\n    function _a(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      d = b[a >> 2] | 0;\n      c = 0 - d | 0;\n      b[a >> 2] = c;\n      h = a + 8 | 0;\n      b[h >> 2] = 0;\n      i = a + 4 | 0;\n      e = b[i >> 2] | 0;\n      f = e + d | 0;\n\n      if ((d | 0) > 0) {\n        b[i >> 2] = f;\n        b[h >> 2] = d;\n        b[a >> 2] = 0;\n        c = 0;\n        e = f;\n      } else { d = 0; }\n\n      if ((e | 0) < 0) {\n        g = c - e | 0;\n        b[a >> 2] = g;\n        d = d - e | 0;\n        b[h >> 2] = d;\n        b[i >> 2] = 0;\n        f = g - d | 0;\n        c = 0 - d | 0;\n\n        if ((d | 0) < 0) {\n          b[a >> 2] = f;\n          b[i >> 2] = c;\n          b[h >> 2] = 0;\n          e = c;\n          d = 0;\n        } else {\n          e = 0;\n          f = g;\n        }\n      } else { f = c; }\n\n      c = (e | 0) < (f | 0) ? e : f;\n      c = (d | 0) < (c | 0) ? d : c;\n      if ((c | 0) <= 0) { return; }\n      b[a >> 2] = f - c;\n      b[i >> 2] = e - c;\n      b[h >> 2] = d - c;\n      return;\n    }\n\n    function $a(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0;\n      m = T;\n      T = T + 64 | 0;\n      l = m;\n      i = m + 56 | 0;\n\n      if (!(0 == 0 & (c & 2013265920 | 0) == 134217728 & (0 == 0 & (e & 2013265920 | 0) == 134217728))) {\n        f = 5;\n        T = m;\n        return f | 0;\n      }\n\n      if ((a | 0) == (d | 0) & (c | 0) == (e | 0)) {\n        b[f >> 2] = 0;\n        f = 0;\n        T = m;\n        return f | 0;\n      }\n\n      h = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      h = h & 15;\n      k = vd(d | 0, e | 0, 52) | 0;\n      H() | 0;\n\n      if ((h | 0) != (k & 15 | 0)) {\n        f = 12;\n        T = m;\n        return f | 0;\n      }\n\n      g = h + -1 | 0;\n\n      if (h >>> 0 > 1) {\n        vb(a, c, g, l) | 0;\n        vb(d, e, g, i) | 0;\n        k = l;\n        j = b[k >> 2] | 0;\n        k = b[k + 4 >> 2] | 0;\n\n        a: do { if ((j | 0) == (b[i >> 2] | 0) ? (k | 0) == (b[i + 4 >> 2] | 0) : 0) {\n          h = (h ^ 15) * 3 | 0;\n          g = vd(a | 0, c | 0, h | 0) | 0;\n          H() | 0;\n          g = g & 7;\n          h = vd(d | 0, e | 0, h | 0) | 0;\n          H() | 0;\n          h = h & 7;\n\n          do { if (!((g | 0) == 0 | (h | 0) == 0)) {\n            if ((g | 0) == 7) { g = 5; }else {\n              if ((g | 0) == 1 | (h | 0) == 1 ? xb(j, k) | 0 : 0) {\n                g = 5;\n                break;\n              }\n\n              if ((b[15536 + (g << 2) >> 2] | 0) != (h | 0) ? (b[15568 + (g << 2) >> 2] | 0) != (h | 0) : 0) { break a; }\n              b[f >> 2] = 1;\n              g = 0;\n            }\n          } else {\n            b[f >> 2] = 1;\n            g = 0;\n          } } while (0);\n\n          f = g;\n          T = m;\n          return f | 0;\n        } } while (0);\n      }\n\n      g = l;\n      h = g + 56 | 0;\n\n      do {\n        b[g >> 2] = 0;\n        g = g + 4 | 0;\n      } while ((g | 0) < (h | 0));\n\n      aa(a, c, 1, l) | 0;\n      c = l;\n\n      if (((((!((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0) ? (c = l + 8 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) ? (c = l + 16 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) ? (c = l + 24 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) ? (c = l + 32 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) ? (c = l + 40 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) {\n        g = l + 48 | 0;\n        g = ((b[g >> 2] | 0) == (d | 0) ? (b[g + 4 >> 2] | 0) == (e | 0) : 0) & 1;\n      } else { g = 1; }\n\n      b[f >> 2] = g;\n      f = 0;\n      T = m;\n      return f | 0;\n    }\n\n    function ab(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      d = fa(a, c, d, e) | 0;\n\n      if ((d | 0) == 7) {\n        f = 11;\n        return f | 0;\n      }\n\n      e = wd(d | 0, 0, 56) | 0;\n      c = c & -2130706433 | (H() | 0) | 268435456;\n      b[f >> 2] = a | e;\n      b[f + 4 >> 2] = c;\n      f = 0;\n      return f | 0;\n    }\n\n    function bb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n\n      if (!(0 == 0 & (c & 2013265920 | 0) == 268435456)) {\n        d = 6;\n        return d | 0;\n      }\n\n      b[d >> 2] = a;\n      b[d + 4 >> 2] = c & -2130706433 | 134217728;\n      d = 0;\n      return d | 0;\n    }\n\n    function cb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0;\n      f = T;\n      T = T + 16 | 0;\n      e = f;\n      b[e >> 2] = 0;\n\n      if (!(0 == 0 & (c & 2013265920 | 0) == 268435456)) {\n        e = 6;\n        T = f;\n        return e | 0;\n      }\n\n      g = vd(a | 0, c | 0, 56) | 0;\n      H() | 0;\n      e = ea(a, c & -2130706433 | 134217728, g & 7, e, d) | 0;\n      T = f;\n      return e | 0;\n    }\n\n    function db(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0;\n      c = vd(a | 0, b | 0, 56) | 0;\n      H() | 0;\n\n      switch (c & 7) {\n        case 0:\n        case 7:\n          {\n            c = 0;\n            return c | 0;\n          }\n\n        default:\n\n      }\n\n      c = b & -2130706433 | 134217728;\n\n      if (!(0 == 0 & (b & 2013265920 | 0) == 268435456)) {\n        c = 0;\n        return c | 0;\n      }\n\n      if (0 == 0 & (b & 117440512 | 0) == 16777216 & (xb(a, c) | 0) != 0) {\n        c = 0;\n        return c | 0;\n      }\n\n      c = ub(a, c) | 0;\n      return c | 0;\n    }\n\n    function eb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0;\n      f = T;\n      T = T + 16 | 0;\n      e = f;\n\n      if (!(0 == 0 & (c & 2013265920 | 0) == 268435456)) {\n        e = 6;\n        T = f;\n        return e | 0;\n      }\n\n      g = c & -2130706433 | 134217728;\n      h = d;\n      b[h >> 2] = a;\n      b[h + 4 >> 2] = g;\n      b[e >> 2] = 0;\n      c = vd(a | 0, c | 0, 56) | 0;\n      H() | 0;\n      e = ea(a, g, c & 7, e, d + 8 | 0) | 0;\n      T = f;\n      return e | 0;\n    }\n\n    function fb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0;\n      f = (xb(a, c) | 0) == 0;\n      c = c & -2130706433;\n      e = d;\n      b[e >> 2] = f ? a : 0;\n      b[e + 4 >> 2] = f ? c | 285212672 : 0;\n      e = d + 8 | 0;\n      b[e >> 2] = a;\n      b[e + 4 >> 2] = c | 301989888;\n      e = d + 16 | 0;\n      b[e >> 2] = a;\n      b[e + 4 >> 2] = c | 318767104;\n      e = d + 24 | 0;\n      b[e >> 2] = a;\n      b[e + 4 >> 2] = c | 335544320;\n      e = d + 32 | 0;\n      b[e >> 2] = a;\n      b[e + 4 >> 2] = c | 352321536;\n      d = d + 40 | 0;\n      b[d >> 2] = a;\n      b[d + 4 >> 2] = c | 369098752;\n      return 0;\n    }\n\n    function gb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0;\n      h = T;\n      T = T + 16 | 0;\n      f = h;\n      g = c & -2130706433 | 134217728;\n\n      if (!(0 == 0 & (c & 2013265920 | 0) == 268435456)) {\n        g = 6;\n        T = h;\n        return g | 0;\n      }\n\n      e = vd(a | 0, c | 0, 56) | 0;\n      H() | 0;\n      e = Uc(a, g, e & 7) | 0;\n\n      if ((e | 0) == -1) {\n        b[d >> 2] = 0;\n        g = 6;\n        T = h;\n        return g | 0;\n      }\n\n      if (Ob(a, g, f) | 0) { I(23313, 22484, 282, 22499); }\n      c = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      c = c & 15;\n      if (!(xb(a, g) | 0)) { qb(f, c, e, 2, d); }else { mb(f, c, e, 2, d); }\n      g = 0;\n      T = h;\n      return g | 0;\n    }\n\n    function hb(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0;\n      d = T;\n      T = T + 16 | 0;\n      e = d;\n      ib(a, b, c, e);\n      Ca(e, c + 4 | 0);\n      T = d;\n      return;\n    }\n\n    function ib(a, c, d, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      f = f | 0;\n      var g = 0.0,\n          h = 0.0,\n          i = 0.0,\n          j = 0,\n          k = 0;\n      j = T;\n      T = T + 16 | 0;\n      k = j;\n      jb(a, d, k);\n      h = +w(+(1.0 - +e[k >> 3] * .5));\n\n      if (h < 1.0e-16) {\n        b[f >> 2] = 0;\n        b[f + 4 >> 2] = 0;\n        b[f + 8 >> 2] = 0;\n        b[f + 12 >> 2] = 0;\n        T = j;\n        return;\n      }\n\n      k = b[d >> 2] | 0;\n      g = +e[15920 + (k * 24 | 0) >> 3];\n      g = +Zb(g - +Zb(+cc(15600 + (k << 4) | 0, a)));\n      if (!(Lb(c) | 0)) { i = g; }else { i = +Zb(g + -.3334731722518321); }\n      g = +v(+h) / .381966011250105;\n\n      if ((c | 0) > 0) {\n        a = 0;\n\n        do {\n          g = g * 2.6457513110645907;\n          a = a + 1 | 0;\n        } while ((a | 0) != (c | 0));\n      }\n\n      h = +t(+i) * g;\n      e[f >> 3] = h;\n      i = +u(+i) * g;\n      e[f + 8 >> 3] = i;\n      T = j;\n      return;\n    }\n\n    function jb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0.0,\n          g = 0,\n          h = 0;\n      h = T;\n      T = T + 32 | 0;\n      g = h;\n      Tc(a, g);\n      b[c >> 2] = 0;\n      e[d >> 3] = 5.0;\n      f = +Sc(16400, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 0;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16424, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 1;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16448, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 2;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16472, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 3;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16496, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 4;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16520, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 5;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16544, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 6;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16568, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 7;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16592, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 8;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16616, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 9;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16640, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 10;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16664, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 11;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16688, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 12;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16712, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 13;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16736, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 14;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16760, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 15;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16784, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 16;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16808, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 17;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16832, g);\n\n      if (f < +e[d >> 3]) {\n        b[c >> 2] = 18;\n        e[d >> 3] = f;\n      }\n\n      f = +Sc(16856, g);\n\n      if (!(f < +e[d >> 3])) {\n        T = h;\n        return;\n      }\n\n      b[c >> 2] = 19;\n      e[d >> 3] = f;\n      T = h;\n      return;\n    }\n\n    function kb(a, c, d, f, g) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      f = f | 0;\n      g = g | 0;\n      var h = 0.0,\n          i = 0.0;\n      h = +Pc(a);\n\n      if (h < 1.0e-16) {\n        c = 15600 + (c << 4) | 0;\n        b[g >> 2] = b[c >> 2];\n        b[g + 4 >> 2] = b[c + 4 >> 2];\n        b[g + 8 >> 2] = b[c + 8 >> 2];\n        b[g + 12 >> 2] = b[c + 12 >> 2];\n        return;\n      }\n\n      i = +z(+ +e[a + 8 >> 3], + +e[a >> 3]);\n\n      if ((d | 0) > 0) {\n        a = 0;\n\n        do {\n          h = h / 2.6457513110645907;\n          a = a + 1 | 0;\n        } while ((a | 0) != (d | 0));\n      }\n\n      if (!f) {\n        h = +y(+(h * .381966011250105));\n        if (Lb(d) | 0) { i = +Zb(i + .3334731722518321); }\n      } else {\n        h = h / 3.0;\n        d = (Lb(d) | 0) == 0;\n        h = +y(+((d ? h : h / 2.6457513110645907) * .381966011250105));\n      }\n\n      dc(15600 + (c << 4) | 0, +Zb(+e[15920 + (c * 24 | 0) >> 3] - i), h, g);\n      return;\n    }\n\n    function lb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0;\n      e = T;\n      T = T + 16 | 0;\n      f = e;\n      Ea(a + 4 | 0, f);\n      kb(f, b[a >> 2] | 0, c, 0, d);\n      T = e;\n      return;\n    }\n\n    function mb(a, c, d, f, g) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      f = f | 0;\n      g = g | 0;\n      var h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0,\n          v = 0,\n          w = 0,\n          x = 0,\n          y = 0,\n          z = 0,\n          A = 0,\n          B = 0,\n          C = 0,\n          D = 0,\n          E = 0,\n          F = 0,\n          G = 0,\n          H = 0.0,\n          J = 0.0;\n      G = T;\n      T = T + 272 | 0;\n      h = G + 256 | 0;\n      u = G + 240 | 0;\n      D = G;\n      E = G + 224 | 0;\n      F = G + 208 | 0;\n      v = G + 176 | 0;\n      w = G + 160 | 0;\n      x = G + 192 | 0;\n      y = G + 144 | 0;\n      z = G + 128 | 0;\n      A = G + 112 | 0;\n      B = G + 96 | 0;\n      C = G + 80 | 0;\n      b[h >> 2] = c;\n      b[u >> 2] = b[a >> 2];\n      b[u + 4 >> 2] = b[a + 4 >> 2];\n      b[u + 8 >> 2] = b[a + 8 >> 2];\n      b[u + 12 >> 2] = b[a + 12 >> 2];\n      nb(u, h, D);\n      b[g >> 2] = 0;\n      u = f + d + ((f | 0) == 5 & 1) | 0;\n\n      if ((u | 0) <= (d | 0)) {\n        T = G;\n        return;\n      }\n\n      k = b[h >> 2] | 0;\n      l = E + 4 | 0;\n      m = v + 4 | 0;\n      n = d + 5 | 0;\n      o = 16880 + (k << 2) | 0;\n      p = 16960 + (k << 2) | 0;\n      q = z + 8 | 0;\n      r = A + 8 | 0;\n      s = B + 8 | 0;\n      t = F + 4 | 0;\n      j = d;\n\n      a: while (1) {\n        i = D + (((j | 0) % 5 | 0) << 4) | 0;\n        b[F >> 2] = b[i >> 2];\n        b[F + 4 >> 2] = b[i + 4 >> 2];\n        b[F + 8 >> 2] = b[i + 8 >> 2];\n        b[F + 12 >> 2] = b[i + 12 >> 2];\n\n        do {} while ((ob(F, k, 0, 1) | 0) == 2);\n\n        if ((j | 0) > (d | 0) & (Lb(c) | 0) != 0) {\n          b[v >> 2] = b[F >> 2];\n          b[v + 4 >> 2] = b[F + 4 >> 2];\n          b[v + 8 >> 2] = b[F + 8 >> 2];\n          b[v + 12 >> 2] = b[F + 12 >> 2];\n          Ea(l, w);\n          f = b[v >> 2] | 0;\n          h = b[17040 + (f * 80 | 0) + (b[E >> 2] << 2) >> 2] | 0;\n          b[v >> 2] = b[18640 + (f * 80 | 0) + (h * 20 | 0) >> 2];\n          i = b[18640 + (f * 80 | 0) + (h * 20 | 0) + 16 >> 2] | 0;\n\n          if ((i | 0) > 0) {\n            a = 0;\n\n            do {\n              Qa(m);\n              a = a + 1 | 0;\n            } while ((a | 0) < (i | 0));\n          }\n\n          i = 18640 + (f * 80 | 0) + (h * 20 | 0) + 4 | 0;\n          b[x >> 2] = b[i >> 2];\n          b[x + 4 >> 2] = b[i + 4 >> 2];\n          b[x + 8 >> 2] = b[i + 8 >> 2];\n          Ha(x, (b[o >> 2] | 0) * 3 | 0);\n          Fa(m, x, m);\n          Da(m);\n          Ea(m, y);\n          H = +(b[p >> 2] | 0);\n          e[z >> 3] = H * 3.0;\n          e[q >> 3] = 0.0;\n          J = H * -1.5;\n          e[A >> 3] = J;\n          e[r >> 3] = H * 2.598076211353316;\n          e[B >> 3] = J;\n          e[s >> 3] = H * -2.598076211353316;\n\n          switch (b[17040 + ((b[v >> 2] | 0) * 80 | 0) + (b[F >> 2] << 2) >> 2] | 0) {\n            case 1:\n              {\n                a = A;\n                f = z;\n                break;\n              }\n\n            case 3:\n              {\n                a = B;\n                f = A;\n                break;\n              }\n\n            case 2:\n              {\n                a = z;\n                f = B;\n                break;\n              }\n\n            default:\n              {\n                a = 12;\n                break a;\n              }\n          }\n\n          Qc(w, y, f, a, C);\n          kb(C, b[v >> 2] | 0, k, 1, g + 8 + (b[g >> 2] << 4) | 0);\n          b[g >> 2] = (b[g >> 2] | 0) + 1;\n        }\n\n        if ((j | 0) < (n | 0)) {\n          Ea(t, v);\n          kb(v, b[F >> 2] | 0, k, 1, g + 8 + (b[g >> 2] << 4) | 0);\n          b[g >> 2] = (b[g >> 2] | 0) + 1;\n        }\n        b[E >> 2] = b[F >> 2];\n        b[E + 4 >> 2] = b[F + 4 >> 2];\n        b[E + 8 >> 2] = b[F + 8 >> 2];\n        b[E + 12 >> 2] = b[F + 12 >> 2];\n        j = j + 1 | 0;\n\n        if ((j | 0) >= (u | 0)) {\n          a = 3;\n          break;\n        }\n      }\n\n      if ((a | 0) == 3) {\n        T = G;\n        return;\n      } else if ((a | 0) == 12) { I(22522, 22569, 571, 22579); }\n    }\n\n    function nb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      j = T;\n      T = T + 128 | 0;\n      e = j + 64 | 0;\n      f = j;\n      g = e;\n      h = 20240;\n      i = g + 60 | 0;\n\n      do {\n        b[g >> 2] = b[h >> 2];\n        g = g + 4 | 0;\n        h = h + 4 | 0;\n      } while ((g | 0) < (i | 0));\n\n      g = f;\n      h = 20304;\n      i = g + 60 | 0;\n\n      do {\n        b[g >> 2] = b[h >> 2];\n        g = g + 4 | 0;\n        h = h + 4 | 0;\n      } while ((g | 0) < (i | 0));\n\n      i = (Lb(b[c >> 2] | 0) | 0) == 0;\n      e = i ? e : f;\n      f = a + 4 | 0;\n      Ua(f);\n      Va(f);\n\n      if (Lb(b[c >> 2] | 0) | 0) {\n        Oa(f);\n        b[c >> 2] = (b[c >> 2] | 0) + 1;\n      }\n\n      b[d >> 2] = b[a >> 2];\n      c = d + 4 | 0;\n      Fa(f, e, c);\n      Da(c);\n      b[d + 16 >> 2] = b[a >> 2];\n      c = d + 20 | 0;\n      Fa(f, e + 12 | 0, c);\n      Da(c);\n      b[d + 32 >> 2] = b[a >> 2];\n      c = d + 36 | 0;\n      Fa(f, e + 24 | 0, c);\n      Da(c);\n      b[d + 48 >> 2] = b[a >> 2];\n      c = d + 52 | 0;\n      Fa(f, e + 36 | 0, c);\n      Da(c);\n      b[d + 64 >> 2] = b[a >> 2];\n      d = d + 68 | 0;\n      Fa(f, e + 48 | 0, d);\n      Da(d);\n      T = j;\n      return;\n    }\n\n    function ob(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0;\n      p = T;\n      T = T + 32 | 0;\n      n = p + 12 | 0;\n      i = p;\n      o = a + 4 | 0;\n      m = b[16960 + (c << 2) >> 2] | 0;\n      l = (e | 0) != 0;\n      m = l ? m * 3 | 0 : m;\n      f = b[o >> 2] | 0;\n      k = a + 8 | 0;\n      h = b[k >> 2] | 0;\n\n      if (l) {\n        g = a + 12 | 0;\n        e = b[g >> 2] | 0;\n        f = h + f + e | 0;\n\n        if ((f | 0) == (m | 0)) {\n          o = 1;\n          T = p;\n          return o | 0;\n        } else { j = g; }\n      } else {\n        j = a + 12 | 0;\n        e = b[j >> 2] | 0;\n        f = h + f + e | 0;\n      }\n\n      if ((f | 0) <= (m | 0)) {\n        o = 0;\n        T = p;\n        return o | 0;\n      }\n\n      do { if ((e | 0) > 0) {\n        e = b[a >> 2] | 0;\n\n        if ((h | 0) > 0) {\n          g = 18640 + (e * 80 | 0) + 60 | 0;\n          e = a;\n          break;\n        }\n\n        e = 18640 + (e * 80 | 0) + 40 | 0;\n\n        if (!d) {\n          g = e;\n          e = a;\n        } else {\n          Ba(n, m, 0, 0);\n          Ga(o, n, i);\n          Ra(i);\n          Fa(i, n, o);\n          g = e;\n          e = a;\n        }\n      } else {\n        g = 18640 + ((b[a >> 2] | 0) * 80 | 0) + 20 | 0;\n        e = a;\n      } } while (0);\n\n      b[e >> 2] = b[g >> 2];\n      f = g + 16 | 0;\n\n      if ((b[f >> 2] | 0) > 0) {\n        e = 0;\n\n        do {\n          Qa(o);\n          e = e + 1 | 0;\n        } while ((e | 0) < (b[f >> 2] | 0));\n      }\n\n      a = g + 4 | 0;\n      b[n >> 2] = b[a >> 2];\n      b[n + 4 >> 2] = b[a + 4 >> 2];\n      b[n + 8 >> 2] = b[a + 8 >> 2];\n      c = b[16880 + (c << 2) >> 2] | 0;\n      Ha(n, l ? c * 3 | 0 : c);\n      Fa(o, n, o);\n      Da(o);\n      if (l) { e = ((b[k >> 2] | 0) + (b[o >> 2] | 0) + (b[j >> 2] | 0) | 0) == (m | 0) ? 1 : 2; }else { e = 2; }\n      o = e;\n      T = p;\n      return o | 0;\n    }\n\n    function pb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0;\n\n      do { c = ob(a, b, 0, 1) | 0; } while ((c | 0) == 2);\n\n      return c | 0;\n    }\n\n    function qb(a, c, d, f, g) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      f = f | 0;\n      g = g | 0;\n      var h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0,\n          v = 0,\n          w = 0,\n          x = 0,\n          y = 0,\n          z = 0,\n          A = 0,\n          B = 0,\n          C = 0.0,\n          D = 0.0;\n      B = T;\n      T = T + 240 | 0;\n      h = B + 224 | 0;\n      x = B + 208 | 0;\n      y = B;\n      z = B + 192 | 0;\n      A = B + 176 | 0;\n      s = B + 160 | 0;\n      t = B + 144 | 0;\n      u = B + 128 | 0;\n      v = B + 112 | 0;\n      w = B + 96 | 0;\n      b[h >> 2] = c;\n      b[x >> 2] = b[a >> 2];\n      b[x + 4 >> 2] = b[a + 4 >> 2];\n      b[x + 8 >> 2] = b[a + 8 >> 2];\n      b[x + 12 >> 2] = b[a + 12 >> 2];\n      rb(x, h, y);\n      b[g >> 2] = 0;\n      r = f + d + ((f | 0) == 6 & 1) | 0;\n\n      if ((r | 0) <= (d | 0)) {\n        T = B;\n        return;\n      }\n\n      k = b[h >> 2] | 0;\n      l = d + 6 | 0;\n      m = 16960 + (k << 2) | 0;\n      n = t + 8 | 0;\n      o = u + 8 | 0;\n      p = v + 8 | 0;\n      q = z + 4 | 0;\n      i = 0;\n      j = d;\n      f = -1;\n\n      a: while (1) {\n        h = (j | 0) % 6 | 0;\n        a = y + (h << 4) | 0;\n        b[z >> 2] = b[a >> 2];\n        b[z + 4 >> 2] = b[a + 4 >> 2];\n        b[z + 8 >> 2] = b[a + 8 >> 2];\n        b[z + 12 >> 2] = b[a + 12 >> 2];\n        a = i;\n        i = ob(z, k, 0, 1) | 0;\n\n        if ((j | 0) > (d | 0) & (Lb(c) | 0) != 0 ? (a | 0) != 1 ? (b[z >> 2] | 0) != (f | 0) : 0 : 0) {\n          Ea(y + (((h + 5 | 0) % 6 | 0) << 4) + 4 | 0, A);\n          Ea(y + (h << 4) + 4 | 0, s);\n          C = +(b[m >> 2] | 0);\n          e[t >> 3] = C * 3.0;\n          e[n >> 3] = 0.0;\n          D = C * -1.5;\n          e[u >> 3] = D;\n          e[o >> 3] = C * 2.598076211353316;\n          e[v >> 3] = D;\n          e[p >> 3] = C * -2.598076211353316;\n          h = b[x >> 2] | 0;\n\n          switch (b[17040 + (h * 80 | 0) + (((f | 0) == (h | 0) ? b[z >> 2] | 0 : f) << 2) >> 2] | 0) {\n            case 1:\n              {\n                a = u;\n                f = t;\n                break;\n              }\n\n            case 3:\n              {\n                a = v;\n                f = u;\n                break;\n              }\n\n            case 2:\n              {\n                a = t;\n                f = v;\n                break;\n              }\n\n            default:\n              {\n                a = 8;\n                break a;\n              }\n          }\n\n          Qc(A, s, f, a, w);\n\n          if (!(Rc(A, w) | 0) ? !(Rc(s, w) | 0) : 0) {\n            kb(w, b[x >> 2] | 0, k, 1, g + 8 + (b[g >> 2] << 4) | 0);\n            b[g >> 2] = (b[g >> 2] | 0) + 1;\n          }\n        }\n\n        if ((j | 0) < (l | 0)) {\n          Ea(q, A);\n          kb(A, b[z >> 2] | 0, k, 1, g + 8 + (b[g >> 2] << 4) | 0);\n          b[g >> 2] = (b[g >> 2] | 0) + 1;\n        }\n\n        j = j + 1 | 0;\n\n        if ((j | 0) >= (r | 0)) {\n          a = 3;\n          break;\n        } else { f = b[z >> 2] | 0; }\n      }\n\n      if ((a | 0) == 3) {\n        T = B;\n        return;\n      } else if ((a | 0) == 8) { I(22606, 22569, 736, 22651); }\n    }\n\n    function rb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      j = T;\n      T = T + 160 | 0;\n      e = j + 80 | 0;\n      f = j;\n      g = e;\n      h = 20368;\n      i = g + 72 | 0;\n\n      do {\n        b[g >> 2] = b[h >> 2];\n        g = g + 4 | 0;\n        h = h + 4 | 0;\n      } while ((g | 0) < (i | 0));\n\n      g = f;\n      h = 20448;\n      i = g + 72 | 0;\n\n      do {\n        b[g >> 2] = b[h >> 2];\n        g = g + 4 | 0;\n        h = h + 4 | 0;\n      } while ((g | 0) < (i | 0));\n\n      i = (Lb(b[c >> 2] | 0) | 0) == 0;\n      e = i ? e : f;\n      f = a + 4 | 0;\n      Ua(f);\n      Va(f);\n\n      if (Lb(b[c >> 2] | 0) | 0) {\n        Oa(f);\n        b[c >> 2] = (b[c >> 2] | 0) + 1;\n      }\n\n      b[d >> 2] = b[a >> 2];\n      c = d + 4 | 0;\n      Fa(f, e, c);\n      Da(c);\n      b[d + 16 >> 2] = b[a >> 2];\n      c = d + 20 | 0;\n      Fa(f, e + 12 | 0, c);\n      Da(c);\n      b[d + 32 >> 2] = b[a >> 2];\n      c = d + 36 | 0;\n      Fa(f, e + 24 | 0, c);\n      Da(c);\n      b[d + 48 >> 2] = b[a >> 2];\n      c = d + 52 | 0;\n      Fa(f, e + 36 | 0, c);\n      Da(c);\n      b[d + 64 >> 2] = b[a >> 2];\n      c = d + 68 | 0;\n      Fa(f, e + 48 | 0, c);\n      Da(c);\n      b[d + 80 >> 2] = b[a >> 2];\n      d = d + 84 | 0;\n      Fa(f, e + 60 | 0, d);\n      Da(d);\n      T = j;\n      return;\n    }\n\n    function sb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      b = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      return b & 15 | 0;\n    }\n\n    function tb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      b = vd(a | 0, b | 0, 45) | 0;\n      H() | 0;\n      return b & 127 | 0;\n    }\n\n    function ub(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0;\n\n      if (!(0 == 0 & (b & -16777216 | 0) == 134217728)) {\n        b = 0;\n        return b | 0;\n      }\n\n      g = vd(a | 0, b | 0, 45) | 0;\n      H() | 0;\n      g = g & 127;\n\n      if (g >>> 0 > 121) {\n        b = 0;\n        return b | 0;\n      }\n\n      c = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      c = c & 15;\n\n      do { if (c | 0) {\n        e = 1;\n        d = 0;\n\n        while (1) {\n          f = vd(a | 0, b | 0, (15 - e | 0) * 3 | 0) | 0;\n          H() | 0;\n          f = f & 7;\n          if ((f | 0) != 0 & (d ^ 1)) { if ((f | 0) == 1 & (ma(g) | 0) != 0) {\n            h = 0;\n            d = 13;\n            break;\n          } else { d = 1; } }\n\n          if ((f | 0) == 7) {\n            h = 0;\n            d = 13;\n            break;\n          }\n\n          if (e >>> 0 < c >>> 0) { e = e + 1 | 0; }else {\n            d = 9;\n            break;\n          }\n        }\n\n        if ((d | 0) == 9) {\n          if ((c | 0) == 15) { h = 1; }else { break; }\n          return h | 0;\n        } else if ((d | 0) == 13) { return h | 0; }\n      } } while (0);\n\n      while (1) {\n        h = vd(a | 0, b | 0, (14 - c | 0) * 3 | 0) | 0;\n        H() | 0;\n\n        if (!((h & 7 | 0) == 7 & 0 == 0)) {\n          h = 0;\n          d = 13;\n          break;\n        }\n\n        if (c >>> 0 < 14) { c = c + 1 | 0; }else {\n          h = 1;\n          d = 13;\n          break;\n        }\n      }\n\n      if ((d | 0) == 13) { return h | 0; }\n      return 0;\n    }\n\n    function vb(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0;\n      g = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      g = g & 15;\n\n      if (d >>> 0 > 15) {\n        e = 4;\n        return e | 0;\n      }\n\n      if ((g | 0) < (d | 0)) {\n        e = 12;\n        return e | 0;\n      }\n\n      if ((g | 0) == (d | 0)) {\n        b[e >> 2] = a;\n        b[e + 4 >> 2] = c;\n        e = 0;\n        return e | 0;\n      }\n\n      f = wd(d | 0, 0, 52) | 0;\n      f = f | a;\n      a = H() | 0 | c & -15728641;\n      if ((g | 0) > (d | 0)) { do {\n        c = wd(7, 0, (14 - d | 0) * 3 | 0) | 0;\n        d = d + 1 | 0;\n        f = c | f;\n        a = H() | 0 | a;\n      } while ((d | 0) < (g | 0)); }\n      b[e >> 2] = f;\n      b[e + 4 >> 2] = a;\n      e = 0;\n      return e | 0;\n    }\n\n    function wb(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0;\n      g = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      g = g & 15;\n\n      if (!((d | 0) < 16 & (g | 0) <= (d | 0))) {\n        e = 4;\n        return e | 0;\n      }\n\n      f = d - g | 0;\n      d = vd(a | 0, c | 0, 45) | 0;\n      H() | 0;\n\n      a: do { if (!(ma(d & 127) | 0)) {\n        d = Cc(7, 0, f, ((f | 0) < 0) << 31 >> 31) | 0;\n        f = H() | 0;\n      } else {\n        b: do { if (g | 0) {\n          d = 1;\n\n          while (1) {\n            h = wd(7, 0, (15 - d | 0) * 3 | 0) | 0;\n            if (!((h & a | 0) == 0 & ((H() | 0) & c | 0) == 0)) { break; }\n            if (d >>> 0 < g >>> 0) { d = d + 1 | 0; }else { break b; }\n          }\n\n          d = Cc(7, 0, f, ((f | 0) < 0) << 31 >> 31) | 0;\n          f = H() | 0;\n          break a;\n        } } while (0);\n\n        d = Cc(7, 0, f, ((f | 0) < 0) << 31 >> 31) | 0;\n        d = rd(d | 0, H() | 0, 5, 0) | 0;\n        d = ld(d | 0, H() | 0, -5, -1) | 0;\n        d = pd(d | 0, H() | 0, 6, 0) | 0;\n        d = ld(d | 0, H() | 0, 1, 0) | 0;\n        f = H() | 0;\n      } } while (0);\n\n      h = e;\n      b[h >> 2] = d;\n      b[h + 4 >> 2] = f;\n      h = 0;\n      return h | 0;\n    }\n\n    function xb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0,\n          d = 0,\n          e = 0;\n      e = vd(a | 0, b | 0, 45) | 0;\n      H() | 0;\n\n      if (!(ma(e & 127) | 0)) {\n        e = 0;\n        return e | 0;\n      }\n\n      e = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      e = e & 15;\n\n      a: do { if (!e) { c = 0; }else {\n        d = 1;\n\n        while (1) {\n          c = vd(a | 0, b | 0, (15 - d | 0) * 3 | 0) | 0;\n          H() | 0;\n          c = c & 7;\n          if (c | 0) { break a; }\n          if (d >>> 0 < e >>> 0) { d = d + 1 | 0; }else {\n            c = 0;\n            break;\n          }\n        }\n      } } while (0);\n\n      e = (c | 0) == 0 & 1;\n      return e | 0;\n    }\n\n    function yb(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = T;\n      T = T + 16 | 0;\n      g = h;\n      Xb(g, a, c, d);\n      c = g;\n      a = b[c >> 2] | 0;\n      c = b[c + 4 >> 2] | 0;\n\n      if ((a | 0) == 0 & (c | 0) == 0) {\n        T = h;\n        return 0;\n      }\n\n      f = 0;\n      d = 0;\n\n      do {\n        i = e + (f << 3) | 0;\n        b[i >> 2] = a;\n        b[i + 4 >> 2] = c;\n        f = ld(f | 0, d | 0, 1, 0) | 0;\n        d = H() | 0;\n        Yb(g);\n        i = g;\n        a = b[i >> 2] | 0;\n        c = b[i + 4 >> 2] | 0;\n      } while (!((a | 0) == 0 & (c | 0) == 0));\n\n      T = h;\n      return 0;\n    }\n\n    function zb(a, b, c, d) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n\n      if ((d | 0) < (c | 0)) {\n        c = b;\n        d = a;\n        G(c | 0);\n        return d | 0;\n      }\n\n      c = wd(-1, -1, ((d - c | 0) * 3 | 0) + 3 | 0) | 0;\n      d = wd(~c | 0, ~(H() | 0) | 0, (15 - d | 0) * 3 | 0) | 0;\n      c = ~(H() | 0) & b;\n      d = ~d & a;\n      G(c | 0);\n      return d | 0;\n    }\n\n    function Ab(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0;\n      f = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      f = f & 15;\n\n      if (!((d | 0) < 16 & (f | 0) <= (d | 0))) {\n        e = 4;\n        return e | 0;\n      }\n\n      if ((f | 0) < (d | 0)) {\n        f = wd(-1, -1, ((d + -1 - f | 0) * 3 | 0) + 3 | 0) | 0;\n        f = wd(~f | 0, ~(H() | 0) | 0, (15 - d | 0) * 3 | 0) | 0;\n        c = ~(H() | 0) & c;\n        a = ~f & a;\n      }\n\n      f = wd(d | 0, 0, 52) | 0;\n      d = c & -15728641 | (H() | 0);\n      b[e >> 2] = a | f;\n      b[e + 4 >> 2] = d;\n      e = 0;\n      return e | 0;\n    }\n\n    function Bb(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0,\n          v = 0,\n          w = 0,\n          x = 0,\n          y = 0,\n          z = 0;\n\n      if ((d | 0) == 0 & (e | 0) == 0) {\n        y = 0;\n        return y | 0;\n      }\n\n      f = a;\n      g = b[f >> 2] | 0;\n      f = b[f + 4 >> 2] | 0;\n\n      if (0 == 0 & (f & 15728640 | 0) == 0) {\n        if (!((e | 0) > 0 | (e | 0) == 0 & d >>> 0 > 0)) {\n          y = 0;\n          return y | 0;\n        }\n\n        y = c;\n        b[y >> 2] = g;\n        b[y + 4 >> 2] = f;\n\n        if ((d | 0) == 1 & (e | 0) == 0) {\n          y = 0;\n          return y | 0;\n        }\n\n        f = 1;\n\n        do {\n          w = a + (f << 3) | 0;\n          x = b[w + 4 >> 2] | 0;\n          y = c + (f << 3) | 0;\n          b[y >> 2] = b[w >> 2];\n          b[y + 4 >> 2] = x;\n          f = f + 1 | 0;\n        } while (0 < (e | 0) | 0 == (e | 0) & f >>> 0 < d >>> 0);\n\n        f = 0;\n        return f | 0;\n      }\n\n      v = d << 3;\n      x = id(v) | 0;\n\n      if (!x) {\n        y = 13;\n        return y | 0;\n      }\n\n      Ad(x | 0, a | 0, v | 0) | 0;\n      w = kd(d, 8) | 0;\n\n      if (!w) {\n        jd(x);\n        y = 13;\n        return y | 0;\n      }\n\n      a: do { if (d | 0) {\n        b: while (1) {\n          f = x;\n          s = b[f >> 2] | 0;\n          f = b[f + 4 >> 2] | 0;\n          t = vd(s | 0, f | 0, 52) | 0;\n          H() | 0;\n          t = t & 15;\n          u = t + -1 | 0;\n          r = (d | 0) > 0;\n\n          c: do { if ((t | 0) != 0 & r) {\n            o = ((d | 0) < 0) << 31 >> 31;\n            p = wd(u | 0, 0, 52) | 0;\n            q = H() | 0;\n\n            if (u >>> 0 > 15) {\n              if (!((s | 0) == 0 & (f | 0) == 0)) {\n                y = 17;\n                break b;\n              }\n\n              g = 0;\n\n              while (1) {\n                g = g + 1 | 0;\n                if ((g | 0) >= (d | 0)) { break c; }\n                e = x + (g << 3) | 0;\n                q = b[e >> 2] | 0;\n                e = b[e + 4 >> 2] | 0;\n\n                if (!((q | 0) == 0 & (e | 0) == 0)) {\n                  f = e;\n                  y = 17;\n                  break b;\n                }\n              }\n            }\n\n            g = 0;\n            a = s;\n            e = f;\n\n            while (1) {\n              if (!((a | 0) == 0 & (e | 0) == 0)) {\n                if (!(0 == 0 & (e & 117440512 | 0) == 0)) {\n                  y = 22;\n                  break b;\n                }\n\n                i = vd(a | 0, e | 0, 52) | 0;\n                H() | 0;\n                i = i & 15;\n\n                if ((i | 0) < (u | 0)) {\n                  f = 12;\n                  y = 28;\n                  break b;\n                }\n\n                if ((i | 0) != (u | 0)) {\n                  a = a | p;\n                  e = e & -15728641 | q;\n\n                  if (i >>> 0 >= t >>> 0) {\n                    h = u;\n\n                    do {\n                      n = wd(7, 0, (14 - h | 0) * 3 | 0) | 0;\n                      h = h + 1 | 0;\n                      a = n | a;\n                      e = H() | 0 | e;\n                    } while (h >>> 0 < i >>> 0);\n                  }\n                }\n\n                h = td(a | 0, e | 0, d | 0, o | 0) | 0;\n                H() | 0;\n                k = w + (h << 3) | 0;\n                i = k;\n                j = b[i >> 2] | 0;\n                i = b[i + 4 >> 2] | 0;\n                if ((j | 0) == 0 & (i | 0) == 0) { h = k; }else {\n                  n = 0;\n\n                  while (1) {\n                    if ((n | 0) > (d | 0)) {\n                      y = 32;\n                      break b;\n                    }\n\n                    if ((j | 0) == (a | 0) & (i & -117440513 | 0) == (e | 0)) {\n                      l = vd(j | 0, i | 0, 56) | 0;\n                      H() | 0;\n                      l = l & 7;\n                      m = l + 1 | 0;\n                      z = vd(j | 0, i | 0, 45) | 0;\n                      H() | 0;\n\n                      d: do { if (!(ma(z & 127) | 0)) { i = 7; }else {\n                        j = vd(j | 0, i | 0, 52) | 0;\n                        H() | 0;\n                        j = j & 15;\n\n                        if (!j) {\n                          i = 6;\n                          break;\n                        }\n\n                        i = 1;\n\n                        while (1) {\n                          z = wd(7, 0, (15 - i | 0) * 3 | 0) | 0;\n\n                          if (!((z & a | 0) == 0 & ((H() | 0) & e | 0) == 0)) {\n                            i = 7;\n                            break d;\n                          }\n\n                          if (i >>> 0 < j >>> 0) { i = i + 1 | 0; }else {\n                            i = 6;\n                            break;\n                          }\n                        }\n                      } } while (0);\n\n                      if ((l + 2 | 0) >>> 0 > i >>> 0) {\n                        y = 42;\n                        break b;\n                      }\n\n                      z = wd(m | 0, 0, 56) | 0;\n                      e = H() | 0 | e & -117440513;\n                      m = k;\n                      b[m >> 2] = 0;\n                      b[m + 4 >> 2] = 0;\n                      a = z | a;\n                    } else { h = (h + 1 | 0) % (d | 0) | 0; }\n\n                    k = w + (h << 3) | 0;\n                    i = k;\n                    j = b[i >> 2] | 0;\n                    i = b[i + 4 >> 2] | 0;\n\n                    if ((j | 0) == 0 & (i | 0) == 0) {\n                      h = k;\n                      break;\n                    } else { n = n + 1 | 0; }\n                  }\n                }\n                z = h;\n                b[z >> 2] = a;\n                b[z + 4 >> 2] = e;\n              }\n\n              g = g + 1 | 0;\n              if ((g | 0) >= (d | 0)) { break c; }\n              e = x + (g << 3) | 0;\n              a = b[e >> 2] | 0;\n              e = b[e + 4 >> 2] | 0;\n            }\n          } } while (0);\n\n          if ((d + 5 | 0) >>> 0 < 11) {\n            y = 85;\n            break;\n          }\n\n          q = kd((d | 0) / 6 | 0, 8) | 0;\n\n          if (!q) {\n            y = 49;\n            break;\n          }\n\n          e: do { if (r) {\n            n = 0;\n            m = 0;\n\n            do {\n              i = w + (n << 3) | 0;\n              e = i;\n              g = b[e >> 2] | 0;\n              e = b[e + 4 >> 2] | 0;\n\n              if (!((g | 0) == 0 & (e | 0) == 0)) {\n                j = vd(g | 0, e | 0, 56) | 0;\n                H() | 0;\n                j = j & 7;\n                a = j + 1 | 0;\n                k = e & -117440513;\n                z = vd(g | 0, e | 0, 45) | 0;\n                H() | 0;\n\n                f: do { if (ma(z & 127) | 0) {\n                  l = vd(g | 0, e | 0, 52) | 0;\n                  H() | 0;\n                  l = l & 15;\n\n                  if (l | 0) {\n                    h = 1;\n\n                    while (1) {\n                      z = wd(7, 0, (15 - h | 0) * 3 | 0) | 0;\n                      if (!((g & z | 0) == 0 & (k & (H() | 0) | 0) == 0)) { break f; }\n                      if (h >>> 0 < l >>> 0) { h = h + 1 | 0; }else { break; }\n                    }\n                  }\n\n                  e = wd(a | 0, 0, 56) | 0;\n                  g = e | g;\n                  e = H() | 0 | k;\n                  a = i;\n                  b[a >> 2] = g;\n                  b[a + 4 >> 2] = e;\n                  a = j + 2 | 0;\n                } } while (0);\n\n                if ((a | 0) == 7) {\n                  z = q + (m << 3) | 0;\n                  b[z >> 2] = g;\n                  b[z + 4 >> 2] = e & -117440513;\n                  m = m + 1 | 0;\n                }\n              }\n\n              n = n + 1 | 0;\n            } while ((n | 0) != (d | 0));\n\n            if (r) {\n              n = ((d | 0) < 0) << 31 >> 31;\n              o = wd(u | 0, 0, 52) | 0;\n              p = H() | 0;\n\n              if (u >>> 0 > 15) {\n                if (!((s | 0) == 0 & (f | 0) == 0)) {\n                  f = 4;\n                  y = 84;\n                  break b;\n                }\n\n                f = 0;\n\n                while (1) {\n                  f = f + 1 | 0;\n\n                  if ((f | 0) >= (d | 0)) {\n                    g = 0;\n                    f = m;\n                    break e;\n                  }\n\n                  z = x + (f << 3) | 0;\n\n                  if (!((b[z >> 2] | 0) == 0 & (b[z + 4 >> 2] | 0) == 0)) {\n                    f = 4;\n                    y = 84;\n                    break b;\n                  }\n                }\n              }\n\n              l = 0;\n              g = 0;\n              k = s;\n\n              while (1) {\n                do { if (!((k | 0) == 0 & (f | 0) == 0)) {\n                  i = vd(k | 0, f | 0, 52) | 0;\n                  H() | 0;\n                  i = i & 15;\n\n                  if ((i | 0) < (u | 0)) {\n                    f = 12;\n                    y = 84;\n                    break b;\n                  }\n\n                  do { if ((i | 0) == (u | 0)) {\n                    e = k;\n                    i = f;\n                  } else {\n                    e = k | o;\n                    a = f & -15728641 | p;\n\n                    if (i >>> 0 < t >>> 0) {\n                      i = a;\n                      break;\n                    }\n\n                    h = u;\n\n                    do {\n                      z = wd(7, 0, (14 - h | 0) * 3 | 0) | 0;\n                      h = h + 1 | 0;\n                      e = z | e;\n                      a = H() | 0 | a;\n                    } while (h >>> 0 < i >>> 0);\n\n                    i = a;\n                  } } while (0);\n\n                  h = td(e | 0, i | 0, d | 0, n | 0) | 0;\n                  H() | 0;\n                  a = 0;\n\n                  while (1) {\n                    if ((a | 0) > (d | 0)) {\n                      y = 77;\n                      break b;\n                    }\n\n                    z = w + (h << 3) | 0;\n                    j = b[z + 4 >> 2] | 0;\n\n                    if ((j & -117440513 | 0) == (i | 0) ? (b[z >> 2] | 0) == (e | 0) : 0) {\n                      y = 79;\n                      break;\n                    }\n\n                    h = (h + 1 | 0) % (d | 0) | 0;\n                    z = w + (h << 3) | 0;\n                    if ((b[z >> 2] | 0) == (e | 0) ? (b[z + 4 >> 2] | 0) == (i | 0) : 0) { break; }else { a = a + 1 | 0; }\n                  }\n\n                  if ((y | 0) == 79 ? (y = 0, 0 == 0 & (j & 117440512 | 0) == 100663296) : 0) { break; }\n                  z = c + (g << 3) | 0;\n                  b[z >> 2] = k;\n                  b[z + 4 >> 2] = f;\n                  g = g + 1 | 0;\n                } } while (0);\n\n                f = l + 1 | 0;\n\n                if ((f | 0) >= (d | 0)) {\n                  f = m;\n                  break e;\n                }\n\n                z = x + (f << 3) | 0;\n                l = f;\n                k = b[z >> 2] | 0;\n                f = b[z + 4 >> 2] | 0;\n              }\n            } else {\n              g = 0;\n              f = m;\n            }\n          } else {\n            g = 0;\n            f = 0;\n          } } while (0);\n\n          Bd(w | 0, 0, v | 0) | 0;\n          Ad(x | 0, q | 0, f << 3 | 0) | 0;\n          jd(q);\n          if (!f) { break a; }else {\n            c = c + (g << 3) | 0;\n            d = f;\n          }\n        }\n\n        if ((y | 0) == 17) {\n          if (0 == 0 & (f & 117440512 | 0) == 0) {\n            f = 4;\n            y = 28;\n          } else { y = 22; }\n        } else if ((y | 0) == 32) { I(23313, 22674, 362, 22684); }else if ((y | 0) == 42) {\n          jd(x);\n          jd(w);\n          z = 10;\n          return z | 0;\n        } else if ((y | 0) == 49) {\n          jd(x);\n          jd(w);\n          z = 13;\n          return z | 0;\n        } else if ((y | 0) == 77) { I(23313, 22674, 462, 22684); }else if ((y | 0) == 84) {\n          jd(q);\n          jd(x);\n          jd(w);\n          z = f;\n          return z | 0;\n        } else if ((y | 0) == 85) {\n          Ad(c | 0, x | 0, d << 3 | 0) | 0;\n          break;\n        }\n\n        if ((y | 0) == 22) {\n          jd(x);\n          jd(w);\n          z = 5;\n          return z | 0;\n        } else if ((y | 0) == 28) {\n          jd(x);\n          jd(w);\n          z = f;\n          return z | 0;\n        }\n      } } while (0);\n\n      jd(x);\n      jd(w);\n      z = 0;\n      return z | 0;\n    }\n\n    function Cb(a, c, d, e, f, g, h) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      g = g | 0;\n      h = h | 0;\n      var i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0;\n      q = T;\n      T = T + 16 | 0;\n      p = q;\n\n      if (!((d | 0) > 0 | (d | 0) == 0 & c >>> 0 > 0)) {\n        p = 0;\n        T = q;\n        return p | 0;\n      }\n\n      if ((h | 0) >= 16) {\n        p = 12;\n        T = q;\n        return p | 0;\n      }\n\n      n = 0;\n      o = 0;\n      m = 0;\n      i = 0;\n\n      a: while (1) {\n        k = a + (n << 3) | 0;\n        j = b[k >> 2] | 0;\n        k = b[k + 4 >> 2] | 0;\n        l = vd(j | 0, k | 0, 52) | 0;\n        H() | 0;\n\n        if ((l & 15 | 0) > (h | 0)) {\n          i = 12;\n          j = 11;\n          break;\n        }\n\n        Xb(p, j, k, h);\n        l = p;\n        k = b[l >> 2] | 0;\n        l = b[l + 4 >> 2] | 0;\n        if ((k | 0) == 0 & (l | 0) == 0) { j = m; }else {\n          j = m;\n\n          do {\n            if (!((i | 0) < (g | 0) | (i | 0) == (g | 0) & j >>> 0 < f >>> 0)) {\n              j = 10;\n              break a;\n            }\n\n            m = e + (j << 3) | 0;\n            b[m >> 2] = k;\n            b[m + 4 >> 2] = l;\n            j = ld(j | 0, i | 0, 1, 0) | 0;\n            i = H() | 0;\n            Yb(p);\n            m = p;\n            k = b[m >> 2] | 0;\n            l = b[m + 4 >> 2] | 0;\n          } while (!((k | 0) == 0 & (l | 0) == 0));\n        }\n        n = ld(n | 0, o | 0, 1, 0) | 0;\n        o = H() | 0;\n\n        if (!((o | 0) < (d | 0) | (o | 0) == (d | 0) & n >>> 0 < c >>> 0)) {\n          i = 0;\n          j = 11;\n          break;\n        } else { m = j; }\n      }\n\n      if ((j | 0) == 10) {\n        p = 14;\n        T = q;\n        return p | 0;\n      } else if ((j | 0) == 11) {\n        T = q;\n        return i | 0;\n      }\n\n      return 0;\n    }\n\n    function Db(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0;\n      n = T;\n      T = T + 16 | 0;\n      m = n;\n\n      a: do { if ((d | 0) > 0 | (d | 0) == 0 & c >>> 0 > 0) {\n        k = 0;\n        h = 0;\n        g = 0;\n        l = 0;\n\n        while (1) {\n          j = a + (k << 3) | 0;\n          i = b[j >> 2] | 0;\n          j = b[j + 4 >> 2] | 0;\n\n          if (!((i | 0) == 0 & (j | 0) == 0)) {\n            j = (wb(i, j, e, m) | 0) == 0;\n            i = m;\n            h = ld(b[i >> 2] | 0, b[i + 4 >> 2] | 0, h | 0, g | 0) | 0;\n            g = H() | 0;\n\n            if (!j) {\n              g = 12;\n              break;\n            }\n          }\n\n          k = ld(k | 0, l | 0, 1, 0) | 0;\n          l = H() | 0;\n          if (!((l | 0) < (d | 0) | (l | 0) == (d | 0) & k >>> 0 < c >>> 0)) { break a; }\n        }\n\n        T = n;\n        return g | 0;\n      } else {\n        h = 0;\n        g = 0;\n      } } while (0);\n\n      b[f >> 2] = h;\n      b[f + 4 >> 2] = g;\n      f = 0;\n      T = n;\n      return f | 0;\n    }\n\n    function Eb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      b = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      return b & 1 | 0;\n    }\n\n    function Fb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0,\n          d = 0,\n          e = 0;\n      e = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      e = e & 15;\n\n      if (!e) {\n        e = 0;\n        return e | 0;\n      }\n\n      d = 1;\n\n      while (1) {\n        c = vd(a | 0, b | 0, (15 - d | 0) * 3 | 0) | 0;\n        H() | 0;\n        c = c & 7;\n\n        if (c | 0) {\n          d = 5;\n          break;\n        }\n\n        if (d >>> 0 < e >>> 0) { d = d + 1 | 0; }else {\n          c = 0;\n          d = 5;\n          break;\n        }\n      }\n\n      if ((d | 0) == 5) { return c | 0; }\n      return 0;\n    }\n\n    function Gb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      i = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      i = i & 15;\n\n      if (!i) {\n        h = b;\n        i = a;\n        G(h | 0);\n        return i | 0;\n      }\n\n      h = 1;\n      c = 0;\n\n      while (1) {\n        f = (15 - h | 0) * 3 | 0;\n        d = wd(7, 0, f | 0) | 0;\n        e = H() | 0;\n        g = vd(a | 0, b | 0, f | 0) | 0;\n        H() | 0;\n        f = wd(Sa(g & 7) | 0, 0, f | 0) | 0;\n        g = H() | 0;\n        a = f | a & ~d;\n        b = g | b & ~e;\n\n        a: do { if (!c) { if (!((f & d | 0) == 0 & (g & e | 0) == 0)) {\n          d = vd(a | 0, b | 0, 52) | 0;\n          H() | 0;\n          d = d & 15;\n          if (!d) { c = 1; }else {\n            c = 1;\n\n            b: while (1) {\n              g = vd(a | 0, b | 0, (15 - c | 0) * 3 | 0) | 0;\n              H() | 0;\n\n              switch (g & 7) {\n                case 1:\n                  break b;\n\n                case 0:\n                  break;\n\n                default:\n                  {\n                    c = 1;\n                    break a;\n                  }\n              }\n\n              if (c >>> 0 < d >>> 0) { c = c + 1 | 0; }else {\n                c = 1;\n                break a;\n              }\n            }\n\n            c = 1;\n\n            while (1) {\n              g = (15 - c | 0) * 3 | 0;\n              e = vd(a | 0, b | 0, g | 0) | 0;\n              H() | 0;\n              f = wd(7, 0, g | 0) | 0;\n              b = b & ~(H() | 0);\n              g = wd(Sa(e & 7) | 0, 0, g | 0) | 0;\n              a = a & ~f | g;\n              b = b | (H() | 0);\n              if (c >>> 0 < d >>> 0) { c = c + 1 | 0; }else {\n                c = 1;\n                break;\n              }\n            }\n          }\n        } else { c = 0; } } } while (0);\n\n        if (h >>> 0 < i >>> 0) { h = h + 1 | 0; }else { break; }\n      }\n\n      G(b | 0);\n      return a | 0;\n    }\n\n    function Hb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0;\n      d = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      d = d & 15;\n\n      if (!d) {\n        c = b;\n        d = a;\n        G(c | 0);\n        return d | 0;\n      }\n\n      c = 1;\n\n      while (1) {\n        f = (15 - c | 0) * 3 | 0;\n        g = vd(a | 0, b | 0, f | 0) | 0;\n        H() | 0;\n        e = wd(7, 0, f | 0) | 0;\n        b = b & ~(H() | 0);\n        f = wd(Sa(g & 7) | 0, 0, f | 0) | 0;\n        a = f | a & ~e;\n        b = H() | 0 | b;\n        if (c >>> 0 < d >>> 0) { c = c + 1 | 0; }else { break; }\n      }\n\n      G(b | 0);\n      return a | 0;\n    }\n\n    function Ib(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      i = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      i = i & 15;\n\n      if (!i) {\n        h = b;\n        i = a;\n        G(h | 0);\n        return i | 0;\n      }\n\n      h = 1;\n      c = 0;\n\n      while (1) {\n        f = (15 - h | 0) * 3 | 0;\n        d = wd(7, 0, f | 0) | 0;\n        e = H() | 0;\n        g = vd(a | 0, b | 0, f | 0) | 0;\n        H() | 0;\n        f = wd(Ta(g & 7) | 0, 0, f | 0) | 0;\n        g = H() | 0;\n        a = f | a & ~d;\n        b = g | b & ~e;\n\n        a: do { if (!c) { if (!((f & d | 0) == 0 & (g & e | 0) == 0)) {\n          d = vd(a | 0, b | 0, 52) | 0;\n          H() | 0;\n          d = d & 15;\n          if (!d) { c = 1; }else {\n            c = 1;\n\n            b: while (1) {\n              g = vd(a | 0, b | 0, (15 - c | 0) * 3 | 0) | 0;\n              H() | 0;\n\n              switch (g & 7) {\n                case 1:\n                  break b;\n\n                case 0:\n                  break;\n\n                default:\n                  {\n                    c = 1;\n                    break a;\n                  }\n              }\n\n              if (c >>> 0 < d >>> 0) { c = c + 1 | 0; }else {\n                c = 1;\n                break a;\n              }\n            }\n\n            c = 1;\n\n            while (1) {\n              e = (15 - c | 0) * 3 | 0;\n              f = wd(7, 0, e | 0) | 0;\n              g = b & ~(H() | 0);\n              b = vd(a | 0, b | 0, e | 0) | 0;\n              H() | 0;\n              b = wd(Ta(b & 7) | 0, 0, e | 0) | 0;\n              a = a & ~f | b;\n              b = g | (H() | 0);\n              if (c >>> 0 < d >>> 0) { c = c + 1 | 0; }else {\n                c = 1;\n                break;\n              }\n            }\n          }\n        } else { c = 0; } } } while (0);\n\n        if (h >>> 0 < i >>> 0) { h = h + 1 | 0; }else { break; }\n      }\n\n      G(b | 0);\n      return a | 0;\n    }\n\n    function Jb(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0;\n      d = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      d = d & 15;\n\n      if (!d) {\n        c = b;\n        d = a;\n        G(c | 0);\n        return d | 0;\n      }\n\n      c = 1;\n\n      while (1) {\n        g = (15 - c | 0) * 3 | 0;\n        f = wd(7, 0, g | 0) | 0;\n        e = b & ~(H() | 0);\n        b = vd(a | 0, b | 0, g | 0) | 0;\n        H() | 0;\n        b = wd(Ta(b & 7) | 0, 0, g | 0) | 0;\n        a = b | a & ~f;\n        b = H() | 0 | e;\n        if (c >>> 0 < d >>> 0) { c = c + 1 | 0; }else { break; }\n      }\n\n      G(b | 0);\n      return a | 0;\n    }\n\n    function Kb(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0;\n      j = T;\n      T = T + 64 | 0;\n      i = j + 40 | 0;\n      e = j + 24 | 0;\n      f = j + 12 | 0;\n      g = j;\n      wd(c | 0, 0, 52) | 0;\n      d = H() | 0 | 134225919;\n\n      if (!c) {\n        if ((b[a + 4 >> 2] | 0) > 2) {\n          h = 0;\n          i = 0;\n          G(h | 0);\n          T = j;\n          return i | 0;\n        }\n\n        if ((b[a + 8 >> 2] | 0) > 2) {\n          h = 0;\n          i = 0;\n          G(h | 0);\n          T = j;\n          return i | 0;\n        }\n\n        if ((b[a + 12 >> 2] | 0) > 2) {\n          h = 0;\n          i = 0;\n          G(h | 0);\n          T = j;\n          return i | 0;\n        }\n\n        wd(oa(a) | 0, 0, 45) | 0;\n        h = H() | 0 | d;\n        i = -1;\n        G(h | 0);\n        T = j;\n        return i | 0;\n      }\n      b[i >> 2] = b[a >> 2];\n      b[i + 4 >> 2] = b[a + 4 >> 2];\n      b[i + 8 >> 2] = b[a + 8 >> 2];\n      b[i + 12 >> 2] = b[a + 12 >> 2];\n      h = i + 4 | 0;\n\n      if ((c | 0) > 0) {\n        a = -1;\n\n        while (1) {\n          b[e >> 2] = b[h >> 2];\n          b[e + 4 >> 2] = b[h + 4 >> 2];\n          b[e + 8 >> 2] = b[h + 8 >> 2];\n\n          if (!(c & 1)) {\n            Ma(h);\n            b[f >> 2] = b[h >> 2];\n            b[f + 4 >> 2] = b[h + 4 >> 2];\n            b[f + 8 >> 2] = b[h + 8 >> 2];\n            Oa(f);\n          } else {\n            La(h);\n            b[f >> 2] = b[h >> 2];\n            b[f + 4 >> 2] = b[h + 4 >> 2];\n            b[f + 8 >> 2] = b[h + 8 >> 2];\n            Na(f);\n          }\n\n          Ga(e, f, g);\n          Da(g);\n          l = (15 - c | 0) * 3 | 0;\n          k = wd(7, 0, l | 0) | 0;\n          d = d & ~(H() | 0);\n          l = wd(Ia(g) | 0, 0, l | 0) | 0;\n          a = l | a & ~k;\n          d = H() | 0 | d;\n          if ((c | 0) > 1) { c = c + -1 | 0; }else { break; }\n        }\n      } else { a = -1; }\n\n      a: do { if (((b[h >> 2] | 0) <= 2 ? (b[i + 8 >> 2] | 0) <= 2 : 0) ? (b[i + 12 >> 2] | 0) <= 2 : 0) {\n        e = oa(i) | 0;\n        c = wd(e | 0, 0, 45) | 0;\n        c = c | a;\n        a = H() | 0 | d & -1040385;\n        g = pa(i) | 0;\n\n        if (!(ma(e) | 0)) {\n          if ((g | 0) <= 0) { break; }\n          f = 0;\n\n          while (1) {\n            e = vd(c | 0, a | 0, 52) | 0;\n            H() | 0;\n            e = e & 15;\n\n            if (e) {\n              d = 1;\n\n              while (1) {\n                l = (15 - d | 0) * 3 | 0;\n                i = vd(c | 0, a | 0, l | 0) | 0;\n                H() | 0;\n                k = wd(7, 0, l | 0) | 0;\n                a = a & ~(H() | 0);\n                l = wd(Sa(i & 7) | 0, 0, l | 0) | 0;\n                c = c & ~k | l;\n                a = a | (H() | 0);\n                if (d >>> 0 < e >>> 0) { d = d + 1 | 0; }else { break; }\n              }\n            }\n\n            f = f + 1 | 0;\n            if ((f | 0) == (g | 0)) { break a; }\n          }\n        }\n\n        f = vd(c | 0, a | 0, 52) | 0;\n        H() | 0;\n        f = f & 15;\n\n        b: do { if (f) {\n          d = 1;\n\n          c: while (1) {\n            l = vd(c | 0, a | 0, (15 - d | 0) * 3 | 0) | 0;\n            H() | 0;\n\n            switch (l & 7) {\n              case 1:\n                break c;\n\n              case 0:\n                break;\n\n              default:\n                break b;\n            }\n\n            if (d >>> 0 < f >>> 0) { d = d + 1 | 0; }else { break b; }\n          }\n\n          if (sa(e, b[i >> 2] | 0) | 0) {\n            d = 1;\n\n            while (1) {\n              i = (15 - d | 0) * 3 | 0;\n              k = wd(7, 0, i | 0) | 0;\n              l = a & ~(H() | 0);\n              a = vd(c | 0, a | 0, i | 0) | 0;\n              H() | 0;\n              a = wd(Ta(a & 7) | 0, 0, i | 0) | 0;\n              c = c & ~k | a;\n              a = l | (H() | 0);\n              if (d >>> 0 < f >>> 0) { d = d + 1 | 0; }else { break; }\n            }\n          } else {\n            d = 1;\n\n            while (1) {\n              l = (15 - d | 0) * 3 | 0;\n              i = vd(c | 0, a | 0, l | 0) | 0;\n              H() | 0;\n              k = wd(7, 0, l | 0) | 0;\n              a = a & ~(H() | 0);\n              l = wd(Sa(i & 7) | 0, 0, l | 0) | 0;\n              c = c & ~k | l;\n              a = a | (H() | 0);\n              if (d >>> 0 < f >>> 0) { d = d + 1 | 0; }else { break; }\n            }\n          }\n        } } while (0);\n\n        if ((g | 0) > 0) {\n          d = 0;\n\n          do {\n            c = Gb(c, a) | 0;\n            a = H() | 0;\n            d = d + 1 | 0;\n          } while ((d | 0) != (g | 0));\n        }\n      } else {\n        c = 0;\n        a = 0;\n      } } while (0);\n\n      k = a;\n      l = c;\n      G(k | 0);\n      T = j;\n      return l | 0;\n    }\n\n    function Lb(a) {\n      a = a | 0;\n      return (a | 0) % 2 | 0 | 0;\n    }\n\n    function Mb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0;\n      f = T;\n      T = T + 16 | 0;\n      e = f;\n\n      if (c >>> 0 > 15) {\n        e = 4;\n        T = f;\n        return e | 0;\n      }\n\n      if ((b[a + 4 >> 2] & 2146435072 | 0) == 2146435072) {\n        e = 3;\n        T = f;\n        return e | 0;\n      }\n\n      if ((b[a + 8 + 4 >> 2] & 2146435072 | 0) == 2146435072) {\n        e = 3;\n        T = f;\n        return e | 0;\n      }\n\n      hb(a, c, e);\n      c = Kb(e, c) | 0;\n      e = H() | 0;\n      b[d >> 2] = c;\n      b[d + 4 >> 2] = e;\n      if ((c | 0) == 0 & (e | 0) == 0) { I(23313, 22674, 786, 22697); }\n      e = 0;\n      T = f;\n      return e | 0;\n    }\n\n    function Nb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0;\n      f = d + 4 | 0;\n      g = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      g = g & 15;\n      h = vd(a | 0, c | 0, 45) | 0;\n      H() | 0;\n      e = (g | 0) == 0;\n\n      if (!(ma(h & 127) | 0)) {\n        if (e) {\n          h = 0;\n          return h | 0;\n        }\n\n        if ((b[f >> 2] | 0) == 0 ? (b[d + 8 >> 2] | 0) == 0 : 0) { e = (b[d + 12 >> 2] | 0) != 0 & 1; }else { e = 1; }\n      } else if (e) {\n        h = 1;\n        return h | 0;\n      } else { e = 1; }\n\n      d = 1;\n\n      while (1) {\n        if (!(d & 1)) { Oa(f); }else { Na(f); }\n        h = vd(a | 0, c | 0, (15 - d | 0) * 3 | 0) | 0;\n        H() | 0;\n        Pa(f, h & 7);\n        if (d >>> 0 < g >>> 0) { d = d + 1 | 0; }else { break; }\n      }\n\n      return e | 0;\n    }\n\n    function Ob(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0;\n      l = T;\n      T = T + 16 | 0;\n      j = l;\n      k = vd(a | 0, c | 0, 45) | 0;\n      H() | 0;\n      k = k & 127;\n\n      if (k >>> 0 > 121) {\n        b[d >> 2] = 0;\n        b[d + 4 >> 2] = 0;\n        b[d + 8 >> 2] = 0;\n        b[d + 12 >> 2] = 0;\n        k = 5;\n        T = l;\n        return k | 0;\n      }\n\n      a: do { if ((ma(k) | 0) != 0 ? (g = vd(a | 0, c | 0, 52) | 0, H() | 0, g = g & 15, (g | 0) != 0) : 0) {\n        e = 1;\n\n        b: while (1) {\n          i = vd(a | 0, c | 0, (15 - e | 0) * 3 | 0) | 0;\n          H() | 0;\n\n          switch (i & 7) {\n            case 5:\n              break b;\n\n            case 0:\n              break;\n\n            default:\n              {\n                e = c;\n                break a;\n              }\n          }\n\n          if (e >>> 0 < g >>> 0) { e = e + 1 | 0; }else {\n            e = c;\n            break a;\n          }\n        }\n\n        f = 1;\n        e = c;\n\n        while (1) {\n          c = (15 - f | 0) * 3 | 0;\n          h = wd(7, 0, c | 0) | 0;\n          i = e & ~(H() | 0);\n          e = vd(a | 0, e | 0, c | 0) | 0;\n          H() | 0;\n          e = wd(Ta(e & 7) | 0, 0, c | 0) | 0;\n          a = a & ~h | e;\n          e = i | (H() | 0);\n          if (f >>> 0 < g >>> 0) { f = f + 1 | 0; }else { break; }\n        }\n      } else { e = c; } } while (0);\n\n      i = 7696 + (k * 28 | 0) | 0;\n      b[d >> 2] = b[i >> 2];\n      b[d + 4 >> 2] = b[i + 4 >> 2];\n      b[d + 8 >> 2] = b[i + 8 >> 2];\n      b[d + 12 >> 2] = b[i + 12 >> 2];\n\n      if (!(Nb(a, e, d) | 0)) {\n        k = 0;\n        T = l;\n        return k | 0;\n      }\n\n      h = d + 4 | 0;\n      b[j >> 2] = b[h >> 2];\n      b[j + 4 >> 2] = b[h + 4 >> 2];\n      b[j + 8 >> 2] = b[h + 8 >> 2];\n      g = vd(a | 0, e | 0, 52) | 0;\n      H() | 0;\n      i = g & 15;\n      if (!(g & 1)) { g = i; }else {\n        Oa(h);\n        g = i + 1 | 0;\n      }\n      if (!(ma(k) | 0)) { e = 0; }else {\n        c: do { if (!i) { e = 0; }else {\n          c = 1;\n\n          while (1) {\n            f = vd(a | 0, e | 0, (15 - c | 0) * 3 | 0) | 0;\n            H() | 0;\n            f = f & 7;\n\n            if (f | 0) {\n              e = f;\n              break c;\n            }\n\n            if (c >>> 0 < i >>> 0) { c = c + 1 | 0; }else {\n              e = 0;\n              break;\n            }\n          }\n        } } while (0);\n\n        e = (e | 0) == 4 & 1;\n      }\n\n      if (!(ob(d, g, e, 0) | 0)) {\n        if ((g | 0) != (i | 0)) {\n          b[h >> 2] = b[j >> 2];\n          b[h + 4 >> 2] = b[j + 4 >> 2];\n          b[h + 8 >> 2] = b[j + 8 >> 2];\n        }\n      } else {\n        if (ma(k) | 0) { do {} while ((ob(d, g, 0, 0) | 0) != 0); }\n        if ((g | 0) != (i | 0)) { Ma(h); }\n      }\n\n      k = 0;\n      T = l;\n      return k | 0;\n    }\n\n    function Pb(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0;\n      f = T;\n      T = T + 16 | 0;\n      d = f;\n      e = Ob(a, b, d) | 0;\n\n      if (e | 0) {\n        T = f;\n        return e | 0;\n      }\n\n      e = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      lb(d, e & 15, c);\n      e = 0;\n      T = f;\n      return e | 0;\n    }\n\n    function Qb(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0;\n      g = T;\n      T = T + 16 | 0;\n      f = g;\n      d = Ob(a, b, f) | 0;\n\n      if (d | 0) {\n        f = d;\n        T = g;\n        return f | 0;\n      }\n\n      d = vd(a | 0, b | 0, 45) | 0;\n      H() | 0;\n      d = (ma(d & 127) | 0) == 0;\n      e = vd(a | 0, b | 0, 52) | 0;\n      H() | 0;\n      e = e & 15;\n\n      a: do { if (!d) {\n        if (e | 0) {\n          d = 1;\n\n          while (1) {\n            h = wd(7, 0, (15 - d | 0) * 3 | 0) | 0;\n            if (!((h & a | 0) == 0 & ((H() | 0) & b | 0) == 0)) { break a; }\n            if (d >>> 0 < e >>> 0) { d = d + 1 | 0; }else { break; }\n          }\n        }\n\n        mb(f, e, 0, 5, c);\n        h = 0;\n        T = g;\n        return h | 0;\n      } } while (0);\n\n      qb(f, e, 0, 6, c);\n      h = 0;\n      T = g;\n      return h | 0;\n    }\n\n    function Rb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0;\n      f = vd(a | 0, c | 0, 45) | 0;\n      H() | 0;\n\n      if (!(ma(f & 127) | 0)) {\n        f = 2;\n        b[d >> 2] = f;\n        return 0;\n      }\n\n      f = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      f = f & 15;\n\n      if (!f) {\n        f = 5;\n        b[d >> 2] = f;\n        return 0;\n      }\n\n      e = 1;\n\n      while (1) {\n        g = wd(7, 0, (15 - e | 0) * 3 | 0) | 0;\n\n        if (!((g & a | 0) == 0 & ((H() | 0) & c | 0) == 0)) {\n          e = 2;\n          a = 6;\n          break;\n        }\n\n        if (e >>> 0 < f >>> 0) { e = e + 1 | 0; }else {\n          e = 5;\n          a = 6;\n          break;\n        }\n      }\n\n      if ((a | 0) == 6) {\n        b[d >> 2] = e;\n        return 0;\n      }\n\n      return 0;\n    }\n\n    function Sb(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0;\n      m = T;\n      T = T + 128 | 0;\n      k = m + 112 | 0;\n      g = m + 96 | 0;\n      l = m;\n      f = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      i = f & 15;\n      b[k >> 2] = i;\n      h = vd(a | 0, c | 0, 45) | 0;\n      H() | 0;\n      h = h & 127;\n\n      a: do { if (ma(h) | 0) {\n        if (i | 0) {\n          e = 1;\n\n          while (1) {\n            j = wd(7, 0, (15 - e | 0) * 3 | 0) | 0;\n\n            if (!((j & a | 0) == 0 & ((H() | 0) & c | 0) == 0)) {\n              f = 0;\n              break a;\n            }\n\n            if (e >>> 0 < i >>> 0) { e = e + 1 | 0; }else { break; }\n          }\n        }\n\n        if (!(f & 1)) {\n          j = wd(i + 1 | 0, 0, 52) | 0;\n          l = H() | 0 | c & -15728641;\n          k = wd(7, 0, (14 - i | 0) * 3 | 0) | 0;\n          l = Sb((j | a) & ~k, l & ~(H() | 0), d) | 0;\n          T = m;\n          return l | 0;\n        } else { f = 1; }\n      } else { f = 0; } } while (0);\n\n      e = Ob(a, c, g) | 0;\n\n      if (!e) {\n        if (f) {\n          nb(g, k, l);\n          j = 5;\n        } else {\n          rb(g, k, l);\n          j = 6;\n        }\n\n        b: do { if (ma(h) | 0) {\n          if (!i) { a = 5; }else {\n            e = 1;\n\n            while (1) {\n              h = wd(7, 0, (15 - e | 0) * 3 | 0) | 0;\n\n              if (!((h & a | 0) == 0 & ((H() | 0) & c | 0) == 0)) {\n                a = 2;\n                break b;\n              }\n\n              if (e >>> 0 < i >>> 0) { e = e + 1 | 0; }else {\n                a = 5;\n                break;\n              }\n            }\n          }\n        } else { a = 2; } } while (0);\n\n        Bd(d | 0, -1, a << 2 | 0) | 0;\n\n        c: do { if (f) {\n          g = 0;\n\n          while (1) {\n            h = l + (g << 4) | 0;\n            pb(h, b[k >> 2] | 0) | 0;\n            h = b[h >> 2] | 0;\n            i = b[d >> 2] | 0;\n            if ((i | 0) == -1 | (i | 0) == (h | 0)) { e = d; }else {\n              f = 0;\n\n              do {\n                f = f + 1 | 0;\n\n                if (f >>> 0 >= a >>> 0) {\n                  e = 1;\n                  break c;\n                }\n\n                e = d + (f << 2) | 0;\n                i = b[e >> 2] | 0;\n              } while (!((i | 0) == -1 | (i | 0) == (h | 0)));\n            }\n            b[e >> 2] = h;\n            g = g + 1 | 0;\n\n            if (g >>> 0 >= j >>> 0) {\n              e = 0;\n              break;\n            }\n          }\n        } else {\n          g = 0;\n\n          while (1) {\n            h = l + (g << 4) | 0;\n            ob(h, b[k >> 2] | 0, 0, 1) | 0;\n            h = b[h >> 2] | 0;\n            i = b[d >> 2] | 0;\n            if ((i | 0) == -1 | (i | 0) == (h | 0)) { e = d; }else {\n              f = 0;\n\n              do {\n                f = f + 1 | 0;\n\n                if (f >>> 0 >= a >>> 0) {\n                  e = 1;\n                  break c;\n                }\n\n                e = d + (f << 2) | 0;\n                i = b[e >> 2] | 0;\n              } while (!((i | 0) == -1 | (i | 0) == (h | 0)));\n            }\n            b[e >> 2] = h;\n            g = g + 1 | 0;\n\n            if (g >>> 0 >= j >>> 0) {\n              e = 0;\n              break;\n            }\n          }\n        } } while (0);\n      }\n\n      l = e;\n      T = m;\n      return l | 0;\n    }\n\n    function Tb() {\n      return 12;\n    }\n\n    function Ub(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n\n      if (a >>> 0 > 15) {\n        i = 4;\n        return i | 0;\n      }\n\n      wd(a | 0, 0, 52) | 0;\n      i = H() | 0 | 134225919;\n\n      if (!a) {\n        d = 0;\n        e = 0;\n\n        do {\n          if (ma(e) | 0) {\n            wd(e | 0, 0, 45) | 0;\n            h = i | (H() | 0);\n            a = c + (d << 3) | 0;\n            b[a >> 2] = -1;\n            b[a + 4 >> 2] = h;\n            d = d + 1 | 0;\n          }\n\n          e = e + 1 | 0;\n        } while ((e | 0) != 122);\n\n        d = 0;\n        return d | 0;\n      }\n\n      d = 0;\n      h = 0;\n\n      do {\n        if (ma(h) | 0) {\n          wd(h | 0, 0, 45) | 0;\n          e = 1;\n          f = -1;\n          g = i | (H() | 0);\n\n          while (1) {\n            j = wd(7, 0, (15 - e | 0) * 3 | 0) | 0;\n            f = f & ~j;\n            g = g & ~(H() | 0);\n            if ((e | 0) == (a | 0)) { break; }else { e = e + 1 | 0; }\n          }\n\n          j = c + (d << 3) | 0;\n          b[j >> 2] = f;\n          b[j + 4 >> 2] = g;\n          d = d + 1 | 0;\n        }\n\n        h = h + 1 | 0;\n      } while ((h | 0) != 122);\n\n      d = 0;\n      return d | 0;\n    }\n\n    function Vb(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0;\n      t = T;\n      T = T + 16 | 0;\n      r = t;\n      s = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      s = s & 15;\n\n      if (d >>> 0 > 15) {\n        s = 4;\n        T = t;\n        return s | 0;\n      }\n\n      if ((s | 0) < (d | 0)) {\n        s = 12;\n        T = t;\n        return s | 0;\n      }\n\n      if ((s | 0) != (d | 0)) {\n        g = wd(d | 0, 0, 52) | 0;\n        g = g | a;\n        i = H() | 0 | c & -15728641;\n\n        if ((s | 0) > (d | 0)) {\n          j = d;\n\n          do {\n            q = wd(7, 0, (14 - j | 0) * 3 | 0) | 0;\n            j = j + 1 | 0;\n            g = q | g;\n            i = H() | 0 | i;\n          } while ((j | 0) < (s | 0));\n\n          q = g;\n        } else { q = g; }\n      } else {\n        q = a;\n        i = c;\n      }\n\n      p = vd(q | 0, i | 0, 45) | 0;\n      H() | 0;\n\n      a: do { if (ma(p & 127) | 0) {\n        j = vd(q | 0, i | 0, 52) | 0;\n        H() | 0;\n        j = j & 15;\n\n        if (j | 0) {\n          g = 1;\n\n          while (1) {\n            p = wd(7, 0, (15 - g | 0) * 3 | 0) | 0;\n\n            if (!((p & q | 0) == 0 & ((H() | 0) & i | 0) == 0)) {\n              k = 33;\n              break a;\n            }\n\n            if (g >>> 0 < j >>> 0) { g = g + 1 | 0; }else { break; }\n          }\n        }\n\n        p = e;\n        b[p >> 2] = 0;\n        b[p + 4 >> 2] = 0;\n\n        if ((s | 0) > (d | 0)) {\n          p = c & -15728641;\n          o = s;\n\n          while (1) {\n            n = o;\n            o = o + -1 | 0;\n\n            if (o >>> 0 > 15 | (s | 0) < (o | 0)) {\n              k = 19;\n              break;\n            }\n\n            if ((s | 0) != (o | 0)) {\n              g = wd(o | 0, 0, 52) | 0;\n              g = g | a;\n              j = H() | 0 | p;\n              if ((s | 0) < (n | 0)) { m = g; }else {\n                k = o;\n\n                do {\n                  m = wd(7, 0, (14 - k | 0) * 3 | 0) | 0;\n                  k = k + 1 | 0;\n                  g = m | g;\n                  j = H() | 0 | j;\n                } while ((k | 0) < (s | 0));\n\n                m = g;\n              }\n            } else {\n              m = a;\n              j = c;\n            }\n\n            l = vd(m | 0, j | 0, 45) | 0;\n            H() | 0;\n            if (!(ma(l & 127) | 0)) { g = 0; }else {\n              l = vd(m | 0, j | 0, 52) | 0;\n              H() | 0;\n              l = l & 15;\n\n              b: do { if (!l) { g = 0; }else {\n                k = 1;\n\n                while (1) {\n                  g = vd(m | 0, j | 0, (15 - k | 0) * 3 | 0) | 0;\n                  H() | 0;\n                  g = g & 7;\n                  if (g | 0) { break b; }\n                  if (k >>> 0 < l >>> 0) { k = k + 1 | 0; }else {\n                    g = 0;\n                    break;\n                  }\n                }\n              } } while (0);\n\n              g = (g | 0) == 0 & 1;\n            }\n            j = vd(a | 0, c | 0, (15 - n | 0) * 3 | 0) | 0;\n            H() | 0;\n            j = j & 7;\n\n            if ((j | 0) == 7) {\n              f = 5;\n              k = 42;\n              break;\n            }\n\n            g = (g | 0) != 0;\n\n            if ((j | 0) == 1 & g) {\n              f = 5;\n              k = 42;\n              break;\n            }\n\n            m = j + (((j | 0) != 0 & g) << 31 >> 31) | 0;\n\n            if (m | 0) {\n              k = s - n | 0;\n              k = Cc(7, 0, k, ((k | 0) < 0) << 31 >> 31) | 0;\n              l = H() | 0;\n\n              if (g) {\n                g = rd(k | 0, l | 0, 5, 0) | 0;\n                g = ld(g | 0, H() | 0, -5, -1) | 0;\n                g = pd(g | 0, H() | 0, 6, 0) | 0;\n                g = ld(g | 0, H() | 0, 1, 0) | 0;\n                j = H() | 0;\n              } else {\n                g = k;\n                j = l;\n              }\n\n              n = m + -1 | 0;\n              n = rd(k | 0, l | 0, n | 0, ((n | 0) < 0) << 31 >> 31 | 0) | 0;\n              n = ld(g | 0, j | 0, n | 0, H() | 0) | 0;\n              m = H() | 0;\n              l = e;\n              l = ld(n | 0, m | 0, b[l >> 2] | 0, b[l + 4 >> 2] | 0) | 0;\n              m = H() | 0;\n              n = e;\n              b[n >> 2] = l;\n              b[n + 4 >> 2] = m;\n            }\n\n            if ((o | 0) <= (d | 0)) {\n              k = 37;\n              break;\n            }\n          }\n\n          if ((k | 0) == 19) { I(23313, 22674, 1099, 22710); }else if ((k | 0) == 37) {\n            h = e;\n            f = b[h + 4 >> 2] | 0;\n            h = b[h >> 2] | 0;\n            break;\n          } else if ((k | 0) == 42) {\n            T = t;\n            return f | 0;\n          }\n        } else {\n          f = 0;\n          h = 0;\n        }\n      } else { k = 33; } } while (0);\n\n      c: do { if ((k | 0) == 33) {\n        p = e;\n        b[p >> 2] = 0;\n        b[p + 4 >> 2] = 0;\n\n        if ((s | 0) > (d | 0)) {\n          g = s;\n\n          while (1) {\n            f = vd(a | 0, c | 0, (15 - g | 0) * 3 | 0) | 0;\n            H() | 0;\n            f = f & 7;\n\n            if ((f | 0) == 7) {\n              f = 5;\n              break;\n            }\n\n            h = s - g | 0;\n            h = Cc(7, 0, h, ((h | 0) < 0) << 31 >> 31) | 0;\n            f = rd(h | 0, H() | 0, f | 0, 0) | 0;\n            h = H() | 0;\n            p = e;\n            h = ld(b[p >> 2] | 0, b[p + 4 >> 2] | 0, f | 0, h | 0) | 0;\n            f = H() | 0;\n            p = e;\n            b[p >> 2] = h;\n            b[p + 4 >> 2] = f;\n            g = g + -1 | 0;\n            if ((g | 0) <= (d | 0)) { break c; }\n          }\n\n          T = t;\n          return f | 0;\n        } else {\n          f = 0;\n          h = 0;\n        }\n      } } while (0);\n\n      if (wb(q, i, s, r) | 0) { I(23313, 22674, 1063, 22725); }\n      s = r;\n      r = b[s + 4 >> 2] | 0;\n\n      if (((f | 0) > -1 | (f | 0) == -1 & h >>> 0 > 4294967295) & ((r | 0) > (f | 0) | ((r | 0) == (f | 0) ? (b[s >> 2] | 0) >>> 0 > h >>> 0 : 0))) {\n        s = 0;\n        T = t;\n        return s | 0;\n      } else { I(23313, 22674, 1139, 22710); }\n\n      return 0;\n    }\n\n    function Wb(a, c, d, e, f, g) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      g = g | 0;\n      var h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0;\n      m = T;\n      T = T + 16 | 0;\n      h = m;\n\n      if (f >>> 0 > 15) {\n        g = 4;\n        T = m;\n        return g | 0;\n      }\n\n      i = vd(d | 0, e | 0, 52) | 0;\n      H() | 0;\n      i = i & 15;\n\n      if ((i | 0) > (f | 0)) {\n        g = 12;\n        T = m;\n        return g | 0;\n      }\n\n      if (wb(d, e, f, h) | 0) { I(23313, 22674, 1063, 22725); }\n      l = h;\n      k = b[l + 4 >> 2] | 0;\n\n      if (!(((c | 0) > -1 | (c | 0) == -1 & a >>> 0 > 4294967295) & ((k | 0) > (c | 0) | ((k | 0) == (c | 0) ? (b[l >> 2] | 0) >>> 0 > a >>> 0 : 0)))) {\n        g = 2;\n        T = m;\n        return g | 0;\n      }\n\n      l = f - i | 0;\n      f = wd(f | 0, 0, 52) | 0;\n      j = H() | 0 | e & -15728641;\n      k = g;\n      b[k >> 2] = f | d;\n      b[k + 4 >> 2] = j;\n      k = vd(d | 0, e | 0, 45) | 0;\n      H() | 0;\n\n      a: do { if (ma(k & 127) | 0) {\n        if (i | 0) {\n          h = 1;\n\n          while (1) {\n            k = wd(7, 0, (15 - h | 0) * 3 | 0) | 0;\n            if (!((k & d | 0) == 0 & ((H() | 0) & e | 0) == 0)) { break a; }\n            if (h >>> 0 < i >>> 0) { h = h + 1 | 0; }else { break; }\n          }\n        }\n\n        if ((l | 0) < 1) {\n          g = 0;\n          T = m;\n          return g | 0;\n        }\n\n        k = i ^ 15;\n        e = -1;\n        j = 1;\n        h = 1;\n\n        while (1) {\n          i = l - j | 0;\n          i = Cc(7, 0, i, ((i | 0) < 0) << 31 >> 31) | 0;\n          d = H() | 0;\n\n          do { if (h) {\n            h = rd(i | 0, d | 0, 5, 0) | 0;\n            h = ld(h | 0, H() | 0, -5, -1) | 0;\n            h = pd(h | 0, H() | 0, 6, 0) | 0;\n            f = H() | 0;\n\n            if ((c | 0) > (f | 0) | (c | 0) == (f | 0) & a >>> 0 > h >>> 0) {\n              c = ld(a | 0, c | 0, -1, -1) | 0;\n              c = md(c | 0, H() | 0, h | 0, f | 0) | 0;\n              h = H() | 0;\n              n = g;\n              p = b[n >> 2] | 0;\n              n = b[n + 4 >> 2] | 0;\n              q = (k + e | 0) * 3 | 0;\n              o = wd(7, 0, q | 0) | 0;\n              n = n & ~(H() | 0);\n              e = pd(c | 0, h | 0, i | 0, d | 0) | 0;\n              a = H() | 0;\n              f = ld(e | 0, a | 0, 2, 0) | 0;\n              q = wd(f | 0, H() | 0, q | 0) | 0;\n              n = H() | 0 | n;\n              f = g;\n              b[f >> 2] = q | p & ~o;\n              b[f + 4 >> 2] = n;\n              a = rd(e | 0, a | 0, i | 0, d | 0) | 0;\n              a = md(c | 0, h | 0, a | 0, H() | 0) | 0;\n              h = 0;\n              c = H() | 0;\n              break;\n            } else {\n              q = g;\n              o = b[q >> 2] | 0;\n              q = b[q + 4 >> 2] | 0;\n              p = wd(7, 0, (k + e | 0) * 3 | 0) | 0;\n              q = q & ~(H() | 0);\n              h = g;\n              b[h >> 2] = o & ~p;\n              b[h + 4 >> 2] = q;\n              h = 1;\n              break;\n            }\n          } else {\n            o = g;\n            f = b[o >> 2] | 0;\n            o = b[o + 4 >> 2] | 0;\n            e = (k + e | 0) * 3 | 0;\n            n = wd(7, 0, e | 0) | 0;\n            o = o & ~(H() | 0);\n            q = pd(a | 0, c | 0, i | 0, d | 0) | 0;\n            h = H() | 0;\n            e = wd(q | 0, h | 0, e | 0) | 0;\n            o = H() | 0 | o;\n            p = g;\n            b[p >> 2] = e | f & ~n;\n            b[p + 4 >> 2] = o;\n            h = rd(q | 0, h | 0, i | 0, d | 0) | 0;\n            a = md(a | 0, c | 0, h | 0, H() | 0) | 0;\n            h = 0;\n            c = H() | 0;\n          } } while (0);\n\n          if ((l | 0) > (j | 0)) {\n            e = ~j;\n            j = j + 1 | 0;\n          } else {\n            c = 0;\n            break;\n          }\n        }\n\n        T = m;\n        return c | 0;\n      } } while (0);\n\n      if ((l | 0) < 1) {\n        q = 0;\n        T = m;\n        return q | 0;\n      }\n\n      f = i ^ 15;\n      h = 1;\n\n      while (1) {\n        p = l - h | 0;\n        p = Cc(7, 0, p, ((p | 0) < 0) << 31 >> 31) | 0;\n        q = H() | 0;\n        j = g;\n        d = b[j >> 2] | 0;\n        j = b[j + 4 >> 2] | 0;\n        i = (f - h | 0) * 3 | 0;\n        e = wd(7, 0, i | 0) | 0;\n        j = j & ~(H() | 0);\n        n = pd(a | 0, c | 0, p | 0, q | 0) | 0;\n        o = H() | 0;\n        i = wd(n | 0, o | 0, i | 0) | 0;\n        j = H() | 0 | j;\n        k = g;\n        b[k >> 2] = i | d & ~e;\n        b[k + 4 >> 2] = j;\n        q = rd(n | 0, o | 0, p | 0, q | 0) | 0;\n        a = md(a | 0, c | 0, q | 0, H() | 0) | 0;\n        c = H() | 0;\n\n        if ((l | 0) <= (h | 0)) {\n          c = 0;\n          break;\n        } else { h = h + 1 | 0; }\n      }\n\n      T = m;\n      return c | 0;\n    }\n\n    function Xb(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0;\n      f = vd(c | 0, d | 0, 52) | 0;\n      H() | 0;\n      f = f & 15;\n\n      if ((c | 0) == 0 & (d | 0) == 0 | ((e | 0) > 15 | (f | 0) > (e | 0))) {\n        e = -1;\n        f = -1;\n        c = 0;\n        d = 0;\n      } else {\n        g = zb(c, d, f + 1 | 0, e) | 0;\n        d = (H() | 0) & -15728641;\n        c = wd(e | 0, 0, 52) | 0;\n        c = g | c;\n        d = d | (H() | 0);\n        g = (xb(c, d) | 0) == 0;\n        e = g ? -1 : e;\n      }\n\n      g = a;\n      b[g >> 2] = c;\n      b[g + 4 >> 2] = d;\n      b[a + 8 >> 2] = f;\n      b[a + 12 >> 2] = e;\n      return;\n    }\n\n    function Yb(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0;\n      d = a;\n      c = b[d >> 2] | 0;\n      d = b[d + 4 >> 2] | 0;\n      if ((c | 0) == 0 & (d | 0) == 0) { return; }\n      e = vd(c | 0, d | 0, 52) | 0;\n      H() | 0;\n      e = e & 15;\n      i = wd(1, 0, (e ^ 15) * 3 | 0) | 0;\n      c = ld(i | 0, H() | 0, c | 0, d | 0) | 0;\n      d = H() | 0;\n      i = a;\n      b[i >> 2] = c;\n      b[i + 4 >> 2] = d;\n      i = a + 8 | 0;\n      h = b[i >> 2] | 0;\n      if ((e | 0) < (h | 0)) { return; }\n      j = a + 12 | 0;\n      g = e;\n\n      while (1) {\n        if ((g | 0) == (h | 0)) {\n          e = 5;\n          break;\n        }\n\n        k = (g | 0) == (b[j >> 2] | 0);\n        f = (15 - g | 0) * 3 | 0;\n        e = vd(c | 0, d | 0, f | 0) | 0;\n        H() | 0;\n        e = e & 7;\n\n        if (k & ((e | 0) == 1 & 0 == 0)) {\n          e = 7;\n          break;\n        }\n\n        if (!((e | 0) == 7 & 0 == 0)) {\n          e = 10;\n          break;\n        }\n\n        k = wd(1, 0, f | 0) | 0;\n        c = ld(c | 0, d | 0, k | 0, H() | 0) | 0;\n        d = H() | 0;\n        k = a;\n        b[k >> 2] = c;\n        b[k + 4 >> 2] = d;\n        if ((g | 0) > (h | 0)) { g = g + -1 | 0; }else {\n          e = 10;\n          break;\n        }\n      }\n\n      if ((e | 0) == 5) {\n        k = a;\n        b[k >> 2] = 0;\n        b[k + 4 >> 2] = 0;\n        b[i >> 2] = -1;\n        b[j >> 2] = -1;\n        return;\n      } else if ((e | 0) == 7) {\n        h = wd(1, 0, f | 0) | 0;\n        h = ld(c | 0, d | 0, h | 0, H() | 0) | 0;\n        i = H() | 0;\n        k = a;\n        b[k >> 2] = h;\n        b[k + 4 >> 2] = i;\n        b[j >> 2] = g + -1;\n        return;\n      } else if ((e | 0) == 10) { return; }\n    }\n\n    function Zb(a) {\n      a = +a;\n      var b = 0.0;\n      b = a < 0.0 ? a + 6.283185307179586 : a;\n      return +(!(a >= 6.283185307179586) ? b : b + -6.283185307179586);\n    }\n\n    function _b(a, b) {\n      a = a | 0;\n      b = b | 0;\n\n      if (!(+q(+(+e[a >> 3] - +e[b >> 3])) < 1.7453292519943298e-11)) {\n        b = 0;\n        return b | 0;\n      }\n\n      b = +q(+(+e[a + 8 >> 3] - +e[b + 8 >> 3])) < 1.7453292519943298e-11;\n      return b | 0;\n    }\n\n    function $b(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0.0,\n          d = 0.0,\n          f = 0.0,\n          g = 0.0;\n      f = +e[b >> 3];\n      d = +e[a >> 3];\n      g = +u(+((f - d) * .5));\n      c = +u(+((+e[b + 8 >> 3] - +e[a + 8 >> 3]) * .5));\n      c = g * g + c * (+t(+f) * +t(+d) * c);\n      return +(+z(+ +r(+c), + +r(+(1.0 - c))) * 2.0);\n    }\n\n    function ac(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0.0,\n          d = 0.0,\n          f = 0.0,\n          g = 0.0;\n      f = +e[b >> 3];\n      d = +e[a >> 3];\n      g = +u(+((f - d) * .5));\n      c = +u(+((+e[b + 8 >> 3] - +e[a + 8 >> 3]) * .5));\n      c = g * g + c * (+t(+f) * +t(+d) * c);\n      return +(+z(+ +r(+c), + +r(+(1.0 - c))) * 2.0 * 6371.007180918475);\n    }\n\n    function bc(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0.0,\n          d = 0.0,\n          f = 0.0,\n          g = 0.0;\n      f = +e[b >> 3];\n      d = +e[a >> 3];\n      g = +u(+((f - d) * .5));\n      c = +u(+((+e[b + 8 >> 3] - +e[a + 8 >> 3]) * .5));\n      c = g * g + c * (+t(+f) * +t(+d) * c);\n      return +(+z(+ +r(+c), + +r(+(1.0 - c))) * 2.0 * 6371.007180918475 * 1.0e3);\n    }\n\n    function cc(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0.0,\n          d = 0.0,\n          f = 0.0,\n          g = 0.0,\n          h = 0.0;\n      g = +e[b >> 3];\n      d = +t(+g);\n      f = +e[b + 8 >> 3] - +e[a + 8 >> 3];\n      h = d * +u(+f);\n      c = +e[a >> 3];\n      return + +z(+h, +(+u(+g) * +t(+c) - +t(+f) * (d * +u(+c))));\n    }\n\n    function dc(a, c, d, f) {\n      a = a | 0;\n      c = +c;\n      d = +d;\n      f = f | 0;\n      var g = 0,\n          h = 0.0,\n          i = 0.0,\n          j = 0.0;\n\n      if (d < 1.0e-16) {\n        b[f >> 2] = b[a >> 2];\n        b[f + 4 >> 2] = b[a + 4 >> 2];\n        b[f + 8 >> 2] = b[a + 8 >> 2];\n        b[f + 12 >> 2] = b[a + 12 >> 2];\n        return;\n      }\n\n      h = c < 0.0 ? c + 6.283185307179586 : c;\n      h = !(c >= 6.283185307179586) ? h : h + -6.283185307179586;\n\n      do { if (h < 1.0e-16) {\n        c = +e[a >> 3] + d;\n        e[f >> 3] = c;\n        g = f;\n      } else {\n        g = +q(+(h + -3.141592653589793)) < 1.0e-16;\n        c = +e[a >> 3];\n\n        if (g) {\n          c = c - d;\n          e[f >> 3] = c;\n          g = f;\n          break;\n        }\n\n        i = +t(+d);\n        d = +u(+d);\n        c = i * +u(+c) + +t(+h) * (d * +t(+c));\n        c = c > 1.0 ? 1.0 : c;\n        c = +x(+(c < -1.0 ? -1.0 : c));\n        e[f >> 3] = c;\n\n        if (+q(+(c + -1.5707963267948966)) < 1.0e-16) {\n          e[f >> 3] = 1.5707963267948966;\n          e[f + 8 >> 3] = 0.0;\n          return;\n        }\n\n        if (+q(+(c + 1.5707963267948966)) < 1.0e-16) {\n          e[f >> 3] = -1.5707963267948966;\n          e[f + 8 >> 3] = 0.0;\n          return;\n        }\n\n        j = +t(+c);\n        h = d * +u(+h) / j;\n        d = +e[a >> 3];\n        c = (i - +u(+c) * +u(+d)) / +t(+d) / j;\n        i = h > 1.0 ? 1.0 : h;\n        c = c > 1.0 ? 1.0 : c;\n        c = +e[a + 8 >> 3] + +z(+(i < -1.0 ? -1.0 : i), +(c < -1.0 ? -1.0 : c));\n        if (c > 3.141592653589793) { do { c = c + -6.283185307179586; } while (c > 3.141592653589793); }\n        if (c < -3.141592653589793) { do { c = c + 6.283185307179586; } while (c < -3.141592653589793); }\n        e[f + 8 >> 3] = c;\n        return;\n      } } while (0);\n\n      if (+q(+(c + -1.5707963267948966)) < 1.0e-16) {\n        e[g >> 3] = 1.5707963267948966;\n        e[f + 8 >> 3] = 0.0;\n        return;\n      }\n\n      if (+q(+(c + 1.5707963267948966)) < 1.0e-16) {\n        e[g >> 3] = -1.5707963267948966;\n        e[f + 8 >> 3] = 0.0;\n        return;\n      }\n\n      c = +e[a + 8 >> 3];\n      if (c > 3.141592653589793) { do { c = c + -6.283185307179586; } while (c > 3.141592653589793); }\n      if (c < -3.141592653589793) { do { c = c + 6.283185307179586; } while (c < -3.141592653589793); }\n      e[f + 8 >> 3] = c;\n      return;\n    }\n\n    function ec(a, b) {\n      a = a | 0;\n      b = b | 0;\n\n      if (a >>> 0 > 15) {\n        b = 4;\n        return b | 0;\n      }\n\n      e[b >> 3] = +e[20528 + (a << 3) >> 3];\n      b = 0;\n      return b | 0;\n    }\n\n    function fc(a, b) {\n      a = a | 0;\n      b = b | 0;\n\n      if (a >>> 0 > 15) {\n        b = 4;\n        return b | 0;\n      }\n\n      e[b >> 3] = +e[20656 + (a << 3) >> 3];\n      b = 0;\n      return b | 0;\n    }\n\n    function gc(a, b) {\n      a = a | 0;\n      b = b | 0;\n\n      if (a >>> 0 > 15) {\n        b = 4;\n        return b | 0;\n      }\n\n      e[b >> 3] = +e[20784 + (a << 3) >> 3];\n      b = 0;\n      return b | 0;\n    }\n\n    function hc(a, b) {\n      a = a | 0;\n      b = b | 0;\n\n      if (a >>> 0 > 15) {\n        b = 4;\n        return b | 0;\n      }\n\n      e[b >> 3] = +e[20912 + (a << 3) >> 3];\n      b = 0;\n      return b | 0;\n    }\n\n    function ic(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0;\n\n      if (a >>> 0 > 15) {\n        c = 4;\n        return c | 0;\n      }\n\n      d = Cc(7, 0, a, ((a | 0) < 0) << 31 >> 31) | 0;\n      d = rd(d | 0, H() | 0, 120, 0) | 0;\n      a = H() | 0;\n      b[c >> 2] = d | 2;\n      b[c + 4 >> 2] = a;\n      c = 0;\n      return c | 0;\n    }\n\n    function jc(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      var d = 0.0,\n          f = 0.0,\n          g = 0.0,\n          h = 0.0,\n          i = 0.0,\n          j = 0.0,\n          k = 0.0,\n          l = 0.0,\n          m = 0.0,\n          n = 0.0;\n      n = +e[b >> 3];\n      l = +e[a >> 3];\n      j = +u(+((n - l) * .5));\n      g = +e[b + 8 >> 3];\n      k = +e[a + 8 >> 3];\n      h = +u(+((g - k) * .5));\n      i = +t(+l);\n      m = +t(+n);\n      h = j * j + h * (m * i * h);\n      h = +z(+ +r(+h), + +r(+(1.0 - h))) * 2.0;\n      j = +e[c >> 3];\n      n = +u(+((j - n) * .5));\n      d = +e[c + 8 >> 3];\n      g = +u(+((d - g) * .5));\n      f = +t(+j);\n      g = n * n + g * (m * f * g);\n      g = +z(+ +r(+g), + +r(+(1.0 - g))) * 2.0;\n      j = +u(+((l - j) * .5));\n      d = +u(+((k - d) * .5));\n      d = j * j + d * (i * f * d);\n      d = +z(+ +r(+d), + +r(+(1.0 - d))) * 2.0;\n      f = (h + g + d) * .5;\n      return +(+y(+ +r(+(+v(+(f * .5)) * +v(+((f - h) * .5)) * +v(+((f - g) * .5)) * +v(+((f - d) * .5))))) * 4.0);\n    }\n\n    function kc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0.0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      j = T;\n      T = T + 192 | 0;\n      h = j + 168 | 0;\n      i = j;\n      g = Pb(a, c, h) | 0;\n\n      if (g | 0) {\n        d = g;\n        T = j;\n        return d | 0;\n      }\n\n      if (Qb(a, c, i) | 0) { I(23313, 22742, 386, 22751); }\n      c = b[i >> 2] | 0;\n\n      if ((c | 0) > 0) {\n        f = +jc(i + 8 | 0, i + 8 + (((c | 0) != 1 & 1) << 4) | 0, h) + 0.0;\n\n        if ((c | 0) != 1) {\n          a = 1;\n\n          do {\n            g = a;\n            a = a + 1 | 0;\n            f = f + +jc(i + 8 + (g << 4) | 0, i + 8 + (((a | 0) % (c | 0) | 0) << 4) | 0, h);\n          } while ((a | 0) < (c | 0));\n        }\n      } else { f = 0.0; }\n\n      e[d >> 3] = f;\n      d = 0;\n      T = j;\n      return d | 0;\n    }\n\n    function lc(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      a = kc(a, b, c) | 0;\n      if (a | 0) { return a | 0; }\n      e[c >> 3] = +e[c >> 3] * 6371.007180918475 * 6371.007180918475;\n      return a | 0;\n    }\n\n    function mc(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      a = kc(a, b, c) | 0;\n      if (a | 0) { return a | 0; }\n      e[c >> 3] = +e[c >> 3] * 6371.007180918475 * 6371.007180918475 * 1.0e3 * 1.0e3;\n      return a | 0;\n    }\n\n    function nc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0.0,\n          g = 0.0,\n          h = 0.0,\n          i = 0,\n          j = 0,\n          k = 0.0,\n          l = 0.0,\n          m = 0.0;\n      j = T;\n      T = T + 176 | 0;\n      i = j;\n      a = gb(a, c, i) | 0;\n\n      if (a | 0) {\n        i = a;\n        T = j;\n        return i | 0;\n      }\n\n      e[d >> 3] = 0.0;\n      a = b[i >> 2] | 0;\n\n      if ((a | 0) <= 1) {\n        i = 0;\n        T = j;\n        return i | 0;\n      }\n\n      c = a + -1 | 0;\n      a = 0;\n      f = +e[i + 8 >> 3];\n      g = +e[i + 16 >> 3];\n      h = 0.0;\n\n      do {\n        a = a + 1 | 0;\n        l = f;\n        f = +e[i + 8 + (a << 4) >> 3];\n        m = +u(+((f - l) * .5));\n        k = g;\n        g = +e[i + 8 + (a << 4) + 8 >> 3];\n        k = +u(+((g - k) * .5));\n        k = m * m + k * (+t(+f) * +t(+l) * k);\n        h = h + +z(+ +r(+k), + +r(+(1.0 - k))) * 2.0;\n      } while ((a | 0) < (c | 0));\n\n      e[d >> 3] = h;\n      i = 0;\n      T = j;\n      return i | 0;\n    }\n\n    function oc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0.0,\n          g = 0.0,\n          h = 0.0,\n          i = 0,\n          j = 0,\n          k = 0.0,\n          l = 0.0,\n          m = 0.0;\n      j = T;\n      T = T + 176 | 0;\n      i = j;\n      a = gb(a, c, i) | 0;\n\n      if (a | 0) {\n        i = a;\n        h = +e[d >> 3];\n        h = h * 6371.007180918475;\n        e[d >> 3] = h;\n        T = j;\n        return i | 0;\n      }\n\n      e[d >> 3] = 0.0;\n      a = b[i >> 2] | 0;\n\n      if ((a | 0) <= 1) {\n        i = 0;\n        h = 0.0;\n        h = h * 6371.007180918475;\n        e[d >> 3] = h;\n        T = j;\n        return i | 0;\n      }\n\n      c = a + -1 | 0;\n      a = 0;\n      f = +e[i + 8 >> 3];\n      g = +e[i + 16 >> 3];\n      h = 0.0;\n\n      do {\n        a = a + 1 | 0;\n        l = f;\n        f = +e[i + 8 + (a << 4) >> 3];\n        m = +u(+((f - l) * .5));\n        k = g;\n        g = +e[i + 8 + (a << 4) + 8 >> 3];\n        k = +u(+((g - k) * .5));\n        k = m * m + k * (+t(+l) * +t(+f) * k);\n        h = h + +z(+ +r(+k), + +r(+(1.0 - k))) * 2.0;\n      } while ((a | 0) != (c | 0));\n\n      e[d >> 3] = h;\n      i = 0;\n      m = h;\n      m = m * 6371.007180918475;\n      e[d >> 3] = m;\n      T = j;\n      return i | 0;\n    }\n\n    function pc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0.0,\n          g = 0.0,\n          h = 0.0,\n          i = 0,\n          j = 0,\n          k = 0.0,\n          l = 0.0,\n          m = 0.0;\n      j = T;\n      T = T + 176 | 0;\n      i = j;\n      a = gb(a, c, i) | 0;\n\n      if (a | 0) {\n        i = a;\n        h = +e[d >> 3];\n        h = h * 6371.007180918475;\n        h = h * 1.0e3;\n        e[d >> 3] = h;\n        T = j;\n        return i | 0;\n      }\n\n      e[d >> 3] = 0.0;\n      a = b[i >> 2] | 0;\n\n      if ((a | 0) <= 1) {\n        i = 0;\n        h = 0.0;\n        h = h * 6371.007180918475;\n        h = h * 1.0e3;\n        e[d >> 3] = h;\n        T = j;\n        return i | 0;\n      }\n\n      c = a + -1 | 0;\n      a = 0;\n      f = +e[i + 8 >> 3];\n      g = +e[i + 16 >> 3];\n      h = 0.0;\n\n      do {\n        a = a + 1 | 0;\n        l = f;\n        f = +e[i + 8 + (a << 4) >> 3];\n        m = +u(+((f - l) * .5));\n        k = g;\n        g = +e[i + 8 + (a << 4) + 8 >> 3];\n        k = +u(+((g - k) * .5));\n        k = m * m + k * (+t(+l) * +t(+f) * k);\n        h = h + +z(+ +r(+k), + +r(+(1.0 - k))) * 2.0;\n      } while ((a | 0) != (c | 0));\n\n      e[d >> 3] = h;\n      i = 0;\n      m = h;\n      m = m * 6371.007180918475;\n      m = m * 1.0e3;\n      e[d >> 3] = m;\n      T = j;\n      return i | 0;\n    }\n\n    function qc(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0;\n      c = kd(1, 12) | 0;\n      if (!c) { I(22832, 22787, 49, 22845); }\n      d = a + 4 | 0;\n      e = b[d >> 2] | 0;\n\n      if (e | 0) {\n        e = e + 8 | 0;\n        b[e >> 2] = c;\n        b[d >> 2] = c;\n        return c | 0;\n      }\n\n      if (b[a >> 2] | 0) { I(22862, 22787, 61, 22885); }\n      e = a;\n      b[e >> 2] = c;\n      b[d >> 2] = c;\n      return c | 0;\n    }\n\n    function rc(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0;\n      e = id(24) | 0;\n      if (!e) { I(22899, 22787, 78, 22913); }\n      b[e >> 2] = b[c >> 2];\n      b[e + 4 >> 2] = b[c + 4 >> 2];\n      b[e + 8 >> 2] = b[c + 8 >> 2];\n      b[e + 12 >> 2] = b[c + 12 >> 2];\n      b[e + 16 >> 2] = 0;\n      c = a + 4 | 0;\n      d = b[c >> 2] | 0;\n\n      if (d | 0) {\n        b[d + 16 >> 2] = e;\n        b[c >> 2] = e;\n        return e | 0;\n      }\n\n      if (b[a >> 2] | 0) { I(22928, 22787, 82, 22913); }\n      b[a >> 2] = e;\n      b[c >> 2] = e;\n      return e | 0;\n    }\n\n    function sc(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0;\n      if (!a) { return; }\n      e = 1;\n\n      while (1) {\n        c = b[a >> 2] | 0;\n        if (c | 0) { do {\n          d = b[c >> 2] | 0;\n          if (d | 0) { do {\n            f = d;\n            d = b[d + 16 >> 2] | 0;\n            jd(f);\n          } while ((d | 0) != 0); }\n          f = c;\n          c = b[c + 8 >> 2] | 0;\n          jd(f);\n        } while ((c | 0) != 0); }\n        c = a;\n        a = b[a + 8 >> 2] | 0;\n        if (!e) { jd(c); }\n        if (!a) { break; }else { e = 0; }\n      }\n\n      return;\n    }\n\n    function tc(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          f = 0,\n          g = 0,\n          h = 0.0,\n          i = 0,\n          j = 0.0,\n          k = 0.0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          r = 0,\n          s = 0.0,\n          t = 0.0,\n          u = 0.0,\n          v = 0.0,\n          w = 0.0,\n          x = 0.0,\n          y = 0,\n          z = 0,\n          A = 0,\n          B = 0,\n          C = 0,\n          D = 0,\n          E = 0,\n          F = 0,\n          G = 0,\n          H = 0,\n          J = 0,\n          K = 0;\n      g = a + 8 | 0;\n\n      if (b[g >> 2] | 0) {\n        K = 1;\n        return K | 0;\n      }\n\n      f = b[a >> 2] | 0;\n\n      if (!f) {\n        K = 0;\n        return K | 0;\n      }\n\n      c = f;\n      d = 0;\n\n      do {\n        d = d + 1 | 0;\n        c = b[c + 8 >> 2] | 0;\n      } while ((c | 0) != 0);\n\n      if (d >>> 0 < 2) {\n        K = 0;\n        return K | 0;\n      }\n\n      H = id(d << 2) | 0;\n      if (!H) { I(22948, 22787, 317, 22967); }\n      G = id(d << 5) | 0;\n      if (!G) { I(22989, 22787, 321, 22967); }\n      b[a >> 2] = 0;\n      z = a + 4 | 0;\n      b[z >> 2] = 0;\n      b[g >> 2] = 0;\n      d = 0;\n      F = 0;\n      y = 0;\n      n = 0;\n\n      a: while (1) {\n        m = b[f >> 2] | 0;\n\n        if (m) {\n          h = 0.0;\n          i = m;\n\n          do {\n            k = +e[i + 8 >> 3];\n            c = i;\n            i = b[i + 16 >> 2] | 0;\n            l = (i | 0) == 0;\n            g = l ? m : i;\n            j = +e[g + 8 >> 3];\n\n            if (+q(+(k - j)) > 3.141592653589793) {\n              K = 14;\n              break;\n            }\n\n            h = h + (j - k) * (+e[c >> 3] + +e[g >> 3]);\n          } while (!l);\n\n          if ((K | 0) == 14) {\n            K = 0;\n            h = 0.0;\n            c = m;\n\n            do {\n              x = +e[c + 8 >> 3];\n              E = c + 16 | 0;\n              D = b[E >> 2] | 0;\n              D = (D | 0) == 0 ? m : D;\n              w = +e[D + 8 >> 3];\n              h = h + (+e[c >> 3] + +e[D >> 3]) * ((w < 0.0 ? w + 6.283185307179586 : w) - (x < 0.0 ? x + 6.283185307179586 : x));\n              c = b[((c | 0) == 0 ? f : E) >> 2] | 0;\n            } while ((c | 0) != 0);\n          }\n\n          if (h > 0.0) {\n            b[H + (F << 2) >> 2] = f;\n            F = F + 1 | 0;\n            g = y;\n            c = n;\n          } else { K = 19; }\n        } else { K = 19; }\n\n        if ((K | 0) == 19) {\n          K = 0;\n\n          do { if (!d) {\n            if (!n) {\n              if (!(b[a >> 2] | 0)) {\n                g = z;\n                i = a;\n                c = f;\n                d = a;\n                break;\n              } else {\n                K = 27;\n                break a;\n              }\n            } else {\n              g = z;\n              i = n + 8 | 0;\n              c = f;\n              d = a;\n              break;\n            }\n          } else {\n            c = d + 8 | 0;\n\n            if (b[c >> 2] | 0) {\n              K = 21;\n              break a;\n            }\n\n            d = kd(1, 12) | 0;\n\n            if (!d) {\n              K = 23;\n              break a;\n            }\n\n            b[c >> 2] = d;\n            g = d + 4 | 0;\n            i = d;\n            c = n;\n          } } while (0);\n\n          b[i >> 2] = f;\n          b[g >> 2] = f;\n          i = G + (y << 5) | 0;\n          l = b[f >> 2] | 0;\n\n          if (l) {\n            m = G + (y << 5) + 8 | 0;\n            e[m >> 3] = 1797693134862315708145274.0e284;\n            n = G + (y << 5) + 24 | 0;\n            e[n >> 3] = 1797693134862315708145274.0e284;\n            e[i >> 3] = -1797693134862315708145274.0e284;\n            o = G + (y << 5) + 16 | 0;\n            e[o >> 3] = -1797693134862315708145274.0e284;\n            u = 1797693134862315708145274.0e284;\n            v = -1797693134862315708145274.0e284;\n            g = 0;\n            p = l;\n            k = 1797693134862315708145274.0e284;\n            s = 1797693134862315708145274.0e284;\n            t = -1797693134862315708145274.0e284;\n            j = -1797693134862315708145274.0e284;\n\n            while (1) {\n              h = +e[p >> 3];\n              x = +e[p + 8 >> 3];\n              p = b[p + 16 >> 2] | 0;\n              r = (p | 0) == 0;\n              w = +e[(r ? l : p) + 8 >> 3];\n\n              if (h < k) {\n                e[m >> 3] = h;\n                k = h;\n              }\n\n              if (x < s) {\n                e[n >> 3] = x;\n                s = x;\n              }\n\n              if (h > t) { e[i >> 3] = h; }else { h = t; }\n\n              if (x > j) {\n                e[o >> 3] = x;\n                j = x;\n              }\n\n              u = x > 0.0 & x < u ? x : u;\n              v = x < 0.0 & x > v ? x : v;\n              g = g | +q(+(x - w)) > 3.141592653589793;\n              if (r) { break; }else { t = h; }\n            }\n\n            if (g) {\n              e[o >> 3] = v;\n              e[n >> 3] = u;\n            }\n          } else {\n            b[i >> 2] = 0;\n            b[i + 4 >> 2] = 0;\n            b[i + 8 >> 2] = 0;\n            b[i + 12 >> 2] = 0;\n            b[i + 16 >> 2] = 0;\n            b[i + 20 >> 2] = 0;\n            b[i + 24 >> 2] = 0;\n            b[i + 28 >> 2] = 0;\n          }\n\n          g = y + 1 | 0;\n        }\n\n        E = f + 8 | 0;\n        f = b[E >> 2] | 0;\n        b[E >> 2] = 0;\n\n        if (!f) {\n          K = 45;\n          break;\n        } else {\n          y = g;\n          n = c;\n        }\n      }\n\n      if ((K | 0) == 21) { I(22765, 22787, 35, 22799); }else if ((K | 0) == 23) { I(22819, 22787, 37, 22799); }else if ((K | 0) == 27) { I(22862, 22787, 61, 22885); }else if ((K | 0) == 45) {\n        b: do { if ((F | 0) > 0) {\n          E = (g | 0) == 0;\n          C = g << 2;\n          D = (a | 0) == 0;\n          B = 0;\n          c = 0;\n\n          while (1) {\n            A = b[H + (B << 2) >> 2] | 0;\n\n            if (!E) {\n              y = id(C) | 0;\n\n              if (!y) {\n                K = 50;\n                break;\n              }\n\n              z = id(C) | 0;\n\n              if (!z) {\n                K = 52;\n                break;\n              }\n\n              c: do { if (!D) {\n                g = 0;\n                d = 0;\n                i = a;\n\n                while (1) {\n                  f = G + (g << 5) | 0;\n\n                  if (uc(b[i >> 2] | 0, f, b[A >> 2] | 0) | 0) {\n                    b[y + (d << 2) >> 2] = i;\n                    b[z + (d << 2) >> 2] = f;\n                    r = d + 1 | 0;\n                  } else { r = d; }\n\n                  i = b[i + 8 >> 2] | 0;\n                  if (!i) { break; }else {\n                    g = g + 1 | 0;\n                    d = r;\n                  }\n                }\n\n                if ((r | 0) > 0) {\n                  f = b[y >> 2] | 0;\n                  if ((r | 0) == 1) { d = f; }else {\n                    o = 0;\n                    p = -1;\n                    d = f;\n                    n = f;\n\n                    while (1) {\n                      l = b[n >> 2] | 0;\n                      f = 0;\n                      i = 0;\n\n                      while (1) {\n                        g = b[b[y + (i << 2) >> 2] >> 2] | 0;\n                        if ((g | 0) == (l | 0)) { m = f; }else { m = f + ((uc(g, b[z + (i << 2) >> 2] | 0, b[l >> 2] | 0) | 0) & 1) | 0; }\n                        i = i + 1 | 0;\n                        if ((i | 0) == (r | 0)) { break; }else { f = m; }\n                      }\n\n                      g = (m | 0) > (p | 0);\n                      d = g ? n : d;\n                      f = o + 1 | 0;\n                      if ((f | 0) == (r | 0)) { break c; }\n                      o = f;\n                      p = g ? m : p;\n                      n = b[y + (f << 2) >> 2] | 0;\n                    }\n                  }\n                } else { d = 0; }\n              } else { d = 0; } } while (0);\n\n              jd(y);\n              jd(z);\n\n              if (d) {\n                g = d + 4 | 0;\n                f = b[g >> 2] | 0;\n\n                if (!f) {\n                  if (b[d >> 2] | 0) {\n                    K = 70;\n                    break;\n                  }\n                } else { d = f + 8 | 0; }\n\n                b[d >> 2] = A;\n                b[g >> 2] = A;\n              } else { K = 73; }\n            } else { K = 73; }\n\n            if ((K | 0) == 73) {\n              K = 0;\n              c = b[A >> 2] | 0;\n              if (c | 0) { do {\n                z = c;\n                c = b[c + 16 >> 2] | 0;\n                jd(z);\n              } while ((c | 0) != 0); }\n              jd(A);\n              c = 1;\n            }\n\n            B = B + 1 | 0;\n\n            if ((B | 0) >= (F | 0)) {\n              J = c;\n              break b;\n            }\n          }\n\n          if ((K | 0) == 50) { I(23004, 22787, 249, 23023); }else if ((K | 0) == 52) { I(23042, 22787, 252, 23023); }else if ((K | 0) == 70) { I(22862, 22787, 61, 22885); }\n        } else { J = 0; } } while (0);\n\n        jd(H);\n        jd(G);\n        K = J;\n        return K | 0;\n      }\n      return 0;\n    }\n\n    function uc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0.0,\n          g = 0.0,\n          h = 0.0,\n          i = 0.0,\n          j = 0.0,\n          k = 0.0,\n          l = 0.0,\n          m = 0;\n\n      if (!(ya(c, d) | 0)) {\n        a = 0;\n        return a | 0;\n      }\n\n      c = xa(c) | 0;\n      f = +e[d >> 3];\n      g = +e[d + 8 >> 3];\n      g = c & g < 0.0 ? g + 6.283185307179586 : g;\n      a = b[a >> 2] | 0;\n\n      if (!a) {\n        a = 0;\n        return a | 0;\n      }\n\n      if (c) {\n        c = 0;\n        l = g;\n        d = a;\n\n        a: while (1) {\n          while (1) {\n            i = +e[d >> 3];\n            g = +e[d + 8 >> 3];\n            d = d + 16 | 0;\n            m = b[d >> 2] | 0;\n            m = (m | 0) == 0 ? a : m;\n            h = +e[m >> 3];\n            j = +e[m + 8 >> 3];\n\n            if (i > h) {\n              k = i;\n              i = j;\n            } else {\n              k = h;\n              h = i;\n              i = g;\n              g = j;\n            }\n\n            f = f == h | f == k ? f + 2.220446049250313e-16 : f;\n            if (!(f < h | f > k)) { break; }\n            d = b[d >> 2] | 0;\n\n            if (!d) {\n              d = 22;\n              break a;\n            }\n          }\n\n          j = i < 0.0 ? i + 6.283185307179586 : i;\n          i = g < 0.0 ? g + 6.283185307179586 : g;\n          l = j == l | i == l ? l + -2.220446049250313e-16 : l;\n          k = j + (i - j) * ((f - h) / (k - h));\n          if ((k < 0.0 ? k + 6.283185307179586 : k) > l) { c = c ^ 1; }\n          d = b[d >> 2] | 0;\n\n          if (!d) {\n            d = 22;\n            break;\n          }\n        }\n\n        if ((d | 0) == 22) { return c | 0; }\n      } else {\n        c = 0;\n        l = g;\n        d = a;\n\n        b: while (1) {\n          while (1) {\n            i = +e[d >> 3];\n            g = +e[d + 8 >> 3];\n            d = d + 16 | 0;\n            m = b[d >> 2] | 0;\n            m = (m | 0) == 0 ? a : m;\n            h = +e[m >> 3];\n            j = +e[m + 8 >> 3];\n\n            if (i > h) {\n              k = i;\n              i = j;\n            } else {\n              k = h;\n              h = i;\n              i = g;\n              g = j;\n            }\n\n            f = f == h | f == k ? f + 2.220446049250313e-16 : f;\n            if (!(f < h | f > k)) { break; }\n            d = b[d >> 2] | 0;\n\n            if (!d) {\n              d = 22;\n              break b;\n            }\n          }\n\n          l = i == l | g == l ? l + -2.220446049250313e-16 : l;\n          if (i + (g - i) * ((f - h) / (k - h)) > l) { c = c ^ 1; }\n          d = b[d >> 2] | 0;\n\n          if (!d) {\n            d = 22;\n            break;\n          }\n        }\n\n        if ((d | 0) == 22) { return c | 0; }\n      }\n\n      return 0;\n    }\n\n    function vc(c, d, e, f, g) {\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      g = g | 0;\n      var h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0;\n      u = T;\n      T = T + 32 | 0;\n      t = u + 16 | 0;\n      s = u;\n      h = vd(c | 0, d | 0, 52) | 0;\n      H() | 0;\n      h = h & 15;\n      p = vd(e | 0, f | 0, 52) | 0;\n      H() | 0;\n\n      if ((h | 0) != (p & 15 | 0)) {\n        t = 12;\n        T = u;\n        return t | 0;\n      }\n\n      l = vd(c | 0, d | 0, 45) | 0;\n      H() | 0;\n      l = l & 127;\n      m = vd(e | 0, f | 0, 45) | 0;\n      H() | 0;\n      m = m & 127;\n\n      if (l >>> 0 > 121 | m >>> 0 > 121) {\n        t = 5;\n        T = u;\n        return t | 0;\n      }\n\n      p = (l | 0) != (m | 0);\n\n      if (p) {\n        j = ua(l, m) | 0;\n\n        if ((j | 0) == 7) {\n          t = 1;\n          T = u;\n          return t | 0;\n        }\n\n        k = ua(m, l) | 0;\n        if ((k | 0) == 7) { I(23066, 23090, 161, 23100); }else {\n          q = j;\n          i = k;\n        }\n      } else {\n        q = 0;\n        i = 0;\n      }\n\n      n = ma(l) | 0;\n      o = ma(m) | 0;\n      b[t >> 2] = 0;\n      b[t + 4 >> 2] = 0;\n      b[t + 8 >> 2] = 0;\n      b[t + 12 >> 2] = 0;\n\n      do { if (!q) {\n        Nb(e, f, t) | 0;\n\n        if ((n | 0) != 0 & (o | 0) != 0) {\n          if ((m | 0) != (l | 0)) { I(23173, 23090, 261, 23100); }\n          i = Fb(c, d) | 0;\n          h = Fb(e, f) | 0;\n          if (!((i | 0) == 7 | (h | 0) == 7)) {\n            if (!(a[21872 + (i * 7 | 0) + h >> 0] | 0)) {\n              i = b[21040 + (i * 28 | 0) + (h << 2) >> 2] | 0;\n\n              if ((i | 0) > 0) {\n                j = t + 4 | 0;\n                h = 0;\n\n                do {\n                  Ra(j);\n                  h = h + 1 | 0;\n                } while ((h | 0) != (i | 0));\n\n                r = 51;\n              } else { r = 51; }\n            } else { h = 1; }\n          } else { h = 5; }\n        } else { r = 51; }\n      } else {\n        m = b[4272 + (l * 28 | 0) + (q << 2) >> 2] | 0;\n        j = (m | 0) > 0;\n        if (!o) {\n          if (j) {\n            l = 0;\n            k = e;\n            j = f;\n\n            do {\n              k = Jb(k, j) | 0;\n              j = H() | 0;\n              i = Ta(i) | 0;\n              l = l + 1 | 0;\n            } while ((l | 0) != (m | 0));\n\n            m = i;\n            l = k;\n            k = j;\n          } else {\n            m = i;\n            l = e;\n            k = f;\n          }\n        } else if (j) {\n          l = 0;\n          k = e;\n          j = f;\n\n          do {\n            k = Ib(k, j) | 0;\n            j = H() | 0;\n            i = Ta(i) | 0;\n            if ((i | 0) == 1) { i = Ta(1) | 0; }\n            l = l + 1 | 0;\n          } while ((l | 0) != (m | 0));\n\n          m = i;\n          l = k;\n          k = j;\n        } else {\n          m = i;\n          l = e;\n          k = f;\n        }\n        Nb(l, k, t) | 0;\n        if (!p) { I(23115, 23090, 191, 23100); }\n        j = (n | 0) != 0;\n        i = (o | 0) != 0;\n        if (j & i) { I(23142, 23090, 192, 23100); }\n        if (!j) {\n          if (i) {\n            i = Fb(l, k) | 0;\n\n            if ((i | 0) == 7) {\n              h = 5;\n              break;\n            }\n\n            if (a[21872 + (i * 7 | 0) + m >> 0] | 0) {\n              h = 1;\n              break;\n            }\n\n            l = 0;\n            k = b[21040 + (m * 28 | 0) + (i << 2) >> 2] | 0;\n          } else {\n            l = 0;\n            k = 0;\n          }\n        } else {\n          i = Fb(c, d) | 0;\n\n          if ((i | 0) == 7) {\n            h = 5;\n            break;\n          }\n\n          if (a[21872 + (i * 7 | 0) + q >> 0] | 0) {\n            h = 1;\n            break;\n          }\n\n          k = b[21040 + (i * 28 | 0) + (q << 2) >> 2] | 0;\n          l = k;\n        }\n        if ((l | k | 0) < 0) { h = 5; }else {\n          if ((k | 0) > 0) {\n            j = t + 4 | 0;\n            i = 0;\n\n            do {\n              Ra(j);\n              i = i + 1 | 0;\n            } while ((i | 0) != (k | 0));\n          }\n          b[s >> 2] = 0;\n          b[s + 4 >> 2] = 0;\n          b[s + 8 >> 2] = 0;\n          Pa(s, q);\n          if (h | 0) { while (1) {\n            if (!(Lb(h) | 0)) { Oa(s); }else { Na(s); }\n            if ((h | 0) > 1) { h = h + -1 | 0; }else { break; }\n          } }\n\n          if ((l | 0) > 0) {\n            h = 0;\n\n            do {\n              Ra(s);\n              h = h + 1 | 0;\n            } while ((h | 0) != (l | 0));\n          }\n\n          r = t + 4 | 0;\n          Fa(r, s, r);\n          Da(r);\n          r = 51;\n        }\n      } } while (0);\n\n      if ((r | 0) == 51) {\n        h = t + 4 | 0;\n        b[g >> 2] = b[h >> 2];\n        b[g + 4 >> 2] = b[h + 4 >> 2];\n        b[g + 8 >> 2] = b[h + 8 >> 2];\n        h = 0;\n      }\n\n      t = h;\n      T = u;\n      return t | 0;\n    }\n\n    function wc(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0;\n      q = T;\n      T = T + 48 | 0;\n      k = q + 36 | 0;\n      h = q + 24 | 0;\n      i = q + 12 | 0;\n      j = q;\n      f = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      f = f & 15;\n      n = vd(a | 0, c | 0, 45) | 0;\n      H() | 0;\n      n = n & 127;\n\n      if (n >>> 0 > 121) {\n        e = 5;\n        T = q;\n        return e | 0;\n      }\n\n      l = ma(n) | 0;\n      wd(f | 0, 0, 52) | 0;\n      r = H() | 0 | 134225919;\n      g = e;\n      b[g >> 2] = -1;\n      b[g + 4 >> 2] = r;\n\n      if (!f) {\n        f = Ia(d) | 0;\n\n        if ((f | 0) == 7) {\n          r = 1;\n          T = q;\n          return r | 0;\n        }\n\n        f = ta(n, f) | 0;\n\n        if ((f | 0) == 127) {\n          r = 1;\n          T = q;\n          return r | 0;\n        }\n\n        o = wd(f | 0, 0, 45) | 0;\n        p = H() | 0;\n        n = e;\n        p = b[n + 4 >> 2] & -1040385 | p;\n        r = e;\n        b[r >> 2] = b[n >> 2] | o;\n        b[r + 4 >> 2] = p;\n        r = 0;\n        T = q;\n        return r | 0;\n      }\n      b[k >> 2] = b[d >> 2];\n      b[k + 4 >> 2] = b[d + 4 >> 2];\n      b[k + 8 >> 2] = b[d + 8 >> 2];\n      d = f;\n\n      while (1) {\n        g = d;\n        d = d + -1 | 0;\n        b[h >> 2] = b[k >> 2];\n        b[h + 4 >> 2] = b[k + 4 >> 2];\n        b[h + 8 >> 2] = b[k + 8 >> 2];\n\n        if (!(Lb(g) | 0)) {\n          f = Ka(k) | 0;\n\n          if (f | 0) {\n            d = 13;\n            break;\n          }\n          b[i >> 2] = b[k >> 2];\n          b[i + 4 >> 2] = b[k + 4 >> 2];\n          b[i + 8 >> 2] = b[k + 8 >> 2];\n          Oa(i);\n        } else {\n          f = Ja(k) | 0;\n\n          if (f | 0) {\n            d = 13;\n            break;\n          }\n          b[i >> 2] = b[k >> 2];\n          b[i + 4 >> 2] = b[k + 4 >> 2];\n          b[i + 8 >> 2] = b[k + 8 >> 2];\n          Na(i);\n        }\n\n        Ga(h, i, j);\n        Da(j);\n        f = e;\n        t = b[f >> 2] | 0;\n        f = b[f + 4 >> 2] | 0;\n        u = (15 - g | 0) * 3 | 0;\n        s = wd(7, 0, u | 0) | 0;\n        f = f & ~(H() | 0);\n        u = wd(Ia(j) | 0, 0, u | 0) | 0;\n        f = H() | 0 | f;\n        r = e;\n        b[r >> 2] = u | t & ~s;\n        b[r + 4 >> 2] = f;\n\n        if ((g | 0) <= 1) {\n          d = 14;\n          break;\n        }\n      }\n\n      a: do { if ((d | 0) != 13) { if ((d | 0) == 14) { if (((b[k >> 2] | 0) <= 1 ? (b[k + 4 >> 2] | 0) <= 1 : 0) ? (b[k + 8 >> 2] | 0) <= 1 : 0) {\n        d = Ia(k) | 0;\n        f = ta(n, d) | 0;\n        if ((f | 0) == 127) { j = 0; }else { j = ma(f) | 0; }\n\n        b: do { if (!d) {\n          if ((l | 0) != 0 & (j | 0) != 0) {\n            d = Fb(a, c) | 0;\n            g = e;\n            g = Fb(b[g >> 2] | 0, b[g + 4 >> 2] | 0) | 0;\n\n            if ((d | 0) == 7 | (g | 0) == 7) {\n              f = 5;\n              break a;\n            }\n\n            g = b[21248 + (d * 28 | 0) + (g << 2) >> 2] | 0;\n\n            if ((g | 0) < 0) {\n              f = 5;\n              break a;\n            }\n\n            if (!g) { d = 59; }else {\n              i = e;\n              d = 0;\n              h = b[i >> 2] | 0;\n              i = b[i + 4 >> 2] | 0;\n\n              do {\n                h = Hb(h, i) | 0;\n                i = H() | 0;\n                u = e;\n                b[u >> 2] = h;\n                b[u + 4 >> 2] = i;\n                d = d + 1 | 0;\n              } while ((d | 0) < (g | 0));\n\n              d = 58;\n            }\n          } else { d = 58; }\n        } else {\n          if (l) {\n            f = Fb(a, c) | 0;\n\n            if ((f | 0) == 7) {\n              f = 5;\n              break a;\n            }\n\n            g = b[21248 + (f * 28 | 0) + (d << 2) >> 2] | 0;\n\n            if ((g | 0) > 0) {\n              f = d;\n              d = 0;\n\n              do {\n                f = Sa(f) | 0;\n                d = d + 1 | 0;\n              } while ((d | 0) != (g | 0));\n            } else { f = d; }\n\n            if ((f | 0) == 1) {\n              f = 9;\n              break a;\n            }\n\n            d = ta(n, f) | 0;\n            if ((d | 0) == 127) { I(23200, 23090, 411, 23230); }\n\n            if (!(ma(d) | 0)) {\n              p = d;\n              o = g;\n              m = f;\n            } else { I(23245, 23090, 412, 23230); }\n          } else {\n            p = f;\n            o = 0;\n            m = d;\n          }\n\n          i = b[4272 + (n * 28 | 0) + (m << 2) >> 2] | 0;\n          if ((i | 0) <= -1) { I(23276, 23090, 419, 23230); }\n\n          if (!j) {\n            if ((o | 0) < 0) {\n              f = 5;\n              break a;\n            }\n\n            if (o | 0) {\n              g = e;\n              f = 0;\n              d = b[g >> 2] | 0;\n              g = b[g + 4 >> 2] | 0;\n\n              do {\n                d = Hb(d, g) | 0;\n                g = H() | 0;\n                u = e;\n                b[u >> 2] = d;\n                b[u + 4 >> 2] = g;\n                f = f + 1 | 0;\n              } while ((f | 0) < (o | 0));\n            }\n\n            if ((i | 0) <= 0) {\n              f = p;\n              d = 58;\n              break;\n            }\n\n            g = e;\n            f = 0;\n            d = b[g >> 2] | 0;\n            g = b[g + 4 >> 2] | 0;\n\n            while (1) {\n              d = Hb(d, g) | 0;\n              g = H() | 0;\n              u = e;\n              b[u >> 2] = d;\n              b[u + 4 >> 2] = g;\n              f = f + 1 | 0;\n\n              if ((f | 0) == (i | 0)) {\n                f = p;\n                d = 58;\n                break b;\n              }\n            }\n          }\n\n          h = ua(p, n) | 0;\n          if ((h | 0) == 7) { I(23066, 23090, 428, 23230); }\n          f = e;\n          d = b[f >> 2] | 0;\n          f = b[f + 4 >> 2] | 0;\n\n          if ((i | 0) > 0) {\n            g = 0;\n\n            do {\n              d = Hb(d, f) | 0;\n              f = H() | 0;\n              u = e;\n              b[u >> 2] = d;\n              b[u + 4 >> 2] = f;\n              g = g + 1 | 0;\n            } while ((g | 0) != (i | 0));\n          }\n\n          f = Fb(d, f) | 0;\n          if ((f | 0) == 7) { I(23313, 23090, 440, 23230); }\n          d = na(p) | 0;\n          d = b[(d ? 21664 : 21456) + (h * 28 | 0) + (f << 2) >> 2] | 0;\n          if ((d | 0) < 0) { I(23313, 23090, 454, 23230); }\n\n          if (!d) {\n            f = p;\n            d = 58;\n          } else {\n            h = e;\n            f = 0;\n            g = b[h >> 2] | 0;\n            h = b[h + 4 >> 2] | 0;\n\n            do {\n              g = Gb(g, h) | 0;\n              h = H() | 0;\n              u = e;\n              b[u >> 2] = g;\n              b[u + 4 >> 2] = h;\n              f = f + 1 | 0;\n            } while ((f | 0) < (d | 0));\n\n            f = p;\n            d = 58;\n          }\n        } } while (0);\n\n        if ((d | 0) == 58) { if (j) { d = 59; } }\n\n        if ((d | 0) == 59) {\n          u = e;\n\n          if ((Fb(b[u >> 2] | 0, b[u + 4 >> 2] | 0) | 0) == 1) {\n            f = 9;\n            break;\n          }\n        }\n\n        u = e;\n        s = b[u >> 2] | 0;\n        u = b[u + 4 >> 2] & -1040385;\n        t = wd(f | 0, 0, 45) | 0;\n        u = u | (H() | 0);\n        f = e;\n        b[f >> 2] = s | t;\n        b[f + 4 >> 2] = u;\n        f = 0;\n      } else { f = 1; } } } } while (0);\n\n      u = f;\n      T = q;\n      return u | 0;\n    }\n\n    function xc(a, b, c, d, e, f) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0;\n      h = T;\n      T = T + 16 | 0;\n      g = h;\n\n      if (!e) {\n        a = vc(a, b, c, d, g) | 0;\n\n        if (!a) {\n          Xa(g, f);\n          a = 0;\n        }\n      } else { a = 15; }\n\n      T = h;\n      return a | 0;\n    }\n\n    function yc(a, b, c, d, e) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0;\n      g = T;\n      T = T + 16 | 0;\n      f = g;\n\n      if (!d) {\n        c = Ya(c, f) | 0;\n        if (!c) { c = wc(a, b, f, e) | 0; }\n      } else { c = 15; }\n\n      T = g;\n      return c | 0;\n    }\n\n    function zc(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      j = T;\n      T = T + 32 | 0;\n      h = j + 12 | 0;\n      i = j;\n      g = vc(a, c, a, c, h) | 0;\n\n      if (g | 0) {\n        i = g;\n        T = j;\n        return i | 0;\n      }\n\n      a = vc(a, c, d, e, i) | 0;\n\n      if (a | 0) {\n        i = a;\n        T = j;\n        return i | 0;\n      }\n\n      h = Wa(h, i) | 0;\n      i = f;\n      b[i >> 2] = h;\n      b[i + 4 >> 2] = ((h | 0) < 0) << 31 >> 31;\n      i = 0;\n      T = j;\n      return i | 0;\n    }\n\n    function Ac(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      j = T;\n      T = T + 32 | 0;\n      h = j + 12 | 0;\n      i = j;\n      g = vc(a, c, a, c, h) | 0;\n\n      if (!g) {\n        g = vc(a, c, d, e, i) | 0;\n\n        if (!g) {\n          e = Wa(h, i) | 0;\n          e = ld(e | 0, ((e | 0) < 0) << 31 >> 31 | 0, 1, 0) | 0;\n          h = H() | 0;\n          i = f;\n          b[i >> 2] = e;\n          b[i + 4 >> 2] = h;\n          i = 0;\n          T = j;\n          return i | 0;\n        }\n      }\n\n      i = g;\n      T = j;\n      return i | 0;\n    }\n\n    function Bc(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0.0,\n          k = 0.0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0.0,\n          r = 0.0,\n          s = 0.0,\n          t = 0,\n          u = 0,\n          v = 0,\n          w = 0,\n          x = 0,\n          y = 0,\n          z = 0,\n          A = 0.0;\n      z = T;\n      T = T + 48 | 0;\n      h = z + 24 | 0;\n      i = z + 12 | 0;\n      y = z;\n      g = vc(a, c, a, c, h) | 0;\n\n      if (!g) {\n        g = vc(a, c, d, e, i) | 0;\n\n        if (!g) {\n          w = Wa(h, i) | 0;\n          x = ((w | 0) < 0) << 31 >> 31;\n          b[h >> 2] = 0;\n          b[h + 4 >> 2] = 0;\n          b[h + 8 >> 2] = 0;\n          b[i >> 2] = 0;\n          b[i + 4 >> 2] = 0;\n          b[i + 8 >> 2] = 0;\n          if (vc(a, c, a, c, h) | 0) { I(23313, 23090, 691, 23299); }\n          if (vc(a, c, d, e, i) | 0) { I(23313, 23090, 696, 23299); }\n          Za(h);\n          Za(i);\n\n          if (!w) {\n            g = h + 4 | 0;\n            d = h + 8 | 0;\n            t = g;\n            u = d;\n            v = h;\n            e = b[h >> 2] | 0;\n            g = b[g >> 2] | 0;\n            d = b[d >> 2] | 0;\n            r = 0.0;\n            s = 0.0;\n            p = 0.0;\n          } else {\n            m = b[h >> 2] | 0;\n            p = +(w | 0);\n            t = h + 4 | 0;\n            n = b[t >> 2] | 0;\n            u = h + 8 | 0;\n            o = b[u >> 2] | 0;\n            v = h;\n            e = m;\n            g = n;\n            d = o;\n            r = +((b[i >> 2] | 0) - m | 0) / p;\n            s = +((b[i + 4 >> 2] | 0) - n | 0) / p;\n            p = +((b[i + 8 >> 2] | 0) - o | 0) / p;\n          }\n\n          b[y >> 2] = e;\n          o = y + 4 | 0;\n          b[o >> 2] = g;\n          n = y + 8 | 0;\n          b[n >> 2] = d;\n\n          a: do { if ((w | 0) < 0) { g = 0; }else {\n            l = 0;\n            m = 0;\n            g = e;\n\n            while (1) {\n              k = +(m >>> 0) + 4294967296.0 * +(l | 0);\n              A = r * k + +(g | 0);\n              j = s * k + +(b[t >> 2] | 0);\n              k = p * k + +(b[u >> 2] | 0);\n              d = ~~+zd(+A);\n              h = ~~+zd(+j);\n              g = ~~+zd(+k);\n              A = +q(+(+(d | 0) - A));\n              j = +q(+(+(h | 0) - j));\n              k = +q(+(+(g | 0) - k));\n\n              do { if (!(A > j & A > k)) {\n                i = 0 - d | 0;\n\n                if (j > k) {\n                  e = i - g | 0;\n                  break;\n                } else {\n                  e = h;\n                  g = i - h | 0;\n                  break;\n                }\n              } else {\n                d = 0 - (h + g) | 0;\n                e = h;\n              } } while (0);\n\n              b[y >> 2] = d;\n              b[o >> 2] = e;\n              b[n >> 2] = g;\n\n              _a(y);\n\n              g = wc(a, c, y, f + (m << 3) | 0) | 0;\n              if (g | 0) { break a; }\n\n              if (!((l | 0) < (x | 0) | (l | 0) == (x | 0) & m >>> 0 < w >>> 0)) {\n                g = 0;\n                break a;\n              }\n\n              g = ld(m | 0, l | 0, 1, 0) | 0;\n              i = H() | 0;\n              l = i;\n              m = g;\n              g = b[v >> 2] | 0;\n            }\n          } } while (0);\n\n          y = g;\n          T = z;\n          return y | 0;\n        }\n      }\n\n      y = g;\n      T = z;\n      return y | 0;\n    }\n\n    function Cc(a, b, c, d) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0;\n\n      if ((c | 0) == 0 & (d | 0) == 0) {\n        e = 0;\n        f = 1;\n        G(e | 0);\n        return f | 0;\n      }\n\n      f = a;\n      e = b;\n      a = 1;\n      b = 0;\n\n      do {\n        g = (c & 1 | 0) == 0 & 0 == 0;\n        a = rd((g ? 1 : f) | 0, (g ? 0 : e) | 0, a | 0, b | 0) | 0;\n        b = H() | 0;\n        c = ud(c | 0, d | 0, 1) | 0;\n        d = H() | 0;\n        f = rd(f | 0, e | 0, f | 0, e | 0) | 0;\n        e = H() | 0;\n      } while (!((c | 0) == 0 & (d | 0) == 0));\n\n      G(b | 0);\n      return a | 0;\n    }\n\n    function Dc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0.0,\n          g = 0.0,\n          h = 0.0,\n          i = 0.0,\n          j = 0.0,\n          k = 0.0,\n          l = 0,\n          m = 0.0,\n          n = 0,\n          o = 0;\n\n      if (!(ya(c, d) | 0)) {\n        o = 0;\n        return o | 0;\n      }\n\n      c = xa(c) | 0;\n      f = +e[d >> 3];\n      g = +e[d + 8 >> 3];\n      g = c & g < 0.0 ? g + 6.283185307179586 : g;\n      o = b[a >> 2] | 0;\n\n      if ((o | 0) <= 0) {\n        o = 0;\n        return o | 0;\n      }\n\n      n = b[a + 4 >> 2] | 0;\n\n      if (c) {\n        c = 0;\n        m = g;\n        d = -1;\n        a = 0;\n\n        a: while (1) {\n          l = a;\n\n          while (1) {\n            i = +e[n + (l << 4) >> 3];\n            g = +e[n + (l << 4) + 8 >> 3];\n            a = (d + 2 | 0) % (o | 0) | 0;\n            h = +e[n + (a << 4) >> 3];\n            j = +e[n + (a << 4) + 8 >> 3];\n\n            if (i > h) {\n              k = i;\n              i = j;\n            } else {\n              k = h;\n              h = i;\n              i = g;\n              g = j;\n            }\n\n            f = f == h | f == k ? f + 2.220446049250313e-16 : f;\n            if (!(f < h | f > k)) { break; }\n            d = l + 1 | 0;\n\n            if ((d | 0) >= (o | 0)) {\n              d = 22;\n              break a;\n            } else {\n              a = l;\n              l = d;\n              d = a;\n            }\n          }\n\n          j = i < 0.0 ? i + 6.283185307179586 : i;\n          i = g < 0.0 ? g + 6.283185307179586 : g;\n          m = j == m | i == m ? m + -2.220446049250313e-16 : m;\n          k = j + (i - j) * ((f - h) / (k - h));\n          if ((k < 0.0 ? k + 6.283185307179586 : k) > m) { c = c ^ 1; }\n          a = l + 1 | 0;\n\n          if ((a | 0) >= (o | 0)) {\n            d = 22;\n            break;\n          } else { d = l; }\n        }\n\n        if ((d | 0) == 22) { return c | 0; }\n      } else {\n        c = 0;\n        m = g;\n        d = -1;\n        a = 0;\n\n        b: while (1) {\n          l = a;\n\n          while (1) {\n            i = +e[n + (l << 4) >> 3];\n            g = +e[n + (l << 4) + 8 >> 3];\n            a = (d + 2 | 0) % (o | 0) | 0;\n            h = +e[n + (a << 4) >> 3];\n            j = +e[n + (a << 4) + 8 >> 3];\n\n            if (i > h) {\n              k = i;\n              i = j;\n            } else {\n              k = h;\n              h = i;\n              i = g;\n              g = j;\n            }\n\n            f = f == h | f == k ? f + 2.220446049250313e-16 : f;\n            if (!(f < h | f > k)) { break; }\n            d = l + 1 | 0;\n\n            if ((d | 0) >= (o | 0)) {\n              d = 22;\n              break b;\n            } else {\n              a = l;\n              l = d;\n              d = a;\n            }\n          }\n\n          m = i == m | g == m ? m + -2.220446049250313e-16 : m;\n          if (i + (g - i) * ((f - h) / (k - h)) > m) { c = c ^ 1; }\n          a = l + 1 | 0;\n\n          if ((a | 0) >= (o | 0)) {\n            d = 22;\n            break;\n          } else { d = l; }\n        }\n\n        if ((d | 0) == 22) { return c | 0; }\n      }\n\n      return 0;\n    }\n\n    function Ec(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0.0,\n          f = 0.0,\n          g = 0.0,\n          h = 0.0,\n          i = 0.0,\n          j = 0.0,\n          k = 0.0,\n          l = 0.0,\n          m = 0.0,\n          n = 0,\n          o = 0,\n          p = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0,\n          v = 0;\n      r = b[a >> 2] | 0;\n\n      if (!r) {\n        b[c >> 2] = 0;\n        b[c + 4 >> 2] = 0;\n        b[c + 8 >> 2] = 0;\n        b[c + 12 >> 2] = 0;\n        b[c + 16 >> 2] = 0;\n        b[c + 20 >> 2] = 0;\n        b[c + 24 >> 2] = 0;\n        b[c + 28 >> 2] = 0;\n        return;\n      }\n\n      s = c + 8 | 0;\n      e[s >> 3] = 1797693134862315708145274.0e284;\n      t = c + 24 | 0;\n      e[t >> 3] = 1797693134862315708145274.0e284;\n      e[c >> 3] = -1797693134862315708145274.0e284;\n      u = c + 16 | 0;\n      e[u >> 3] = -1797693134862315708145274.0e284;\n      if ((r | 0) <= 0) { return; }\n      o = b[a + 4 >> 2] | 0;\n      l = 1797693134862315708145274.0e284;\n      m = -1797693134862315708145274.0e284;\n      n = 0;\n      a = -1;\n      h = 1797693134862315708145274.0e284;\n      i = 1797693134862315708145274.0e284;\n      k = -1797693134862315708145274.0e284;\n      f = -1797693134862315708145274.0e284;\n      p = 0;\n\n      while (1) {\n        d = +e[o + (p << 4) >> 3];\n        j = +e[o + (p << 4) + 8 >> 3];\n        a = a + 2 | 0;\n        g = +e[o + (((a | 0) == (r | 0) ? 0 : a) << 4) + 8 >> 3];\n\n        if (d < h) {\n          e[s >> 3] = d;\n          h = d;\n        }\n\n        if (j < i) {\n          e[t >> 3] = j;\n          i = j;\n        }\n\n        if (d > k) { e[c >> 3] = d; }else { d = k; }\n\n        if (j > f) {\n          e[u >> 3] = j;\n          f = j;\n        }\n\n        l = j > 0.0 & j < l ? j : l;\n        m = j < 0.0 & j > m ? j : m;\n        n = n | +q(+(j - g)) > 3.141592653589793;\n        a = p + 1 | 0;\n        if ((a | 0) == (r | 0)) { break; }else {\n          v = p;\n          k = d;\n          p = a;\n          a = v;\n        }\n      }\n\n      if (!n) { return; }\n      e[u >> 3] = m;\n      e[t >> 3] = l;\n      return;\n    }\n\n    function Fc(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          f = 0,\n          g = 0,\n          h = 0.0,\n          i = 0.0,\n          j = 0.0,\n          k = 0.0,\n          l = 0.0,\n          m = 0.0,\n          n = 0.0,\n          o = 0.0,\n          p = 0.0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0,\n          v = 0,\n          w = 0,\n          x = 0,\n          y = 0,\n          z = 0,\n          A = 0;\n      r = b[a >> 2] | 0;\n\n      if (r) {\n        s = c + 8 | 0;\n        e[s >> 3] = 1797693134862315708145274.0e284;\n        t = c + 24 | 0;\n        e[t >> 3] = 1797693134862315708145274.0e284;\n        e[c >> 3] = -1797693134862315708145274.0e284;\n        u = c + 16 | 0;\n        e[u >> 3] = -1797693134862315708145274.0e284;\n\n        if ((r | 0) > 0) {\n          g = b[a + 4 >> 2] | 0;\n          o = 1797693134862315708145274.0e284;\n          p = -1797693134862315708145274.0e284;\n          f = 0;\n          d = -1;\n          k = 1797693134862315708145274.0e284;\n          l = 1797693134862315708145274.0e284;\n          n = -1797693134862315708145274.0e284;\n          i = -1797693134862315708145274.0e284;\n          v = 0;\n\n          while (1) {\n            h = +e[g + (v << 4) >> 3];\n            m = +e[g + (v << 4) + 8 >> 3];\n            z = d + 2 | 0;\n            j = +e[g + (((z | 0) == (r | 0) ? 0 : z) << 4) + 8 >> 3];\n\n            if (h < k) {\n              e[s >> 3] = h;\n              k = h;\n            }\n\n            if (m < l) {\n              e[t >> 3] = m;\n              l = m;\n            }\n\n            if (h > n) { e[c >> 3] = h; }else { h = n; }\n\n            if (m > i) {\n              e[u >> 3] = m;\n              i = m;\n            }\n\n            o = m > 0.0 & m < o ? m : o;\n            p = m < 0.0 & m > p ? m : p;\n            f = f | +q(+(m - j)) > 3.141592653589793;\n            d = v + 1 | 0;\n            if ((d | 0) == (r | 0)) { break; }else {\n              z = v;\n              n = h;\n              v = d;\n              d = z;\n            }\n          }\n\n          if (f) {\n            e[u >> 3] = p;\n            e[t >> 3] = o;\n          }\n        }\n      } else {\n        b[c >> 2] = 0;\n        b[c + 4 >> 2] = 0;\n        b[c + 8 >> 2] = 0;\n        b[c + 12 >> 2] = 0;\n        b[c + 16 >> 2] = 0;\n        b[c + 20 >> 2] = 0;\n        b[c + 24 >> 2] = 0;\n        b[c + 28 >> 2] = 0;\n      }\n\n      z = a + 8 | 0;\n      d = b[z >> 2] | 0;\n      if ((d | 0) <= 0) { return; }\n      y = a + 12 | 0;\n      x = 0;\n\n      do {\n        g = b[y >> 2] | 0;\n        f = x;\n        x = x + 1 | 0;\n        t = c + (x << 5) | 0;\n        u = b[g + (f << 3) >> 2] | 0;\n\n        if (u) {\n          v = c + (x << 5) + 8 | 0;\n          e[v >> 3] = 1797693134862315708145274.0e284;\n          a = c + (x << 5) + 24 | 0;\n          e[a >> 3] = 1797693134862315708145274.0e284;\n          e[t >> 3] = -1797693134862315708145274.0e284;\n          w = c + (x << 5) + 16 | 0;\n          e[w >> 3] = -1797693134862315708145274.0e284;\n\n          if ((u | 0) > 0) {\n            r = b[g + (f << 3) + 4 >> 2] | 0;\n            o = 1797693134862315708145274.0e284;\n            p = -1797693134862315708145274.0e284;\n            g = 0;\n            f = -1;\n            s = 0;\n            k = 1797693134862315708145274.0e284;\n            l = 1797693134862315708145274.0e284;\n            m = -1797693134862315708145274.0e284;\n            i = -1797693134862315708145274.0e284;\n\n            while (1) {\n              h = +e[r + (s << 4) >> 3];\n              n = +e[r + (s << 4) + 8 >> 3];\n              f = f + 2 | 0;\n              j = +e[r + (((f | 0) == (u | 0) ? 0 : f) << 4) + 8 >> 3];\n\n              if (h < k) {\n                e[v >> 3] = h;\n                k = h;\n              }\n\n              if (n < l) {\n                e[a >> 3] = n;\n                l = n;\n              }\n\n              if (h > m) { e[t >> 3] = h; }else { h = m; }\n\n              if (n > i) {\n                e[w >> 3] = n;\n                i = n;\n              }\n\n              o = n > 0.0 & n < o ? n : o;\n              p = n < 0.0 & n > p ? n : p;\n              g = g | +q(+(n - j)) > 3.141592653589793;\n              f = s + 1 | 0;\n              if ((f | 0) == (u | 0)) { break; }else {\n                A = s;\n                s = f;\n                m = h;\n                f = A;\n              }\n            }\n\n            if (g) {\n              e[w >> 3] = p;\n              e[a >> 3] = o;\n            }\n          }\n        } else {\n          b[t >> 2] = 0;\n          b[t + 4 >> 2] = 0;\n          b[t + 8 >> 2] = 0;\n          b[t + 12 >> 2] = 0;\n          b[t + 16 >> 2] = 0;\n          b[t + 20 >> 2] = 0;\n          b[t + 24 >> 2] = 0;\n          b[t + 28 >> 2] = 0;\n          d = b[z >> 2] | 0;\n        }\n      } while ((x | 0) < (d | 0));\n\n      return;\n    }\n\n    function Gc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0;\n\n      if (!(Dc(a, c, d) | 0)) {\n        f = 0;\n        return f | 0;\n      }\n\n      f = a + 8 | 0;\n\n      if ((b[f >> 2] | 0) <= 0) {\n        f = 1;\n        return f | 0;\n      }\n\n      e = a + 12 | 0;\n      a = 0;\n\n      while (1) {\n        g = a;\n        a = a + 1 | 0;\n\n        if (Dc((b[e >> 2] | 0) + (g << 3) | 0, c + (a << 5) | 0, d) | 0) {\n          a = 0;\n          e = 6;\n          break;\n        }\n\n        if ((a | 0) >= (b[f >> 2] | 0)) {\n          a = 1;\n          e = 6;\n          break;\n        }\n      }\n\n      if ((e | 0) == 6) { return a | 0; }\n      return 0;\n    }\n\n    function Hc() {\n      return 8;\n    }\n\n    function Ic() {\n      return 16;\n    }\n\n    function Jc() {\n      return 168;\n    }\n\n    function Kc() {\n      return 8;\n    }\n\n    function Lc() {\n      return 16;\n    }\n\n    function Mc() {\n      return 12;\n    }\n\n    function Nc() {\n      return 8;\n    }\n\n    function Oc(a) {\n      a = a | 0;\n      return +(+((b[a >> 2] | 0) >>> 0) + 4294967296.0 * +(b[a + 4 >> 2] | 0));\n    }\n\n    function Pc(a) {\n      a = a | 0;\n      var b = 0.0,\n          c = 0.0;\n      c = +e[a >> 3];\n      b = +e[a + 8 >> 3];\n      return + +r(+(c * c + b * b));\n    }\n\n    function Qc(a, b, c, d, f) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      f = f | 0;\n      var g = 0.0,\n          h = 0.0,\n          i = 0.0,\n          j = 0.0,\n          k = 0.0,\n          l = 0.0,\n          m = 0.0,\n          n = 0.0;\n      k = +e[a >> 3];\n      j = +e[b >> 3] - k;\n      i = +e[a + 8 >> 3];\n      h = +e[b + 8 >> 3] - i;\n      m = +e[c >> 3];\n      g = +e[d >> 3] - m;\n      n = +e[c + 8 >> 3];\n      l = +e[d + 8 >> 3] - n;\n      g = (g * (i - n) - (k - m) * l) / (j * l - h * g);\n      e[f >> 3] = k + j * g;\n      e[f + 8 >> 3] = i + h * g;\n      return;\n    }\n\n    function Rc(a, b) {\n      a = a | 0;\n      b = b | 0;\n\n      if (!(+q(+(+e[a >> 3] - +e[b >> 3])) < 1.1920928955078125e-07)) {\n        b = 0;\n        return b | 0;\n      }\n\n      b = +q(+(+e[a + 8 >> 3] - +e[b + 8 >> 3])) < 1.1920928955078125e-07;\n      return b | 0;\n    }\n\n    function Sc(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0.0,\n          d = 0.0,\n          f = 0.0;\n      f = +e[a >> 3] - +e[b >> 3];\n      d = +e[a + 8 >> 3] - +e[b + 8 >> 3];\n      c = +e[a + 16 >> 3] - +e[b + 16 >> 3];\n      return +(f * f + d * d + c * c);\n    }\n\n    function Tc(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0.0,\n          d = 0.0,\n          f = 0.0;\n      c = +e[a >> 3];\n      d = +t(+c);\n      c = +u(+c);\n      e[b + 16 >> 3] = c;\n      c = +e[a + 8 >> 3];\n      f = d * +t(+c);\n      e[b >> 3] = f;\n      c = d * +u(+c);\n      e[b + 8 >> 3] = c;\n      return;\n    }\n\n    function Uc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0;\n      g = T;\n      T = T + 16 | 0;\n      f = g;\n      e = xb(a, c) | 0;\n\n      if ((d + -1 | 0) >>> 0 > 5) {\n        f = -1;\n        T = g;\n        return f | 0;\n      }\n\n      e = (e | 0) != 0;\n\n      if ((d | 0) == 1 & e) {\n        f = -1;\n        T = g;\n        return f | 0;\n      }\n\n      do { if (!(Vc(a, c, f) | 0)) {\n        if (e) {\n          e = ((b[21936 + (d << 2) >> 2] | 0) + 5 - (b[f >> 2] | 0) | 0) % 5 | 0;\n          break;\n        } else {\n          e = ((b[21968 + (d << 2) >> 2] | 0) + 6 - (b[f >> 2] | 0) | 0) % 6 | 0;\n          break;\n        }\n      } else { e = -1; } } while (0);\n\n      f = e;\n      T = g;\n      return f | 0;\n    }\n\n    function Vc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0;\n      k = T;\n      T = T + 32 | 0;\n      h = k + 16 | 0;\n      i = k;\n      e = Ob(a, c, h) | 0;\n\n      if (e | 0) {\n        d = e;\n        T = k;\n        return d | 0;\n      }\n\n      g = tb(a, c) | 0;\n      j = Fb(a, c) | 0;\n      qa(g, i);\n      e = ra(g, b[h >> 2] | 0) | 0;\n\n      a: do { if (ma(g) | 0) {\n        do { switch (g | 0) {\n          case 4:\n            {\n              a = 0;\n              break;\n            }\n\n          case 14:\n            {\n              a = 1;\n              break;\n            }\n\n          case 24:\n            {\n              a = 2;\n              break;\n            }\n\n          case 38:\n            {\n              a = 3;\n              break;\n            }\n\n          case 49:\n            {\n              a = 4;\n              break;\n            }\n\n          case 58:\n            {\n              a = 5;\n              break;\n            }\n\n          case 63:\n            {\n              a = 6;\n              break;\n            }\n\n          case 72:\n            {\n              a = 7;\n              break;\n            }\n\n          case 83:\n            {\n              a = 8;\n              break;\n            }\n\n          case 97:\n            {\n              a = 9;\n              break;\n            }\n\n          case 107:\n            {\n              a = 10;\n              break;\n            }\n\n          case 117:\n            {\n              a = 11;\n              break;\n            }\n\n          default:\n            {\n              e = 1;\n              break a;\n            }\n        } } while (0);\n\n        f = b[22e3 + (a * 24 | 0) + 8 >> 2] | 0;\n        c = b[22e3 + (a * 24 | 0) + 16 >> 2] | 0;\n        a = b[h >> 2] | 0;\n\n        if ((a | 0) != (b[i >> 2] | 0)) {\n          i = na(g) | 0;\n          a = b[h >> 2] | 0;\n          if (i | (a | 0) == (c | 0)) { e = (e + 1 | 0) % 6 | 0; }\n        }\n\n        if ((j | 0) == 3 & (a | 0) == (c | 0)) {\n          e = (e + 5 | 0) % 6 | 0;\n          f = 22;\n          break;\n        }\n\n        if ((j | 0) == 5 & (a | 0) == (f | 0)) {\n          e = (e + 1 | 0) % 6 | 0;\n          f = 22;\n        } else { f = 22; }\n      } else { f = 22; } } while (0);\n\n      if ((f | 0) == 22) {\n        b[d >> 2] = e;\n        e = 0;\n      }\n\n      d = e;\n      T = k;\n      return d | 0;\n    }\n\n    function Wc(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0;\n      u = T;\n      T = T + 32 | 0;\n      t = u + 24 | 0;\n      r = u + 20 | 0;\n      p = u + 8 | 0;\n      o = u + 16 | 0;\n      n = u;\n      j = (xb(a, c) | 0) == 0;\n      j = j ? 6 : 5;\n      l = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      l = l & 15;\n\n      if (j >>> 0 <= d >>> 0) {\n        e = 2;\n        T = u;\n        return e | 0;\n      }\n\n      m = (l | 0) == 0;\n      if (!m ? (q = wd(7, 0, (l ^ 15) * 3 | 0) | 0, (q & a | 0) == 0 & ((H() | 0) & c | 0) == 0) : 0) { f = d; }else { g = 4; }\n\n      a: do { if ((g | 0) == 4) {\n        f = (xb(a, c) | 0) != 0;\n\n        if (((f ? 4 : 5) | 0) < (d | 0)) {\n          e = 1;\n          T = u;\n          return e | 0;\n        }\n\n        if (Vc(a, c, t) | 0) {\n          e = 1;\n          T = u;\n          return e | 0;\n        }\n\n        g = (b[t >> 2] | 0) + d | 0;\n        if (f) { f = 22288 + (((g | 0) % 5 | 0) << 2) | 0; }else { f = 22320 + (((g | 0) % 6 | 0) << 2) | 0; }\n        q = b[f >> 2] | 0;\n\n        if ((q | 0) == 7) {\n          e = 1;\n          T = u;\n          return e | 0;\n        }\n\n        b[r >> 2] = 0;\n        f = ea(a, c, q, r, p) | 0;\n\n        do { if (!f) {\n          i = p;\n          k = b[i >> 2] | 0;\n          i = b[i + 4 >> 2] | 0;\n          h = i >>> 0 < c >>> 0 | (i | 0) == (c | 0) & k >>> 0 < a >>> 0;\n          g = h ? k : a;\n          h = h ? i : c;\n          if (!m ? (m = wd(7, 0, (l ^ 15) * 3 | 0) | 0, (k & m | 0) == 0 & (i & (H() | 0) | 0) == 0) : 0) { f = d; }else {\n            i = (d + -1 + j | 0) % (j | 0) | 0;\n            f = xb(a, c) | 0;\n            if ((i | 0) < 0) { I(23313, 23315, 245, 23324); }\n            j = (f | 0) != 0;\n            if (((j ? 4 : 5) | 0) < (i | 0)) { I(23313, 23315, 245, 23324); }\n            if (Vc(a, c, t) | 0) { I(23313, 23315, 245, 23324); }\n            f = (b[t >> 2] | 0) + i | 0;\n            if (j) { f = 22288 + (((f | 0) % 5 | 0) << 2) | 0; }else { f = 22320 + (((f | 0) % 6 | 0) << 2) | 0; }\n            i = b[f >> 2] | 0;\n            if ((i | 0) == 7) { I(23313, 23315, 245, 23324); }\n            b[o >> 2] = 0;\n            f = ea(a, c, i, o, n) | 0;\n            if (f | 0) { break; }\n            k = n;\n            j = b[k >> 2] | 0;\n            k = b[k + 4 >> 2] | 0;\n\n            do { if (k >>> 0 < h >>> 0 | (k | 0) == (h | 0) & j >>> 0 < g >>> 0) {\n              if (!(xb(j, k) | 0)) { g = b[22384 + ((((b[o >> 2] | 0) + (b[22352 + (i << 2) >> 2] | 0) | 0) % 6 | 0) << 2) >> 2] | 0; }else { g = fa(j, k, a, c) | 0; }\n              f = xb(j, k) | 0;\n\n              if ((g + -1 | 0) >>> 0 > 5) {\n                f = -1;\n                g = j;\n                h = k;\n                break;\n              }\n\n              f = (f | 0) != 0;\n\n              if ((g | 0) == 1 & f) {\n                f = -1;\n                g = j;\n                h = k;\n                break;\n              }\n\n              do { if (!(Vc(j, k, t) | 0)) {\n                if (f) {\n                  f = ((b[21936 + (g << 2) >> 2] | 0) + 5 - (b[t >> 2] | 0) | 0) % 5 | 0;\n                  break;\n                } else {\n                  f = ((b[21968 + (g << 2) >> 2] | 0) + 6 - (b[t >> 2] | 0) | 0) % 6 | 0;\n                  break;\n                }\n              } else { f = -1; } } while (0);\n\n              g = j;\n              h = k;\n            } else { f = d; } } while (0);\n\n            i = p;\n            k = b[i >> 2] | 0;\n            i = b[i + 4 >> 2] | 0;\n          }\n\n          if ((g | 0) == (k | 0) & (h | 0) == (i | 0)) {\n            j = (xb(k, i) | 0) != 0;\n            if (j) { a = fa(k, i, a, c) | 0; }else { a = b[22384 + ((((b[r >> 2] | 0) + (b[22352 + (q << 2) >> 2] | 0) | 0) % 6 | 0) << 2) >> 2] | 0; }\n            f = xb(k, i) | 0;\n            if ((a + -1 | 0) >>> 0 <= 5 ? (s = (f | 0) != 0, !((a | 0) == 1 & s)) : 0) {\n              do { if (!(Vc(k, i, t) | 0)) {\n                if (s) {\n                  f = ((b[21936 + (a << 2) >> 2] | 0) + 5 - (b[t >> 2] | 0) | 0) % 5 | 0;\n                  break;\n                } else {\n                  f = ((b[21968 + (a << 2) >> 2] | 0) + 6 - (b[t >> 2] | 0) | 0) % 6 | 0;\n                  break;\n                }\n              } else { f = -1; } } while (0);\n            } else { f = -1; }\n            f = f + 1 | 0;\n            f = (f | 0) == 6 | j & (f | 0) == 5 ? 0 : f;\n          }\n\n          c = h;\n          a = g;\n          break a;\n        } } while (0);\n\n        e = f;\n        T = u;\n        return e | 0;\n      } } while (0);\n\n      s = wd(f | 0, 0, 56) | 0;\n      t = H() | 0 | c & -2130706433 | 536870912;\n      b[e >> 2] = s | a;\n      b[e + 4 >> 2] = t;\n      e = 0;\n      T = u;\n      return e | 0;\n    }\n\n    function Xc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0;\n      g = (xb(a, c) | 0) == 0;\n      e = Wc(a, c, 0, d) | 0;\n      f = (e | 0) == 0;\n\n      if (g) {\n        if (!f) {\n          g = e;\n          return g | 0;\n        }\n\n        e = Wc(a, c, 1, d + 8 | 0) | 0;\n\n        if (e | 0) {\n          g = e;\n          return g | 0;\n        }\n\n        e = Wc(a, c, 2, d + 16 | 0) | 0;\n\n        if (e | 0) {\n          g = e;\n          return g | 0;\n        }\n\n        e = Wc(a, c, 3, d + 24 | 0) | 0;\n\n        if (e | 0) {\n          g = e;\n          return g | 0;\n        }\n\n        e = Wc(a, c, 4, d + 32 | 0) | 0;\n        if (!e) { return Wc(a, c, 5, d + 40 | 0) | 0; }else {\n          g = e;\n          return g | 0;\n        }\n      }\n\n      if (!f) {\n        g = e;\n        return g | 0;\n      }\n\n      e = Wc(a, c, 1, d + 8 | 0) | 0;\n\n      if (e | 0) {\n        g = e;\n        return g | 0;\n      }\n\n      e = Wc(a, c, 2, d + 16 | 0) | 0;\n\n      if (e | 0) {\n        g = e;\n        return g | 0;\n      }\n\n      e = Wc(a, c, 3, d + 24 | 0) | 0;\n\n      if (e | 0) {\n        g = e;\n        return g | 0;\n      }\n\n      e = Wc(a, c, 4, d + 32 | 0) | 0;\n\n      if (e | 0) {\n        g = e;\n        return g | 0;\n      }\n\n      g = d + 40 | 0;\n      b[g >> 2] = 0;\n      b[g + 4 >> 2] = 0;\n      g = 0;\n      return g | 0;\n    }\n\n    function Yc(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      j = T;\n      T = T + 192 | 0;\n      f = j;\n      g = j + 168 | 0;\n      h = vd(a | 0, c | 0, 56) | 0;\n      H() | 0;\n      h = h & 7;\n      i = c & -2130706433 | 134217728;\n      e = Ob(a, i, g) | 0;\n\n      if (e | 0) {\n        i = e;\n        T = j;\n        return i | 0;\n      }\n\n      c = vd(a | 0, c | 0, 52) | 0;\n      H() | 0;\n      c = c & 15;\n      if (!(xb(a, i) | 0)) { qb(g, c, h, 1, f); }else { mb(g, c, h, 1, f); }\n      i = f + 8 | 0;\n      b[d >> 2] = b[i >> 2];\n      b[d + 4 >> 2] = b[i + 4 >> 2];\n      b[d + 8 >> 2] = b[i + 8 >> 2];\n      b[d + 12 >> 2] = b[i + 12 >> 2];\n      i = 0;\n      T = j;\n      return i | 0;\n    }\n\n    function Zc(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          e = 0,\n          f = 0,\n          g = 0;\n      f = T;\n      T = T + 16 | 0;\n      d = f;\n\n      if (!(0 == 0 & (c & 2013265920 | 0) == 536870912)) {\n        e = 0;\n        T = f;\n        return e | 0;\n      }\n\n      e = c & -2130706433 | 134217728;\n\n      if (!(ub(a, e) | 0)) {\n        e = 0;\n        T = f;\n        return e | 0;\n      }\n\n      g = vd(a | 0, c | 0, 56) | 0;\n      H() | 0;\n      g = (Wc(a, e, g & 7, d) | 0) == 0;\n      e = d;\n      e = g & ((b[e >> 2] | 0) == (a | 0) ? (b[e + 4 >> 2] | 0) == (c | 0) : 0) & 1;\n      T = f;\n      return e | 0;\n    }\n\n    function _c(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0;\n\n      if ((c | 0) > 0) {\n        e = kd(c, 4) | 0;\n        b[a >> 2] = e;\n        if (!e) { I(23337, 23360, 40, 23374); }\n      } else { b[a >> 2] = 0; }\n\n      b[a + 4 >> 2] = c;\n      b[a + 8 >> 2] = 0;\n      b[a + 12 >> 2] = d;\n      return;\n    }\n\n    function $c(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      g = a + 4 | 0;\n      h = a + 12 | 0;\n      i = a + 8 | 0;\n\n      a: while (1) {\n        d = b[g >> 2] | 0;\n        c = 0;\n\n        while (1) {\n          if ((c | 0) >= (d | 0)) { break a; }\n          f = b[a >> 2] | 0;\n          j = b[f + (c << 2) >> 2] | 0;\n          if (!j) { c = c + 1 | 0; }else { break; }\n        }\n\n        c = f + (~~(+q(+(+s(10.0, + +(15 - (b[h >> 2] | 0) | 0)) * (+e[j >> 3] + +e[j + 8 >> 3]))) % +(d | 0)) >>> 0 << 2) | 0;\n        d = b[c >> 2] | 0;\n\n        b: do { if (d | 0) {\n          f = j + 32 | 0;\n          if ((d | 0) == (j | 0)) { b[c >> 2] = b[f >> 2]; }else {\n            d = d + 32 | 0;\n            c = b[d >> 2] | 0;\n            if (!c) { break; }\n\n            while (1) {\n              if ((c | 0) == (j | 0)) { break; }\n              d = c + 32 | 0;\n              c = b[d >> 2] | 0;\n              if (!c) { break b; }\n            }\n\n            b[d >> 2] = b[f >> 2];\n          }\n          jd(j);\n          b[i >> 2] = (b[i >> 2] | 0) + -1;\n        } } while (0);\n      }\n\n      jd(b[a >> 2] | 0);\n      return;\n    }\n\n    function ad(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0;\n      e = b[a + 4 >> 2] | 0;\n      d = 0;\n\n      while (1) {\n        if ((d | 0) >= (e | 0)) {\n          c = 0;\n          d = 4;\n          break;\n        }\n\n        c = b[(b[a >> 2] | 0) + (d << 2) >> 2] | 0;\n        if (!c) { d = d + 1 | 0; }else {\n          d = 4;\n          break;\n        }\n      }\n\n      if ((d | 0) == 4) { return c | 0; }\n      return 0;\n    }\n\n    function bd(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0,\n          f = 0,\n          g = 0,\n          h = 0;\n      d = ~~(+q(+(+s(10.0, + +(15 - (b[a + 12 >> 2] | 0) | 0)) * (+e[c >> 3] + +e[c + 8 >> 3]))) % +(b[a + 4 >> 2] | 0)) >>> 0;\n      d = (b[a >> 2] | 0) + (d << 2) | 0;\n      f = b[d >> 2] | 0;\n\n      if (!f) {\n        h = 1;\n        return h | 0;\n      }\n\n      h = c + 32 | 0;\n\n      do { if ((f | 0) != (c | 0)) {\n        d = b[f + 32 >> 2] | 0;\n\n        if (!d) {\n          h = 1;\n          return h | 0;\n        }\n\n        g = d;\n\n        while (1) {\n          if ((g | 0) == (c | 0)) {\n            g = 8;\n            break;\n          }\n\n          d = b[g + 32 >> 2] | 0;\n\n          if (!d) {\n            d = 1;\n            g = 10;\n            break;\n          } else {\n            f = g;\n            g = d;\n          }\n        }\n\n        if ((g | 0) == 8) {\n          b[f + 32 >> 2] = b[h >> 2];\n          break;\n        } else if ((g | 0) == 10) { return d | 0; }\n      } else { b[d >> 2] = b[h >> 2]; } } while (0);\n\n      jd(c);\n      h = a + 8 | 0;\n      b[h >> 2] = (b[h >> 2] | 0) + -1;\n      h = 0;\n      return h | 0;\n    }\n\n    function cd(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = id(40) | 0;\n      if (!h) { I(23390, 23360, 98, 23403); }\n      b[h >> 2] = b[c >> 2];\n      b[h + 4 >> 2] = b[c + 4 >> 2];\n      b[h + 8 >> 2] = b[c + 8 >> 2];\n      b[h + 12 >> 2] = b[c + 12 >> 2];\n      g = h + 16 | 0;\n      b[g >> 2] = b[d >> 2];\n      b[g + 4 >> 2] = b[d + 4 >> 2];\n      b[g + 8 >> 2] = b[d + 8 >> 2];\n      b[g + 12 >> 2] = b[d + 12 >> 2];\n      b[h + 32 >> 2] = 0;\n      g = ~~(+q(+(+s(10.0, + +(15 - (b[a + 12 >> 2] | 0) | 0)) * (+e[c >> 3] + +e[c + 8 >> 3]))) % +(b[a + 4 >> 2] | 0)) >>> 0;\n      g = (b[a >> 2] | 0) + (g << 2) | 0;\n      f = b[g >> 2] | 0;\n\n      do { if (!f) { b[g >> 2] = h; }else {\n        while (1) {\n          if (_b(f, c) | 0 ? _b(f + 16 | 0, d) | 0 : 0) { break; }\n          g = b[f + 32 >> 2] | 0;\n          f = (g | 0) == 0 ? f : g;\n\n          if (!(b[f + 32 >> 2] | 0)) {\n            i = 10;\n            break;\n          }\n        }\n\n        if ((i | 0) == 10) {\n          b[f + 32 >> 2] = h;\n          break;\n        }\n\n        jd(h);\n        i = f;\n        return i | 0;\n      } } while (0);\n\n      i = a + 8 | 0;\n      b[i >> 2] = (b[i >> 2] | 0) + 1;\n      i = h;\n      return i | 0;\n    }\n\n    function dd(a, c, d) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      var f = 0,\n          g = 0;\n      g = ~~(+q(+(+s(10.0, + +(15 - (b[a + 12 >> 2] | 0) | 0)) * (+e[c >> 3] + +e[c + 8 >> 3]))) % +(b[a + 4 >> 2] | 0)) >>> 0;\n      g = b[(b[a >> 2] | 0) + (g << 2) >> 2] | 0;\n\n      if (!g) {\n        d = 0;\n        return d | 0;\n      }\n\n      if (!d) {\n        a = g;\n\n        while (1) {\n          if (_b(a, c) | 0) {\n            f = 10;\n            break;\n          }\n\n          a = b[a + 32 >> 2] | 0;\n\n          if (!a) {\n            a = 0;\n            f = 10;\n            break;\n          }\n        }\n\n        if ((f | 0) == 10) { return a | 0; }\n      }\n\n      a = g;\n\n      while (1) {\n        if (_b(a, c) | 0 ? _b(a + 16 | 0, d) | 0 : 0) {\n          f = 10;\n          break;\n        }\n\n        a = b[a + 32 >> 2] | 0;\n\n        if (!a) {\n          a = 0;\n          f = 10;\n          break;\n        }\n      }\n\n      if ((f | 0) == 10) { return a | 0; }\n      return 0;\n    }\n\n    function ed(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0;\n      d = ~~(+q(+(+s(10.0, + +(15 - (b[a + 12 >> 2] | 0) | 0)) * (+e[c >> 3] + +e[c + 8 >> 3]))) % +(b[a + 4 >> 2] | 0)) >>> 0;\n      a = b[(b[a >> 2] | 0) + (d << 2) >> 2] | 0;\n\n      if (!a) {\n        d = 0;\n        return d | 0;\n      }\n\n      while (1) {\n        if (_b(a, c) | 0) {\n          c = 5;\n          break;\n        }\n\n        a = b[a + 32 >> 2] | 0;\n\n        if (!a) {\n          a = 0;\n          c = 5;\n          break;\n        }\n      }\n\n      if ((c | 0) == 5) { return a | 0; }\n      return 0;\n    }\n\n    function fd() {\n      return 23424;\n    }\n\n    function gd(a) {\n      a = +a;\n      return + +Cd(+a);\n    }\n\n    function hd(a) {\n      a = +a;\n      return ~~+gd(a) | 0;\n    }\n\n    function id(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0,\n          q = 0,\n          r = 0,\n          s = 0,\n          t = 0,\n          u = 0,\n          v = 0,\n          w = 0;\n      w = T;\n      T = T + 16 | 0;\n      n = w;\n\n      do { if (a >>> 0 < 245) {\n        k = a >>> 0 < 11 ? 16 : a + 11 & -8;\n        a = k >>> 3;\n        m = b[5857] | 0;\n        d = m >>> a;\n\n        if (d & 3 | 0) {\n          c = (d & 1 ^ 1) + a | 0;\n          a = 23468 + (c << 1 << 2) | 0;\n          d = a + 8 | 0;\n          e = b[d >> 2] | 0;\n          f = e + 8 | 0;\n          g = b[f >> 2] | 0;\n          if ((g | 0) == (a | 0)) { b[5857] = m & ~(1 << c); }else {\n            b[g + 12 >> 2] = a;\n            b[d >> 2] = g;\n          }\n          v = c << 3;\n          b[e + 4 >> 2] = v | 3;\n          v = e + v + 4 | 0;\n          b[v >> 2] = b[v >> 2] | 1;\n          v = f;\n          T = w;\n          return v | 0;\n        }\n\n        l = b[5859] | 0;\n\n        if (k >>> 0 > l >>> 0) {\n          if (d | 0) {\n            c = 2 << a;\n            c = d << a & (c | 0 - c);\n            c = (c & 0 - c) + -1 | 0;\n            i = c >>> 12 & 16;\n            c = c >>> i;\n            d = c >>> 5 & 8;\n            c = c >>> d;\n            g = c >>> 2 & 4;\n            c = c >>> g;\n            a = c >>> 1 & 2;\n            c = c >>> a;\n            e = c >>> 1 & 1;\n            e = (d | i | g | a | e) + (c >>> e) | 0;\n            c = 23468 + (e << 1 << 2) | 0;\n            a = c + 8 | 0;\n            g = b[a >> 2] | 0;\n            i = g + 8 | 0;\n            d = b[i >> 2] | 0;\n\n            if ((d | 0) == (c | 0)) {\n              a = m & ~(1 << e);\n              b[5857] = a;\n            } else {\n              b[d + 12 >> 2] = c;\n              b[a >> 2] = d;\n              a = m;\n            }\n\n            v = e << 3;\n            h = v - k | 0;\n            b[g + 4 >> 2] = k | 3;\n            f = g + k | 0;\n            b[f + 4 >> 2] = h | 1;\n            b[g + v >> 2] = h;\n\n            if (l | 0) {\n              e = b[5862] | 0;\n              c = l >>> 3;\n              d = 23468 + (c << 1 << 2) | 0;\n              c = 1 << c;\n\n              if (!(a & c)) {\n                b[5857] = a | c;\n                c = d;\n                a = d + 8 | 0;\n              } else {\n                a = d + 8 | 0;\n                c = b[a >> 2] | 0;\n              }\n\n              b[a >> 2] = e;\n              b[c + 12 >> 2] = e;\n              b[e + 8 >> 2] = c;\n              b[e + 12 >> 2] = d;\n            }\n\n            b[5859] = h;\n            b[5862] = f;\n            v = i;\n            T = w;\n            return v | 0;\n          }\n\n          g = b[5858] | 0;\n\n          if (g) {\n            d = (g & 0 - g) + -1 | 0;\n            f = d >>> 12 & 16;\n            d = d >>> f;\n            e = d >>> 5 & 8;\n            d = d >>> e;\n            h = d >>> 2 & 4;\n            d = d >>> h;\n            i = d >>> 1 & 2;\n            d = d >>> i;\n            j = d >>> 1 & 1;\n            j = b[23732 + ((e | f | h | i | j) + (d >>> j) << 2) >> 2] | 0;\n            d = j;\n            i = j;\n            j = (b[j + 4 >> 2] & -8) - k | 0;\n\n            while (1) {\n              a = b[d + 16 >> 2] | 0;\n\n              if (!a) {\n                a = b[d + 20 >> 2] | 0;\n                if (!a) { break; }\n              }\n\n              h = (b[a + 4 >> 2] & -8) - k | 0;\n              f = h >>> 0 < j >>> 0;\n              d = a;\n              i = f ? a : i;\n              j = f ? h : j;\n            }\n\n            h = i + k | 0;\n\n            if (h >>> 0 > i >>> 0) {\n              f = b[i + 24 >> 2] | 0;\n              c = b[i + 12 >> 2] | 0;\n\n              do { if ((c | 0) == (i | 0)) {\n                a = i + 20 | 0;\n                c = b[a >> 2] | 0;\n\n                if (!c) {\n                  a = i + 16 | 0;\n                  c = b[a >> 2] | 0;\n\n                  if (!c) {\n                    d = 0;\n                    break;\n                  }\n                }\n\n                while (1) {\n                  e = c + 20 | 0;\n                  d = b[e >> 2] | 0;\n\n                  if (!d) {\n                    e = c + 16 | 0;\n                    d = b[e >> 2] | 0;\n                    if (!d) { break; }else {\n                      c = d;\n                      a = e;\n                    }\n                  } else {\n                    c = d;\n                    a = e;\n                  }\n                }\n\n                b[a >> 2] = 0;\n                d = c;\n              } else {\n                d = b[i + 8 >> 2] | 0;\n                b[d + 12 >> 2] = c;\n                b[c + 8 >> 2] = d;\n                d = c;\n              } } while (0);\n\n              do { if (f | 0) {\n                c = b[i + 28 >> 2] | 0;\n                a = 23732 + (c << 2) | 0;\n\n                if ((i | 0) == (b[a >> 2] | 0)) {\n                  b[a >> 2] = d;\n\n                  if (!d) {\n                    b[5858] = g & ~(1 << c);\n                    break;\n                  }\n                } else {\n                  v = f + 16 | 0;\n                  b[((b[v >> 2] | 0) == (i | 0) ? v : f + 20 | 0) >> 2] = d;\n                  if (!d) { break; }\n                }\n\n                b[d + 24 >> 2] = f;\n                c = b[i + 16 >> 2] | 0;\n\n                if (c | 0) {\n                  b[d + 16 >> 2] = c;\n                  b[c + 24 >> 2] = d;\n                }\n\n                c = b[i + 20 >> 2] | 0;\n\n                if (c | 0) {\n                  b[d + 20 >> 2] = c;\n                  b[c + 24 >> 2] = d;\n                }\n              } } while (0);\n\n              if (j >>> 0 < 16) {\n                v = j + k | 0;\n                b[i + 4 >> 2] = v | 3;\n                v = i + v + 4 | 0;\n                b[v >> 2] = b[v >> 2] | 1;\n              } else {\n                b[i + 4 >> 2] = k | 3;\n                b[h + 4 >> 2] = j | 1;\n                b[h + j >> 2] = j;\n\n                if (l | 0) {\n                  e = b[5862] | 0;\n                  c = l >>> 3;\n                  d = 23468 + (c << 1 << 2) | 0;\n                  c = 1 << c;\n\n                  if (!(c & m)) {\n                    b[5857] = c | m;\n                    c = d;\n                    a = d + 8 | 0;\n                  } else {\n                    a = d + 8 | 0;\n                    c = b[a >> 2] | 0;\n                  }\n\n                  b[a >> 2] = e;\n                  b[c + 12 >> 2] = e;\n                  b[e + 8 >> 2] = c;\n                  b[e + 12 >> 2] = d;\n                }\n\n                b[5859] = j;\n                b[5862] = h;\n              }\n\n              v = i + 8 | 0;\n              T = w;\n              return v | 0;\n            } else { m = k; }\n          } else { m = k; }\n        } else { m = k; }\n      } else if (a >>> 0 <= 4294967231) {\n        a = a + 11 | 0;\n        k = a & -8;\n        e = b[5858] | 0;\n\n        if (e) {\n          f = 0 - k | 0;\n          a = a >>> 8;\n          if (a) {\n            if (k >>> 0 > 16777215) { j = 31; }else {\n              m = (a + 1048320 | 0) >>> 16 & 8;\n              q = a << m;\n              i = (q + 520192 | 0) >>> 16 & 4;\n              q = q << i;\n              j = (q + 245760 | 0) >>> 16 & 2;\n              j = 14 - (i | m | j) + (q << j >>> 15) | 0;\n              j = k >>> (j + 7 | 0) & 1 | j << 1;\n            }\n          } else { j = 0; }\n          d = b[23732 + (j << 2) >> 2] | 0;\n\n          a: do { if (!d) {\n            d = 0;\n            a = 0;\n            q = 61;\n          } else {\n            a = 0;\n            i = k << ((j | 0) == 31 ? 0 : 25 - (j >>> 1) | 0);\n            g = 0;\n\n            while (1) {\n              h = (b[d + 4 >> 2] & -8) - k | 0;\n              if (h >>> 0 < f >>> 0) { if (!h) {\n                a = d;\n                f = 0;\n                q = 65;\n                break a;\n              } else {\n                a = d;\n                f = h;\n              } }\n              q = b[d + 20 >> 2] | 0;\n              d = b[d + 16 + (i >>> 31 << 2) >> 2] | 0;\n              g = (q | 0) == 0 | (q | 0) == (d | 0) ? g : q;\n\n              if (!d) {\n                d = g;\n                q = 61;\n                break;\n              } else { i = i << 1; }\n            }\n          } } while (0);\n\n          if ((q | 0) == 61) {\n            if ((d | 0) == 0 & (a | 0) == 0) {\n              a = 2 << j;\n              a = (a | 0 - a) & e;\n\n              if (!a) {\n                m = k;\n                break;\n              }\n\n              m = (a & 0 - a) + -1 | 0;\n              h = m >>> 12 & 16;\n              m = m >>> h;\n              g = m >>> 5 & 8;\n              m = m >>> g;\n              i = m >>> 2 & 4;\n              m = m >>> i;\n              j = m >>> 1 & 2;\n              m = m >>> j;\n              d = m >>> 1 & 1;\n              a = 0;\n              d = b[23732 + ((g | h | i | j | d) + (m >>> d) << 2) >> 2] | 0;\n            }\n\n            if (!d) {\n              i = a;\n              h = f;\n            } else { q = 65; }\n          }\n\n          if ((q | 0) == 65) {\n            g = d;\n\n            while (1) {\n              m = (b[g + 4 >> 2] & -8) - k | 0;\n              d = m >>> 0 < f >>> 0;\n              f = d ? m : f;\n              a = d ? g : a;\n              d = b[g + 16 >> 2] | 0;\n              if (!d) { d = b[g + 20 >> 2] | 0; }\n\n              if (!d) {\n                i = a;\n                h = f;\n                break;\n              } else { g = d; }\n            }\n          }\n\n          if (((i | 0) != 0 ? h >>> 0 < ((b[5859] | 0) - k | 0) >>> 0 : 0) ? (l = i + k | 0, l >>> 0 > i >>> 0) : 0) {\n            g = b[i + 24 >> 2] | 0;\n            c = b[i + 12 >> 2] | 0;\n\n            do { if ((c | 0) == (i | 0)) {\n              a = i + 20 | 0;\n              c = b[a >> 2] | 0;\n\n              if (!c) {\n                a = i + 16 | 0;\n                c = b[a >> 2] | 0;\n\n                if (!c) {\n                  c = 0;\n                  break;\n                }\n              }\n\n              while (1) {\n                f = c + 20 | 0;\n                d = b[f >> 2] | 0;\n\n                if (!d) {\n                  f = c + 16 | 0;\n                  d = b[f >> 2] | 0;\n                  if (!d) { break; }else {\n                    c = d;\n                    a = f;\n                  }\n                } else {\n                  c = d;\n                  a = f;\n                }\n              }\n\n              b[a >> 2] = 0;\n            } else {\n              v = b[i + 8 >> 2] | 0;\n              b[v + 12 >> 2] = c;\n              b[c + 8 >> 2] = v;\n            } } while (0);\n\n            do { if (g) {\n              a = b[i + 28 >> 2] | 0;\n              d = 23732 + (a << 2) | 0;\n\n              if ((i | 0) == (b[d >> 2] | 0)) {\n                b[d >> 2] = c;\n\n                if (!c) {\n                  e = e & ~(1 << a);\n                  b[5858] = e;\n                  break;\n                }\n              } else {\n                v = g + 16 | 0;\n                b[((b[v >> 2] | 0) == (i | 0) ? v : g + 20 | 0) >> 2] = c;\n                if (!c) { break; }\n              }\n\n              b[c + 24 >> 2] = g;\n              a = b[i + 16 >> 2] | 0;\n\n              if (a | 0) {\n                b[c + 16 >> 2] = a;\n                b[a + 24 >> 2] = c;\n              }\n\n              a = b[i + 20 >> 2] | 0;\n\n              if (a) {\n                b[c + 20 >> 2] = a;\n                b[a + 24 >> 2] = c;\n              }\n            } } while (0);\n\n            b: do { if (h >>> 0 < 16) {\n              v = h + k | 0;\n              b[i + 4 >> 2] = v | 3;\n              v = i + v + 4 | 0;\n              b[v >> 2] = b[v >> 2] | 1;\n            } else {\n              b[i + 4 >> 2] = k | 3;\n              b[l + 4 >> 2] = h | 1;\n              b[l + h >> 2] = h;\n              c = h >>> 3;\n\n              if (h >>> 0 < 256) {\n                d = 23468 + (c << 1 << 2) | 0;\n                a = b[5857] | 0;\n                c = 1 << c;\n\n                if (!(a & c)) {\n                  b[5857] = a | c;\n                  c = d;\n                  a = d + 8 | 0;\n                } else {\n                  a = d + 8 | 0;\n                  c = b[a >> 2] | 0;\n                }\n\n                b[a >> 2] = l;\n                b[c + 12 >> 2] = l;\n                b[l + 8 >> 2] = c;\n                b[l + 12 >> 2] = d;\n                break;\n              }\n\n              c = h >>> 8;\n              if (c) {\n                if (h >>> 0 > 16777215) { d = 31; }else {\n                  u = (c + 1048320 | 0) >>> 16 & 8;\n                  v = c << u;\n                  t = (v + 520192 | 0) >>> 16 & 4;\n                  v = v << t;\n                  d = (v + 245760 | 0) >>> 16 & 2;\n                  d = 14 - (t | u | d) + (v << d >>> 15) | 0;\n                  d = h >>> (d + 7 | 0) & 1 | d << 1;\n                }\n              } else { d = 0; }\n              c = 23732 + (d << 2) | 0;\n              b[l + 28 >> 2] = d;\n              a = l + 16 | 0;\n              b[a + 4 >> 2] = 0;\n              b[a >> 2] = 0;\n              a = 1 << d;\n\n              if (!(e & a)) {\n                b[5858] = e | a;\n                b[c >> 2] = l;\n                b[l + 24 >> 2] = c;\n                b[l + 12 >> 2] = l;\n                b[l + 8 >> 2] = l;\n                break;\n              }\n\n              c = b[c >> 2] | 0;\n\n              c: do { if ((b[c + 4 >> 2] & -8 | 0) != (h | 0)) {\n                e = h << ((d | 0) == 31 ? 0 : 25 - (d >>> 1) | 0);\n\n                while (1) {\n                  d = c + 16 + (e >>> 31 << 2) | 0;\n                  a = b[d >> 2] | 0;\n                  if (!a) { break; }\n\n                  if ((b[a + 4 >> 2] & -8 | 0) == (h | 0)) {\n                    c = a;\n                    break c;\n                  } else {\n                    e = e << 1;\n                    c = a;\n                  }\n                }\n\n                b[d >> 2] = l;\n                b[l + 24 >> 2] = c;\n                b[l + 12 >> 2] = l;\n                b[l + 8 >> 2] = l;\n                break b;\n              } } while (0);\n\n              u = c + 8 | 0;\n              v = b[u >> 2] | 0;\n              b[v + 12 >> 2] = l;\n              b[u >> 2] = l;\n              b[l + 8 >> 2] = v;\n              b[l + 12 >> 2] = c;\n              b[l + 24 >> 2] = 0;\n            } } while (0);\n\n            v = i + 8 | 0;\n            T = w;\n            return v | 0;\n          } else { m = k; }\n        } else { m = k; }\n      } else { m = -1; } } while (0);\n\n      d = b[5859] | 0;\n\n      if (d >>> 0 >= m >>> 0) {\n        c = d - m | 0;\n        a = b[5862] | 0;\n\n        if (c >>> 0 > 15) {\n          v = a + m | 0;\n          b[5862] = v;\n          b[5859] = c;\n          b[v + 4 >> 2] = c | 1;\n          b[a + d >> 2] = c;\n          b[a + 4 >> 2] = m | 3;\n        } else {\n          b[5859] = 0;\n          b[5862] = 0;\n          b[a + 4 >> 2] = d | 3;\n          v = a + d + 4 | 0;\n          b[v >> 2] = b[v >> 2] | 1;\n        }\n\n        v = a + 8 | 0;\n        T = w;\n        return v | 0;\n      }\n\n      h = b[5860] | 0;\n\n      if (h >>> 0 > m >>> 0) {\n        t = h - m | 0;\n        b[5860] = t;\n        v = b[5863] | 0;\n        u = v + m | 0;\n        b[5863] = u;\n        b[u + 4 >> 2] = t | 1;\n        b[v + 4 >> 2] = m | 3;\n        v = v + 8 | 0;\n        T = w;\n        return v | 0;\n      }\n\n      if (!(b[5975] | 0)) {\n        b[5977] = 4096;\n        b[5976] = 4096;\n        b[5978] = -1;\n        b[5979] = -1;\n        b[5980] = 0;\n        b[5968] = 0;\n        b[5975] = n & -16 ^ 1431655768;\n        a = 4096;\n      } else { a = b[5977] | 0; }\n\n      i = m + 48 | 0;\n      j = m + 47 | 0;\n      g = a + j | 0;\n      f = 0 - a | 0;\n      k = g & f;\n\n      if (k >>> 0 <= m >>> 0) {\n        v = 0;\n        T = w;\n        return v | 0;\n      }\n\n      a = b[5967] | 0;\n\n      if (a | 0 ? (l = b[5965] | 0, n = l + k | 0, n >>> 0 <= l >>> 0 | n >>> 0 > a >>> 0) : 0) {\n        v = 0;\n        T = w;\n        return v | 0;\n      }\n\n      d: do { if (!(b[5968] & 4)) {\n        d = b[5863] | 0;\n\n        e: do { if (d) {\n          e = 23876;\n\n          while (1) {\n            n = b[e >> 2] | 0;\n            if (n >>> 0 <= d >>> 0 ? (n + (b[e + 4 >> 2] | 0) | 0) >>> 0 > d >>> 0 : 0) { break; }\n            a = b[e + 8 >> 2] | 0;\n\n            if (!a) {\n              q = 128;\n              break e;\n            } else { e = a; }\n          }\n\n          c = g - h & f;\n\n          if (c >>> 0 < 2147483647) {\n            a = Dd(c | 0) | 0;\n\n            if ((a | 0) == ((b[e >> 2] | 0) + (b[e + 4 >> 2] | 0) | 0)) {\n              if ((a | 0) != (-1 | 0)) {\n                h = c;\n                g = a;\n                q = 145;\n                break d;\n              }\n            } else {\n              e = a;\n              q = 136;\n            }\n          } else { c = 0; }\n        } else { q = 128; } } while (0);\n\n        do { if ((q | 0) == 128) {\n          d = Dd(0) | 0;\n\n          if ((d | 0) != (-1 | 0) ? (c = d, o = b[5976] | 0, p = o + -1 | 0, c = ((p & c | 0) == 0 ? 0 : (p + c & 0 - o) - c | 0) + k | 0, o = b[5965] | 0, p = c + o | 0, c >>> 0 > m >>> 0 & c >>> 0 < 2147483647) : 0) {\n            n = b[5967] | 0;\n\n            if (n | 0 ? p >>> 0 <= o >>> 0 | p >>> 0 > n >>> 0 : 0) {\n              c = 0;\n              break;\n            }\n\n            a = Dd(c | 0) | 0;\n\n            if ((a | 0) == (d | 0)) {\n              h = c;\n              g = d;\n              q = 145;\n              break d;\n            } else {\n              e = a;\n              q = 136;\n            }\n          } else { c = 0; }\n        } } while (0);\n\n        do { if ((q | 0) == 136) {\n          d = 0 - c | 0;\n          if (!(i >>> 0 > c >>> 0 & (c >>> 0 < 2147483647 & (e | 0) != (-1 | 0)))) { if ((e | 0) == (-1 | 0)) {\n            c = 0;\n            break;\n          } else {\n            h = c;\n            g = e;\n            q = 145;\n            break d;\n          } }\n          a = b[5977] | 0;\n          a = j - c + a & 0 - a;\n\n          if (a >>> 0 >= 2147483647) {\n            h = c;\n            g = e;\n            q = 145;\n            break d;\n          }\n\n          if ((Dd(a | 0) | 0) == (-1 | 0)) {\n            Dd(d | 0) | 0;\n            c = 0;\n            break;\n          } else {\n            h = a + c | 0;\n            g = e;\n            q = 145;\n            break d;\n          }\n        } } while (0);\n\n        b[5968] = b[5968] | 4;\n        q = 143;\n      } else {\n        c = 0;\n        q = 143;\n      } } while (0);\n\n      if (((q | 0) == 143 ? k >>> 0 < 2147483647 : 0) ? (t = Dd(k | 0) | 0, p = Dd(0) | 0, r = p - t | 0, s = r >>> 0 > (m + 40 | 0) >>> 0, !((t | 0) == (-1 | 0) | s ^ 1 | t >>> 0 < p >>> 0 & ((t | 0) != (-1 | 0) & (p | 0) != (-1 | 0)) ^ 1)) : 0) {\n        h = s ? r : c;\n        g = t;\n        q = 145;\n      }\n\n      if ((q | 0) == 145) {\n        c = (b[5965] | 0) + h | 0;\n        b[5965] = c;\n        if (c >>> 0 > (b[5966] | 0) >>> 0) { b[5966] = c; }\n        j = b[5863] | 0;\n\n        f: do { if (j) {\n          c = 23876;\n\n          while (1) {\n            a = b[c >> 2] | 0;\n            d = b[c + 4 >> 2] | 0;\n\n            if ((g | 0) == (a + d | 0)) {\n              q = 154;\n              break;\n            }\n\n            e = b[c + 8 >> 2] | 0;\n            if (!e) { break; }else { c = e; }\n          }\n\n          if (((q | 0) == 154 ? (u = c + 4 | 0, (b[c + 12 >> 2] & 8 | 0) == 0) : 0) ? g >>> 0 > j >>> 0 & a >>> 0 <= j >>> 0 : 0) {\n            b[u >> 2] = d + h;\n            v = (b[5860] | 0) + h | 0;\n            t = j + 8 | 0;\n            t = (t & 7 | 0) == 0 ? 0 : 0 - t & 7;\n            u = j + t | 0;\n            t = v - t | 0;\n            b[5863] = u;\n            b[5860] = t;\n            b[u + 4 >> 2] = t | 1;\n            b[j + v + 4 >> 2] = 40;\n            b[5864] = b[5979];\n            break;\n          }\n\n          if (g >>> 0 < (b[5861] | 0) >>> 0) { b[5861] = g; }\n          d = g + h | 0;\n          c = 23876;\n\n          while (1) {\n            if ((b[c >> 2] | 0) == (d | 0)) {\n              q = 162;\n              break;\n            }\n\n            a = b[c + 8 >> 2] | 0;\n            if (!a) { break; }else { c = a; }\n          }\n\n          if ((q | 0) == 162 ? (b[c + 12 >> 2] & 8 | 0) == 0 : 0) {\n            b[c >> 2] = g;\n            l = c + 4 | 0;\n            b[l >> 2] = (b[l >> 2] | 0) + h;\n            l = g + 8 | 0;\n            l = g + ((l & 7 | 0) == 0 ? 0 : 0 - l & 7) | 0;\n            c = d + 8 | 0;\n            c = d + ((c & 7 | 0) == 0 ? 0 : 0 - c & 7) | 0;\n            k = l + m | 0;\n            i = c - l - m | 0;\n            b[l + 4 >> 2] = m | 3;\n\n            g: do { if ((j | 0) == (c | 0)) {\n              v = (b[5860] | 0) + i | 0;\n              b[5860] = v;\n              b[5863] = k;\n              b[k + 4 >> 2] = v | 1;\n            } else {\n              if ((b[5862] | 0) == (c | 0)) {\n                v = (b[5859] | 0) + i | 0;\n                b[5859] = v;\n                b[5862] = k;\n                b[k + 4 >> 2] = v | 1;\n                b[k + v >> 2] = v;\n                break;\n              }\n\n              a = b[c + 4 >> 2] | 0;\n\n              if ((a & 3 | 0) == 1) {\n                h = a & -8;\n                e = a >>> 3;\n\n                h: do { if (a >>> 0 < 256) {\n                  a = b[c + 8 >> 2] | 0;\n                  d = b[c + 12 >> 2] | 0;\n\n                  if ((d | 0) == (a | 0)) {\n                    b[5857] = b[5857] & ~(1 << e);\n                    break;\n                  } else {\n                    b[a + 12 >> 2] = d;\n                    b[d + 8 >> 2] = a;\n                    break;\n                  }\n                } else {\n                  g = b[c + 24 >> 2] | 0;\n                  a = b[c + 12 >> 2] | 0;\n\n                  do { if ((a | 0) == (c | 0)) {\n                    d = c + 16 | 0;\n                    e = d + 4 | 0;\n                    a = b[e >> 2] | 0;\n\n                    if (!a) {\n                      a = b[d >> 2] | 0;\n\n                      if (!a) {\n                        a = 0;\n                        break;\n                      }\n                    } else { d = e; }\n\n                    while (1) {\n                      f = a + 20 | 0;\n                      e = b[f >> 2] | 0;\n\n                      if (!e) {\n                        f = a + 16 | 0;\n                        e = b[f >> 2] | 0;\n                        if (!e) { break; }else {\n                          a = e;\n                          d = f;\n                        }\n                      } else {\n                        a = e;\n                        d = f;\n                      }\n                    }\n\n                    b[d >> 2] = 0;\n                  } else {\n                    v = b[c + 8 >> 2] | 0;\n                    b[v + 12 >> 2] = a;\n                    b[a + 8 >> 2] = v;\n                  } } while (0);\n\n                  if (!g) { break; }\n                  d = b[c + 28 >> 2] | 0;\n                  e = 23732 + (d << 2) | 0;\n\n                  do { if ((b[e >> 2] | 0) != (c | 0)) {\n                    v = g + 16 | 0;\n                    b[((b[v >> 2] | 0) == (c | 0) ? v : g + 20 | 0) >> 2] = a;\n                    if (!a) { break h; }\n                  } else {\n                    b[e >> 2] = a;\n                    if (a | 0) { break; }\n                    b[5858] = b[5858] & ~(1 << d);\n                    break h;\n                  } } while (0);\n\n                  b[a + 24 >> 2] = g;\n                  d = c + 16 | 0;\n                  e = b[d >> 2] | 0;\n\n                  if (e | 0) {\n                    b[a + 16 >> 2] = e;\n                    b[e + 24 >> 2] = a;\n                  }\n\n                  d = b[d + 4 >> 2] | 0;\n                  if (!d) { break; }\n                  b[a + 20 >> 2] = d;\n                  b[d + 24 >> 2] = a;\n                } } while (0);\n\n                c = c + h | 0;\n                f = h + i | 0;\n              } else { f = i; }\n\n              c = c + 4 | 0;\n              b[c >> 2] = b[c >> 2] & -2;\n              b[k + 4 >> 2] = f | 1;\n              b[k + f >> 2] = f;\n              c = f >>> 3;\n\n              if (f >>> 0 < 256) {\n                d = 23468 + (c << 1 << 2) | 0;\n                a = b[5857] | 0;\n                c = 1 << c;\n\n                if (!(a & c)) {\n                  b[5857] = a | c;\n                  c = d;\n                  a = d + 8 | 0;\n                } else {\n                  a = d + 8 | 0;\n                  c = b[a >> 2] | 0;\n                }\n\n                b[a >> 2] = k;\n                b[c + 12 >> 2] = k;\n                b[k + 8 >> 2] = c;\n                b[k + 12 >> 2] = d;\n                break;\n              }\n\n              c = f >>> 8;\n\n              do { if (!c) { e = 0; }else {\n                if (f >>> 0 > 16777215) {\n                  e = 31;\n                  break;\n                }\n\n                u = (c + 1048320 | 0) >>> 16 & 8;\n                v = c << u;\n                t = (v + 520192 | 0) >>> 16 & 4;\n                v = v << t;\n                e = (v + 245760 | 0) >>> 16 & 2;\n                e = 14 - (t | u | e) + (v << e >>> 15) | 0;\n                e = f >>> (e + 7 | 0) & 1 | e << 1;\n              } } while (0);\n\n              c = 23732 + (e << 2) | 0;\n              b[k + 28 >> 2] = e;\n              a = k + 16 | 0;\n              b[a + 4 >> 2] = 0;\n              b[a >> 2] = 0;\n              a = b[5858] | 0;\n              d = 1 << e;\n\n              if (!(a & d)) {\n                b[5858] = a | d;\n                b[c >> 2] = k;\n                b[k + 24 >> 2] = c;\n                b[k + 12 >> 2] = k;\n                b[k + 8 >> 2] = k;\n                break;\n              }\n\n              c = b[c >> 2] | 0;\n\n              i: do { if ((b[c + 4 >> 2] & -8 | 0) != (f | 0)) {\n                e = f << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);\n\n                while (1) {\n                  d = c + 16 + (e >>> 31 << 2) | 0;\n                  a = b[d >> 2] | 0;\n                  if (!a) { break; }\n\n                  if ((b[a + 4 >> 2] & -8 | 0) == (f | 0)) {\n                    c = a;\n                    break i;\n                  } else {\n                    e = e << 1;\n                    c = a;\n                  }\n                }\n\n                b[d >> 2] = k;\n                b[k + 24 >> 2] = c;\n                b[k + 12 >> 2] = k;\n                b[k + 8 >> 2] = k;\n                break g;\n              } } while (0);\n\n              u = c + 8 | 0;\n              v = b[u >> 2] | 0;\n              b[v + 12 >> 2] = k;\n              b[u >> 2] = k;\n              b[k + 8 >> 2] = v;\n              b[k + 12 >> 2] = c;\n              b[k + 24 >> 2] = 0;\n            } } while (0);\n\n            v = l + 8 | 0;\n            T = w;\n            return v | 0;\n          }\n\n          c = 23876;\n\n          while (1) {\n            a = b[c >> 2] | 0;\n            if (a >>> 0 <= j >>> 0 ? (v = a + (b[c + 4 >> 2] | 0) | 0, v >>> 0 > j >>> 0) : 0) { break; }\n            c = b[c + 8 >> 2] | 0;\n          }\n\n          f = v + -47 | 0;\n          a = f + 8 | 0;\n          a = f + ((a & 7 | 0) == 0 ? 0 : 0 - a & 7) | 0;\n          f = j + 16 | 0;\n          a = a >>> 0 < f >>> 0 ? j : a;\n          c = a + 8 | 0;\n          d = h + -40 | 0;\n          t = g + 8 | 0;\n          t = (t & 7 | 0) == 0 ? 0 : 0 - t & 7;\n          u = g + t | 0;\n          t = d - t | 0;\n          b[5863] = u;\n          b[5860] = t;\n          b[u + 4 >> 2] = t | 1;\n          b[g + d + 4 >> 2] = 40;\n          b[5864] = b[5979];\n          d = a + 4 | 0;\n          b[d >> 2] = 27;\n          b[c >> 2] = b[5969];\n          b[c + 4 >> 2] = b[5970];\n          b[c + 8 >> 2] = b[5971];\n          b[c + 12 >> 2] = b[5972];\n          b[5969] = g;\n          b[5970] = h;\n          b[5972] = 0;\n          b[5971] = c;\n          c = a + 24 | 0;\n\n          do {\n            u = c;\n            c = c + 4 | 0;\n            b[c >> 2] = 7;\n          } while ((u + 8 | 0) >>> 0 < v >>> 0);\n\n          if ((a | 0) != (j | 0)) {\n            g = a - j | 0;\n            b[d >> 2] = b[d >> 2] & -2;\n            b[j + 4 >> 2] = g | 1;\n            b[a >> 2] = g;\n            c = g >>> 3;\n\n            if (g >>> 0 < 256) {\n              d = 23468 + (c << 1 << 2) | 0;\n              a = b[5857] | 0;\n              c = 1 << c;\n\n              if (!(a & c)) {\n                b[5857] = a | c;\n                c = d;\n                a = d + 8 | 0;\n              } else {\n                a = d + 8 | 0;\n                c = b[a >> 2] | 0;\n              }\n\n              b[a >> 2] = j;\n              b[c + 12 >> 2] = j;\n              b[j + 8 >> 2] = c;\n              b[j + 12 >> 2] = d;\n              break;\n            }\n\n            c = g >>> 8;\n            if (c) {\n              if (g >>> 0 > 16777215) { e = 31; }else {\n                u = (c + 1048320 | 0) >>> 16 & 8;\n                v = c << u;\n                t = (v + 520192 | 0) >>> 16 & 4;\n                v = v << t;\n                e = (v + 245760 | 0) >>> 16 & 2;\n                e = 14 - (t | u | e) + (v << e >>> 15) | 0;\n                e = g >>> (e + 7 | 0) & 1 | e << 1;\n              }\n            } else { e = 0; }\n            d = 23732 + (e << 2) | 0;\n            b[j + 28 >> 2] = e;\n            b[j + 20 >> 2] = 0;\n            b[f >> 2] = 0;\n            c = b[5858] | 0;\n            a = 1 << e;\n\n            if (!(c & a)) {\n              b[5858] = c | a;\n              b[d >> 2] = j;\n              b[j + 24 >> 2] = d;\n              b[j + 12 >> 2] = j;\n              b[j + 8 >> 2] = j;\n              break;\n            }\n\n            c = b[d >> 2] | 0;\n\n            j: do { if ((b[c + 4 >> 2] & -8 | 0) != (g | 0)) {\n              e = g << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);\n\n              while (1) {\n                d = c + 16 + (e >>> 31 << 2) | 0;\n                a = b[d >> 2] | 0;\n                if (!a) { break; }\n\n                if ((b[a + 4 >> 2] & -8 | 0) == (g | 0)) {\n                  c = a;\n                  break j;\n                } else {\n                  e = e << 1;\n                  c = a;\n                }\n              }\n\n              b[d >> 2] = j;\n              b[j + 24 >> 2] = c;\n              b[j + 12 >> 2] = j;\n              b[j + 8 >> 2] = j;\n              break f;\n            } } while (0);\n\n            u = c + 8 | 0;\n            v = b[u >> 2] | 0;\n            b[v + 12 >> 2] = j;\n            b[u >> 2] = j;\n            b[j + 8 >> 2] = v;\n            b[j + 12 >> 2] = c;\n            b[j + 24 >> 2] = 0;\n          }\n        } else {\n          v = b[5861] | 0;\n          if ((v | 0) == 0 | g >>> 0 < v >>> 0) { b[5861] = g; }\n          b[5969] = g;\n          b[5970] = h;\n          b[5972] = 0;\n          b[5866] = b[5975];\n          b[5865] = -1;\n          b[5870] = 23468;\n          b[5869] = 23468;\n          b[5872] = 23476;\n          b[5871] = 23476;\n          b[5874] = 23484;\n          b[5873] = 23484;\n          b[5876] = 23492;\n          b[5875] = 23492;\n          b[5878] = 23500;\n          b[5877] = 23500;\n          b[5880] = 23508;\n          b[5879] = 23508;\n          b[5882] = 23516;\n          b[5881] = 23516;\n          b[5884] = 23524;\n          b[5883] = 23524;\n          b[5886] = 23532;\n          b[5885] = 23532;\n          b[5888] = 23540;\n          b[5887] = 23540;\n          b[5890] = 23548;\n          b[5889] = 23548;\n          b[5892] = 23556;\n          b[5891] = 23556;\n          b[5894] = 23564;\n          b[5893] = 23564;\n          b[5896] = 23572;\n          b[5895] = 23572;\n          b[5898] = 23580;\n          b[5897] = 23580;\n          b[5900] = 23588;\n          b[5899] = 23588;\n          b[5902] = 23596;\n          b[5901] = 23596;\n          b[5904] = 23604;\n          b[5903] = 23604;\n          b[5906] = 23612;\n          b[5905] = 23612;\n          b[5908] = 23620;\n          b[5907] = 23620;\n          b[5910] = 23628;\n          b[5909] = 23628;\n          b[5912] = 23636;\n          b[5911] = 23636;\n          b[5914] = 23644;\n          b[5913] = 23644;\n          b[5916] = 23652;\n          b[5915] = 23652;\n          b[5918] = 23660;\n          b[5917] = 23660;\n          b[5920] = 23668;\n          b[5919] = 23668;\n          b[5922] = 23676;\n          b[5921] = 23676;\n          b[5924] = 23684;\n          b[5923] = 23684;\n          b[5926] = 23692;\n          b[5925] = 23692;\n          b[5928] = 23700;\n          b[5927] = 23700;\n          b[5930] = 23708;\n          b[5929] = 23708;\n          b[5932] = 23716;\n          b[5931] = 23716;\n          v = h + -40 | 0;\n          t = g + 8 | 0;\n          t = (t & 7 | 0) == 0 ? 0 : 0 - t & 7;\n          u = g + t | 0;\n          t = v - t | 0;\n          b[5863] = u;\n          b[5860] = t;\n          b[u + 4 >> 2] = t | 1;\n          b[g + v + 4 >> 2] = 40;\n          b[5864] = b[5979];\n        } } while (0);\n\n        c = b[5860] | 0;\n\n        if (c >>> 0 > m >>> 0) {\n          t = c - m | 0;\n          b[5860] = t;\n          v = b[5863] | 0;\n          u = v + m | 0;\n          b[5863] = u;\n          b[u + 4 >> 2] = t | 1;\n          b[v + 4 >> 2] = m | 3;\n          v = v + 8 | 0;\n          T = w;\n          return v | 0;\n        }\n      }\n\n      v = fd() | 0;\n      b[v >> 2] = 12;\n      v = 0;\n      T = w;\n      return v | 0;\n    }\n\n    function jd(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      if (!a) { return; }\n      d = a + -8 | 0;\n      f = b[5861] | 0;\n      a = b[a + -4 >> 2] | 0;\n      c = a & -8;\n      j = d + c | 0;\n\n      do { if (!(a & 1)) {\n        e = b[d >> 2] | 0;\n        if (!(a & 3)) { return; }\n        h = d + (0 - e) | 0;\n        g = e + c | 0;\n        if (h >>> 0 < f >>> 0) { return; }\n\n        if ((b[5862] | 0) == (h | 0)) {\n          a = j + 4 | 0;\n          c = b[a >> 2] | 0;\n\n          if ((c & 3 | 0) != 3) {\n            i = h;\n            c = g;\n            break;\n          }\n\n          b[5859] = g;\n          b[a >> 2] = c & -2;\n          b[h + 4 >> 2] = g | 1;\n          b[h + g >> 2] = g;\n          return;\n        }\n\n        d = e >>> 3;\n\n        if (e >>> 0 < 256) {\n          a = b[h + 8 >> 2] | 0;\n          c = b[h + 12 >> 2] | 0;\n\n          if ((c | 0) == (a | 0)) {\n            b[5857] = b[5857] & ~(1 << d);\n            i = h;\n            c = g;\n            break;\n          } else {\n            b[a + 12 >> 2] = c;\n            b[c + 8 >> 2] = a;\n            i = h;\n            c = g;\n            break;\n          }\n        }\n\n        f = b[h + 24 >> 2] | 0;\n        a = b[h + 12 >> 2] | 0;\n\n        do { if ((a | 0) == (h | 0)) {\n          c = h + 16 | 0;\n          d = c + 4 | 0;\n          a = b[d >> 2] | 0;\n\n          if (!a) {\n            a = b[c >> 2] | 0;\n\n            if (!a) {\n              a = 0;\n              break;\n            }\n          } else { c = d; }\n\n          while (1) {\n            e = a + 20 | 0;\n            d = b[e >> 2] | 0;\n\n            if (!d) {\n              e = a + 16 | 0;\n              d = b[e >> 2] | 0;\n              if (!d) { break; }else {\n                a = d;\n                c = e;\n              }\n            } else {\n              a = d;\n              c = e;\n            }\n          }\n\n          b[c >> 2] = 0;\n        } else {\n          i = b[h + 8 >> 2] | 0;\n          b[i + 12 >> 2] = a;\n          b[a + 8 >> 2] = i;\n        } } while (0);\n\n        if (f) {\n          c = b[h + 28 >> 2] | 0;\n          d = 23732 + (c << 2) | 0;\n\n          if ((b[d >> 2] | 0) == (h | 0)) {\n            b[d >> 2] = a;\n\n            if (!a) {\n              b[5858] = b[5858] & ~(1 << c);\n              i = h;\n              c = g;\n              break;\n            }\n          } else {\n            i = f + 16 | 0;\n            b[((b[i >> 2] | 0) == (h | 0) ? i : f + 20 | 0) >> 2] = a;\n\n            if (!a) {\n              i = h;\n              c = g;\n              break;\n            }\n          }\n\n          b[a + 24 >> 2] = f;\n          c = h + 16 | 0;\n          d = b[c >> 2] | 0;\n\n          if (d | 0) {\n            b[a + 16 >> 2] = d;\n            b[d + 24 >> 2] = a;\n          }\n\n          c = b[c + 4 >> 2] | 0;\n\n          if (c) {\n            b[a + 20 >> 2] = c;\n            b[c + 24 >> 2] = a;\n            i = h;\n            c = g;\n          } else {\n            i = h;\n            c = g;\n          }\n        } else {\n          i = h;\n          c = g;\n        }\n      } else {\n        i = d;\n        h = d;\n      } } while (0);\n\n      if (h >>> 0 >= j >>> 0) { return; }\n      a = j + 4 | 0;\n      e = b[a >> 2] | 0;\n      if (!(e & 1)) { return; }\n\n      if (!(e & 2)) {\n        if ((b[5863] | 0) == (j | 0)) {\n          j = (b[5860] | 0) + c | 0;\n          b[5860] = j;\n          b[5863] = i;\n          b[i + 4 >> 2] = j | 1;\n          if ((i | 0) != (b[5862] | 0)) { return; }\n          b[5862] = 0;\n          b[5859] = 0;\n          return;\n        }\n\n        if ((b[5862] | 0) == (j | 0)) {\n          j = (b[5859] | 0) + c | 0;\n          b[5859] = j;\n          b[5862] = h;\n          b[i + 4 >> 2] = j | 1;\n          b[h + j >> 2] = j;\n          return;\n        }\n\n        f = (e & -8) + c | 0;\n        d = e >>> 3;\n\n        do { if (e >>> 0 < 256) {\n          c = b[j + 8 >> 2] | 0;\n          a = b[j + 12 >> 2] | 0;\n\n          if ((a | 0) == (c | 0)) {\n            b[5857] = b[5857] & ~(1 << d);\n            break;\n          } else {\n            b[c + 12 >> 2] = a;\n            b[a + 8 >> 2] = c;\n            break;\n          }\n        } else {\n          g = b[j + 24 >> 2] | 0;\n          a = b[j + 12 >> 2] | 0;\n\n          do { if ((a | 0) == (j | 0)) {\n            c = j + 16 | 0;\n            d = c + 4 | 0;\n            a = b[d >> 2] | 0;\n\n            if (!a) {\n              a = b[c >> 2] | 0;\n\n              if (!a) {\n                d = 0;\n                break;\n              }\n            } else { c = d; }\n\n            while (1) {\n              e = a + 20 | 0;\n              d = b[e >> 2] | 0;\n\n              if (!d) {\n                e = a + 16 | 0;\n                d = b[e >> 2] | 0;\n                if (!d) { break; }else {\n                  a = d;\n                  c = e;\n                }\n              } else {\n                a = d;\n                c = e;\n              }\n            }\n\n            b[c >> 2] = 0;\n            d = a;\n          } else {\n            d = b[j + 8 >> 2] | 0;\n            b[d + 12 >> 2] = a;\n            b[a + 8 >> 2] = d;\n            d = a;\n          } } while (0);\n\n          if (g | 0) {\n            a = b[j + 28 >> 2] | 0;\n            c = 23732 + (a << 2) | 0;\n\n            if ((b[c >> 2] | 0) == (j | 0)) {\n              b[c >> 2] = d;\n\n              if (!d) {\n                b[5858] = b[5858] & ~(1 << a);\n                break;\n              }\n            } else {\n              e = g + 16 | 0;\n              b[((b[e >> 2] | 0) == (j | 0) ? e : g + 20 | 0) >> 2] = d;\n              if (!d) { break; }\n            }\n\n            b[d + 24 >> 2] = g;\n            a = j + 16 | 0;\n            c = b[a >> 2] | 0;\n\n            if (c | 0) {\n              b[d + 16 >> 2] = c;\n              b[c + 24 >> 2] = d;\n            }\n\n            a = b[a + 4 >> 2] | 0;\n\n            if (a | 0) {\n              b[d + 20 >> 2] = a;\n              b[a + 24 >> 2] = d;\n            }\n          }\n        } } while (0);\n\n        b[i + 4 >> 2] = f | 1;\n        b[h + f >> 2] = f;\n\n        if ((i | 0) == (b[5862] | 0)) {\n          b[5859] = f;\n          return;\n        }\n      } else {\n        b[a >> 2] = e & -2;\n        b[i + 4 >> 2] = c | 1;\n        b[h + c >> 2] = c;\n        f = c;\n      }\n\n      a = f >>> 3;\n\n      if (f >>> 0 < 256) {\n        d = 23468 + (a << 1 << 2) | 0;\n        c = b[5857] | 0;\n        a = 1 << a;\n\n        if (!(c & a)) {\n          b[5857] = c | a;\n          a = d;\n          c = d + 8 | 0;\n        } else {\n          c = d + 8 | 0;\n          a = b[c >> 2] | 0;\n        }\n\n        b[c >> 2] = i;\n        b[a + 12 >> 2] = i;\n        b[i + 8 >> 2] = a;\n        b[i + 12 >> 2] = d;\n        return;\n      }\n\n      a = f >>> 8;\n      if (a) {\n        if (f >>> 0 > 16777215) { e = 31; }else {\n          h = (a + 1048320 | 0) >>> 16 & 8;\n          j = a << h;\n          g = (j + 520192 | 0) >>> 16 & 4;\n          j = j << g;\n          e = (j + 245760 | 0) >>> 16 & 2;\n          e = 14 - (g | h | e) + (j << e >>> 15) | 0;\n          e = f >>> (e + 7 | 0) & 1 | e << 1;\n        }\n      } else { e = 0; }\n      a = 23732 + (e << 2) | 0;\n      b[i + 28 >> 2] = e;\n      b[i + 20 >> 2] = 0;\n      b[i + 16 >> 2] = 0;\n      c = b[5858] | 0;\n      d = 1 << e;\n\n      a: do { if (!(c & d)) {\n        b[5858] = c | d;\n        b[a >> 2] = i;\n        b[i + 24 >> 2] = a;\n        b[i + 12 >> 2] = i;\n        b[i + 8 >> 2] = i;\n      } else {\n        a = b[a >> 2] | 0;\n\n        b: do { if ((b[a + 4 >> 2] & -8 | 0) != (f | 0)) {\n          e = f << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);\n\n          while (1) {\n            d = a + 16 + (e >>> 31 << 2) | 0;\n            c = b[d >> 2] | 0;\n            if (!c) { break; }\n\n            if ((b[c + 4 >> 2] & -8 | 0) == (f | 0)) {\n              a = c;\n              break b;\n            } else {\n              e = e << 1;\n              a = c;\n            }\n          }\n\n          b[d >> 2] = i;\n          b[i + 24 >> 2] = a;\n          b[i + 12 >> 2] = i;\n          b[i + 8 >> 2] = i;\n          break a;\n        } } while (0);\n\n        h = a + 8 | 0;\n        j = b[h >> 2] | 0;\n        b[j + 12 >> 2] = i;\n        b[h >> 2] = i;\n        b[i + 8 >> 2] = j;\n        b[i + 12 >> 2] = a;\n        b[i + 24 >> 2] = 0;\n      } } while (0);\n\n      j = (b[5865] | 0) + -1 | 0;\n      b[5865] = j;\n      if (j | 0) { return; }\n      a = 23884;\n\n      while (1) {\n        a = b[a >> 2] | 0;\n        if (!a) { break; }else { a = a + 8 | 0; }\n      }\n\n      b[5865] = -1;\n      return;\n    }\n\n    function kd(a, c) {\n      a = a | 0;\n      c = c | 0;\n      var d = 0;\n\n      if (a) {\n        d = B(c, a) | 0;\n        if ((c | a) >>> 0 > 65535) { d = ((d >>> 0) / (a >>> 0) | 0 | 0) == (c | 0) ? d : -1; }\n      } else { d = 0; }\n\n      a = id(d) | 0;\n      if (!a) { return a | 0; }\n      if (!(b[a + -4 >> 2] & 3)) { return a | 0; }\n      Bd(a | 0, 0, d | 0) | 0;\n      return a | 0;\n    }\n\n    function ld(a, b, c, d) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      c = a + c >>> 0;\n      return (G(b + d + (c >>> 0 < a >>> 0 | 0) >>> 0 | 0), c | 0) | 0;\n    }\n\n    function md(a, b, c, d) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      d = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;\n      return (G(d | 0), a - c >>> 0 | 0) | 0;\n    }\n\n    function nd(a) {\n      a = a | 0;\n      return (a ? 31 - (E(a ^ a - 1) | 0) | 0 : 32) | 0;\n    }\n\n    function od(a, c, d, e, f) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      f = f | 0;\n      var g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0,\n          l = 0,\n          m = 0,\n          n = 0,\n          o = 0,\n          p = 0;\n      l = a;\n      j = c;\n      k = j;\n      h = d;\n      n = e;\n      i = n;\n\n      if (!k) {\n        g = (f | 0) != 0;\n\n        if (!i) {\n          if (g) {\n            b[f >> 2] = (l >>> 0) % (h >>> 0);\n            b[f + 4 >> 2] = 0;\n          }\n\n          n = 0;\n          f = (l >>> 0) / (h >>> 0) >>> 0;\n          return (G(n | 0), f) | 0;\n        } else {\n          if (!g) {\n            n = 0;\n            f = 0;\n            return (G(n | 0), f) | 0;\n          }\n\n          b[f >> 2] = a | 0;\n          b[f + 4 >> 2] = c & 0;\n          n = 0;\n          f = 0;\n          return (G(n | 0), f) | 0;\n        }\n      }\n\n      g = (i | 0) == 0;\n\n      do { if (h) {\n        if (!g) {\n          g = (E(i | 0) | 0) - (E(k | 0) | 0) | 0;\n\n          if (g >>> 0 <= 31) {\n            m = g + 1 | 0;\n            i = 31 - g | 0;\n            c = g - 31 >> 31;\n            h = m;\n            a = l >>> (m >>> 0) & c | k << i;\n            c = k >>> (m >>> 0) & c;\n            g = 0;\n            i = l << i;\n            break;\n          }\n\n          if (!f) {\n            n = 0;\n            f = 0;\n            return (G(n | 0), f) | 0;\n          }\n\n          b[f >> 2] = a | 0;\n          b[f + 4 >> 2] = j | c & 0;\n          n = 0;\n          f = 0;\n          return (G(n | 0), f) | 0;\n        }\n\n        g = h - 1 | 0;\n\n        if (g & h | 0) {\n          i = (E(h | 0) | 0) + 33 - (E(k | 0) | 0) | 0;\n          p = 64 - i | 0;\n          m = 32 - i | 0;\n          j = m >> 31;\n          o = i - 32 | 0;\n          c = o >> 31;\n          h = i;\n          a = m - 1 >> 31 & k >>> (o >>> 0) | (k << m | l >>> (i >>> 0)) & c;\n          c = c & k >>> (i >>> 0);\n          g = l << p & j;\n          i = (k << p | l >>> (o >>> 0)) & j | l << m & i - 33 >> 31;\n          break;\n        }\n\n        if (f | 0) {\n          b[f >> 2] = g & l;\n          b[f + 4 >> 2] = 0;\n        }\n\n        if ((h | 0) == 1) {\n          o = j | c & 0;\n          p = a | 0 | 0;\n          return (G(o | 0), p) | 0;\n        } else {\n          p = nd(h | 0) | 0;\n          o = k >>> (p >>> 0) | 0;\n          p = k << 32 - p | l >>> (p >>> 0) | 0;\n          return (G(o | 0), p) | 0;\n        }\n      } else {\n        if (g) {\n          if (f | 0) {\n            b[f >> 2] = (k >>> 0) % (h >>> 0);\n            b[f + 4 >> 2] = 0;\n          }\n\n          o = 0;\n          p = (k >>> 0) / (h >>> 0) >>> 0;\n          return (G(o | 0), p) | 0;\n        }\n\n        if (!l) {\n          if (f | 0) {\n            b[f >> 2] = 0;\n            b[f + 4 >> 2] = (k >>> 0) % (i >>> 0);\n          }\n\n          o = 0;\n          p = (k >>> 0) / (i >>> 0) >>> 0;\n          return (G(o | 0), p) | 0;\n        }\n\n        g = i - 1 | 0;\n\n        if (!(g & i)) {\n          if (f | 0) {\n            b[f >> 2] = a | 0;\n            b[f + 4 >> 2] = g & k | c & 0;\n          }\n\n          o = 0;\n          p = k >>> ((nd(i | 0) | 0) >>> 0);\n          return (G(o | 0), p) | 0;\n        }\n\n        g = (E(i | 0) | 0) - (E(k | 0) | 0) | 0;\n\n        if (g >>> 0 <= 30) {\n          c = g + 1 | 0;\n          i = 31 - g | 0;\n          h = c;\n          a = k << i | l >>> (c >>> 0);\n          c = k >>> (c >>> 0);\n          g = 0;\n          i = l << i;\n          break;\n        }\n\n        if (!f) {\n          o = 0;\n          p = 0;\n          return (G(o | 0), p) | 0;\n        }\n\n        b[f >> 2] = a | 0;\n        b[f + 4 >> 2] = j | c & 0;\n        o = 0;\n        p = 0;\n        return (G(o | 0), p) | 0;\n      } } while (0);\n\n      if (!h) {\n        k = i;\n        j = 0;\n        i = 0;\n      } else {\n        m = d | 0 | 0;\n        l = n | e & 0;\n        k = ld(m | 0, l | 0, -1, -1) | 0;\n        d = H() | 0;\n        j = i;\n        i = 0;\n\n        do {\n          e = j;\n          j = g >>> 31 | j << 1;\n          g = i | g << 1;\n          e = a << 1 | e >>> 31 | 0;\n          n = a >>> 31 | c << 1 | 0;\n          md(k | 0, d | 0, e | 0, n | 0) | 0;\n          p = H() | 0;\n          o = p >> 31 | ((p | 0) < 0 ? -1 : 0) << 1;\n          i = o & 1;\n          a = md(e | 0, n | 0, o & m | 0, (((p | 0) < 0 ? -1 : 0) >> 31 | ((p | 0) < 0 ? -1 : 0) << 1) & l | 0) | 0;\n          c = H() | 0;\n          h = h - 1 | 0;\n        } while ((h | 0) != 0);\n\n        k = j;\n        j = 0;\n      }\n\n      h = 0;\n\n      if (f | 0) {\n        b[f >> 2] = a;\n        b[f + 4 >> 2] = c;\n      }\n\n      o = (g | 0) >>> 31 | (k | h) << 1 | (h << 1 | g >>> 31) & 0 | j;\n      p = (g << 1 | 0 >>> 31) & -2 | i;\n      return (G(o | 0), p) | 0;\n    }\n\n    function pd(a, b, c, d) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0;\n      j = b >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;\n      i = ((b | 0) < 0 ? -1 : 0) >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;\n      f = d >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;\n      e = ((d | 0) < 0 ? -1 : 0) >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;\n      h = md(j ^ a | 0, i ^ b | 0, j | 0, i | 0) | 0;\n      g = H() | 0;\n      a = f ^ j;\n      b = e ^ i;\n      return md((od(h, g, md(f ^ c | 0, e ^ d | 0, f | 0, e | 0) | 0, H() | 0, 0) | 0) ^ a | 0, (H() | 0) ^ b | 0, a | 0, b | 0) | 0;\n    }\n\n    function qd(a, b) {\n      a = a | 0;\n      b = b | 0;\n      var c = 0,\n          d = 0,\n          e = 0,\n          f = 0;\n      f = a & 65535;\n      e = b & 65535;\n      c = B(e, f) | 0;\n      d = a >>> 16;\n      a = (c >>> 16) + (B(e, d) | 0) | 0;\n      e = b >>> 16;\n      b = B(e, f) | 0;\n      return (G((a >>> 16) + (B(e, d) | 0) + (((a & 65535) + b | 0) >>> 16) | 0), a + b << 16 | c & 65535 | 0) | 0;\n    }\n\n    function rd(a, b, c, d) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n      d = d | 0;\n      var e = 0,\n          f = 0;\n      e = a;\n      f = c;\n      c = qd(e, f) | 0;\n      a = H() | 0;\n      return (G((B(b, f) | 0) + (B(d, e) | 0) + a | a & 0 | 0), c | 0 | 0) | 0;\n    }\n\n    function sd(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0,\n          j = 0,\n          k = 0;\n      f = T;\n      T = T + 16 | 0;\n      i = f | 0;\n      h = c >> 31 | ((c | 0) < 0 ? -1 : 0) << 1;\n      g = ((c | 0) < 0 ? -1 : 0) >> 31 | ((c | 0) < 0 ? -1 : 0) << 1;\n      k = e >> 31 | ((e | 0) < 0 ? -1 : 0) << 1;\n      j = ((e | 0) < 0 ? -1 : 0) >> 31 | ((e | 0) < 0 ? -1 : 0) << 1;\n      a = md(h ^ a | 0, g ^ c | 0, h | 0, g | 0) | 0;\n      c = H() | 0;\n      od(a, c, md(k ^ d | 0, j ^ e | 0, k | 0, j | 0) | 0, H() | 0, i) | 0;\n      e = md(b[i >> 2] ^ h | 0, b[i + 4 >> 2] ^ g | 0, h | 0, g | 0) | 0;\n      d = H() | 0;\n      T = f;\n      return (G(d | 0), e) | 0;\n    }\n\n    function td(a, c, d, e) {\n      a = a | 0;\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0;\n      g = T;\n      T = T + 16 | 0;\n      f = g | 0;\n      od(a, c, d, e, f) | 0;\n      T = g;\n      return (G(b[f + 4 >> 2] | 0), b[f >> 2] | 0) | 0;\n    }\n\n    function ud(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n\n      if ((c | 0) < 32) {\n        G(b >> c | 0);\n        return a >>> c | (b & (1 << c) - 1) << 32 - c;\n      }\n\n      G(((b | 0) < 0 ? -1 : 0) | 0);\n      return b >> c - 32 | 0;\n    }\n\n    function vd(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n\n      if ((c | 0) < 32) {\n        G(b >>> c | 0);\n        return a >>> c | (b & (1 << c) - 1) << 32 - c;\n      }\n\n      G(0);\n      return b >>> c - 32 | 0;\n    }\n\n    function wd(a, b, c) {\n      a = a | 0;\n      b = b | 0;\n      c = c | 0;\n\n      if ((c | 0) < 32) {\n        G(b << c | (a & (1 << c) - 1 << 32 - c) >>> 32 - c | 0);\n        return a << c;\n      }\n\n      G(a << c - 32 | 0);\n      return 0;\n    }\n\n    function xd(a, b) {\n      a = +a;\n      b = +b;\n      if (a != a) { return +b; }\n      if (b != b) { return +a; }\n      return +D(+a, +b);\n    }\n\n    function yd(a, b) {\n      a = +a;\n      b = +b;\n      if (a != a) { return +b; }\n      if (b != b) { return +a; }\n      return +C(+a, +b);\n    }\n\n    function zd(a) {\n      a = +a;\n      return a >= 0.0 ? +p(a + .5) : +A(a - .5);\n    }\n\n    function Ad(c, d, e) {\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0;\n\n      if ((e | 0) >= 8192) {\n        L(c | 0, d | 0, e | 0) | 0;\n        return c | 0;\n      }\n\n      h = c | 0;\n      g = c + e | 0;\n\n      if ((c & 3) == (d & 3)) {\n        while (c & 3) {\n          if (!e) { return h | 0; }\n          a[c >> 0] = a[d >> 0] | 0;\n          c = c + 1 | 0;\n          d = d + 1 | 0;\n          e = e - 1 | 0;\n        }\n\n        e = g & -4 | 0;\n        f = e - 64 | 0;\n\n        while ((c | 0) <= (f | 0)) {\n          b[c >> 2] = b[d >> 2];\n          b[c + 4 >> 2] = b[d + 4 >> 2];\n          b[c + 8 >> 2] = b[d + 8 >> 2];\n          b[c + 12 >> 2] = b[d + 12 >> 2];\n          b[c + 16 >> 2] = b[d + 16 >> 2];\n          b[c + 20 >> 2] = b[d + 20 >> 2];\n          b[c + 24 >> 2] = b[d + 24 >> 2];\n          b[c + 28 >> 2] = b[d + 28 >> 2];\n          b[c + 32 >> 2] = b[d + 32 >> 2];\n          b[c + 36 >> 2] = b[d + 36 >> 2];\n          b[c + 40 >> 2] = b[d + 40 >> 2];\n          b[c + 44 >> 2] = b[d + 44 >> 2];\n          b[c + 48 >> 2] = b[d + 48 >> 2];\n          b[c + 52 >> 2] = b[d + 52 >> 2];\n          b[c + 56 >> 2] = b[d + 56 >> 2];\n          b[c + 60 >> 2] = b[d + 60 >> 2];\n          c = c + 64 | 0;\n          d = d + 64 | 0;\n        }\n\n        while ((c | 0) < (e | 0)) {\n          b[c >> 2] = b[d >> 2];\n          c = c + 4 | 0;\n          d = d + 4 | 0;\n        }\n      } else {\n        e = g - 4 | 0;\n\n        while ((c | 0) < (e | 0)) {\n          a[c >> 0] = a[d >> 0] | 0;\n          a[c + 1 >> 0] = a[d + 1 >> 0] | 0;\n          a[c + 2 >> 0] = a[d + 2 >> 0] | 0;\n          a[c + 3 >> 0] = a[d + 3 >> 0] | 0;\n          c = c + 4 | 0;\n          d = d + 4 | 0;\n        }\n      }\n\n      while ((c | 0) < (g | 0)) {\n        a[c >> 0] = a[d >> 0] | 0;\n        c = c + 1 | 0;\n        d = d + 1 | 0;\n      }\n\n      return h | 0;\n    }\n\n    function Bd(c, d, e) {\n      c = c | 0;\n      d = d | 0;\n      e = e | 0;\n      var f = 0,\n          g = 0,\n          h = 0,\n          i = 0;\n      h = c + e | 0;\n      d = d & 255;\n\n      if ((e | 0) >= 67) {\n        while (c & 3) {\n          a[c >> 0] = d;\n          c = c + 1 | 0;\n        }\n\n        f = h & -4 | 0;\n        i = d | d << 8 | d << 16 | d << 24;\n        g = f - 64 | 0;\n\n        while ((c | 0) <= (g | 0)) {\n          b[c >> 2] = i;\n          b[c + 4 >> 2] = i;\n          b[c + 8 >> 2] = i;\n          b[c + 12 >> 2] = i;\n          b[c + 16 >> 2] = i;\n          b[c + 20 >> 2] = i;\n          b[c + 24 >> 2] = i;\n          b[c + 28 >> 2] = i;\n          b[c + 32 >> 2] = i;\n          b[c + 36 >> 2] = i;\n          b[c + 40 >> 2] = i;\n          b[c + 44 >> 2] = i;\n          b[c + 48 >> 2] = i;\n          b[c + 52 >> 2] = i;\n          b[c + 56 >> 2] = i;\n          b[c + 60 >> 2] = i;\n          c = c + 64 | 0;\n        }\n\n        while ((c | 0) < (f | 0)) {\n          b[c >> 2] = i;\n          c = c + 4 | 0;\n        }\n      }\n\n      while ((c | 0) < (h | 0)) {\n        a[c >> 0] = d;\n        c = c + 1 | 0;\n      }\n\n      return h - e | 0;\n    }\n\n    function Cd(a) {\n      a = +a;\n      return a >= 0.0 ? +p(a + .5) : +A(a - .5);\n    }\n\n    function Dd(a) {\n      a = a | 0;\n      var c = 0,\n          d = 0,\n          e = 0;\n      e = K() | 0;\n      d = b[g >> 2] | 0;\n      c = d + a | 0;\n\n      if ((a | 0) > 0 & (c | 0) < (d | 0) | (c | 0) < 0) {\n        N(c | 0) | 0;\n        J(12);\n        return -1;\n      }\n\n      if ((c | 0) > (e | 0)) { if (!(M(c | 0) | 0)) {\n        J(12);\n        return -1;\n      } }\n      b[g >> 2] = c;\n      return d | 0;\n    } // EMSCRIPTEN_END_FUNCS\n\n\n    return {\n      ___divdi3: pd,\n      ___muldi3: rd,\n      ___remdi3: sd,\n      ___uremdi3: td,\n      _areNeighborCells: $a,\n      _bitshift64Ashr: ud,\n      _bitshift64Lshr: vd,\n      _bitshift64Shl: wd,\n      _calloc: kd,\n      _cellAreaKm2: lc,\n      _cellAreaM2: mc,\n      _cellAreaRads2: kc,\n      _cellToBoundary: Qb,\n      _cellToCenterChild: Ab,\n      _cellToChildPos: Vb,\n      _cellToChildren: yb,\n      _cellToChildrenSize: wb,\n      _cellToLatLng: Pb,\n      _cellToLocalIj: xc,\n      _cellToParent: vb,\n      _cellToVertex: Wc,\n      _cellToVertexes: Xc,\n      _cellsToDirectedEdge: ab,\n      _cellsToLinkedMultiPolygon: la,\n      _childPosToCell: Wb,\n      _compactCells: Bb,\n      _destroyLinkedMultiPolygon: sc,\n      _directedEdgeToBoundary: gb,\n      _directedEdgeToCells: eb,\n      _edgeLengthKm: oc,\n      _edgeLengthM: pc,\n      _edgeLengthRads: nc,\n      _emscripten_replace_memory: W,\n      _free: jd,\n      _getBaseCellNumber: tb,\n      _getDirectedEdgeDestination: cb,\n      _getDirectedEdgeOrigin: bb,\n      _getHexagonAreaAvgKm2: ec,\n      _getHexagonAreaAvgM2: fc,\n      _getHexagonEdgeLengthAvgKm: gc,\n      _getHexagonEdgeLengthAvgM: hc,\n      _getIcosahedronFaces: Sb,\n      _getNumCells: ic,\n      _getPentagons: Ub,\n      _getRes0Cells: wa,\n      _getResolution: sb,\n      _greatCircleDistanceKm: ac,\n      _greatCircleDistanceM: bc,\n      _greatCircleDistanceRads: $b,\n      _gridDisk: aa,\n      _gridDiskDistances: ba,\n      _gridDistance: zc,\n      _gridPathCells: Bc,\n      _gridPathCellsSize: Ac,\n      _gridRingUnsafe: ga,\n      _i64Add: ld,\n      _i64Subtract: md,\n      _isPentagon: xb,\n      _isResClassIII: Eb,\n      _isValidCell: ub,\n      _isValidDirectedEdge: db,\n      _isValidVertex: Zc,\n      _latLngToCell: Mb,\n      _llvm_maxnum_f64: xd,\n      _llvm_minnum_f64: yd,\n      _llvm_round_f64: zd,\n      _localIjToCell: yc,\n      _malloc: id,\n      _maxFaceCount: Rb,\n      _maxGridDiskSize: $,\n      _maxPolygonToCellsSize: ha,\n      _memcpy: Ad,\n      _memset: Bd,\n      _originToDirectedEdges: fb,\n      _pentagonCount: Tb,\n      _polygonToCells: ja,\n      _readInt64AsDoubleFromPointer: Oc,\n      _res0CellCount: va,\n      _round: Cd,\n      _sbrk: Dd,\n      _sizeOfCellBoundary: Jc,\n      _sizeOfCoordIJ: Nc,\n      _sizeOfGeoLoop: Kc,\n      _sizeOfGeoPolygon: Lc,\n      _sizeOfH3Index: Hc,\n      _sizeOfLatLng: Ic,\n      _sizeOfLinkedGeoPolygon: Mc,\n      _uncompactCells: Cb,\n      _uncompactCellsSize: Db,\n      _vertexToLatLng: Yc,\n      establishStackSpace: _,\n      stackAlloc: X,\n      stackRestore: Z,\n      stackSave: Y\n    };\n  }( // EMSCRIPTEN_END_ASM\n  asmGlobalArg, asmLibraryArg, buffer);\n\n  var ___divdi3 = Module[\"___divdi3\"] = asm[\"___divdi3\"];\n\n  var ___muldi3 = Module[\"___muldi3\"] = asm[\"___muldi3\"];\n\n  var ___remdi3 = Module[\"___remdi3\"] = asm[\"___remdi3\"];\n\n  var ___uremdi3 = Module[\"___uremdi3\"] = asm[\"___uremdi3\"];\n\n  var _areNeighborCells = Module[\"_areNeighborCells\"] = asm[\"_areNeighborCells\"];\n\n  var _bitshift64Ashr = Module[\"_bitshift64Ashr\"] = asm[\"_bitshift64Ashr\"];\n\n  var _bitshift64Lshr = Module[\"_bitshift64Lshr\"] = asm[\"_bitshift64Lshr\"];\n\n  var _bitshift64Shl = Module[\"_bitshift64Shl\"] = asm[\"_bitshift64Shl\"];\n\n  var _calloc = Module[\"_calloc\"] = asm[\"_calloc\"];\n\n  var _cellAreaKm2 = Module[\"_cellAreaKm2\"] = asm[\"_cellAreaKm2\"];\n\n  var _cellAreaM2 = Module[\"_cellAreaM2\"] = asm[\"_cellAreaM2\"];\n\n  var _cellAreaRads2 = Module[\"_cellAreaRads2\"] = asm[\"_cellAreaRads2\"];\n\n  var _cellToBoundary = Module[\"_cellToBoundary\"] = asm[\"_cellToBoundary\"];\n\n  var _cellToCenterChild = Module[\"_cellToCenterChild\"] = asm[\"_cellToCenterChild\"];\n\n  var _cellToChildPos = Module[\"_cellToChildPos\"] = asm[\"_cellToChildPos\"];\n\n  var _cellToChildren = Module[\"_cellToChildren\"] = asm[\"_cellToChildren\"];\n\n  var _cellToChildrenSize = Module[\"_cellToChildrenSize\"] = asm[\"_cellToChildrenSize\"];\n\n  var _cellToLatLng = Module[\"_cellToLatLng\"] = asm[\"_cellToLatLng\"];\n\n  var _cellToLocalIj = Module[\"_cellToLocalIj\"] = asm[\"_cellToLocalIj\"];\n\n  var _cellToParent = Module[\"_cellToParent\"] = asm[\"_cellToParent\"];\n\n  var _cellToVertex = Module[\"_cellToVertex\"] = asm[\"_cellToVertex\"];\n\n  var _cellToVertexes = Module[\"_cellToVertexes\"] = asm[\"_cellToVertexes\"];\n\n  var _cellsToDirectedEdge = Module[\"_cellsToDirectedEdge\"] = asm[\"_cellsToDirectedEdge\"];\n\n  var _cellsToLinkedMultiPolygon = Module[\"_cellsToLinkedMultiPolygon\"] = asm[\"_cellsToLinkedMultiPolygon\"];\n\n  var _childPosToCell = Module[\"_childPosToCell\"] = asm[\"_childPosToCell\"];\n\n  var _compactCells = Module[\"_compactCells\"] = asm[\"_compactCells\"];\n\n  var _destroyLinkedMultiPolygon = Module[\"_destroyLinkedMultiPolygon\"] = asm[\"_destroyLinkedMultiPolygon\"];\n\n  var _directedEdgeToBoundary = Module[\"_directedEdgeToBoundary\"] = asm[\"_directedEdgeToBoundary\"];\n\n  var _directedEdgeToCells = Module[\"_directedEdgeToCells\"] = asm[\"_directedEdgeToCells\"];\n\n  var _edgeLengthKm = Module[\"_edgeLengthKm\"] = asm[\"_edgeLengthKm\"];\n\n  var _edgeLengthM = Module[\"_edgeLengthM\"] = asm[\"_edgeLengthM\"];\n\n  var _edgeLengthRads = Module[\"_edgeLengthRads\"] = asm[\"_edgeLengthRads\"];\n\n  var _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = asm[\"_emscripten_replace_memory\"];\n\n  var _free = Module[\"_free\"] = asm[\"_free\"];\n\n  var _getBaseCellNumber = Module[\"_getBaseCellNumber\"] = asm[\"_getBaseCellNumber\"];\n\n  var _getDirectedEdgeDestination = Module[\"_getDirectedEdgeDestination\"] = asm[\"_getDirectedEdgeDestination\"];\n\n  var _getDirectedEdgeOrigin = Module[\"_getDirectedEdgeOrigin\"] = asm[\"_getDirectedEdgeOrigin\"];\n\n  var _getHexagonAreaAvgKm2 = Module[\"_getHexagonAreaAvgKm2\"] = asm[\"_getHexagonAreaAvgKm2\"];\n\n  var _getHexagonAreaAvgM2 = Module[\"_getHexagonAreaAvgM2\"] = asm[\"_getHexagonAreaAvgM2\"];\n\n  var _getHexagonEdgeLengthAvgKm = Module[\"_getHexagonEdgeLengthAvgKm\"] = asm[\"_getHexagonEdgeLengthAvgKm\"];\n\n  var _getHexagonEdgeLengthAvgM = Module[\"_getHexagonEdgeLengthAvgM\"] = asm[\"_getHexagonEdgeLengthAvgM\"];\n\n  var _getIcosahedronFaces = Module[\"_getIcosahedronFaces\"] = asm[\"_getIcosahedronFaces\"];\n\n  var _getNumCells = Module[\"_getNumCells\"] = asm[\"_getNumCells\"];\n\n  var _getPentagons = Module[\"_getPentagons\"] = asm[\"_getPentagons\"];\n\n  var _getRes0Cells = Module[\"_getRes0Cells\"] = asm[\"_getRes0Cells\"];\n\n  var _getResolution = Module[\"_getResolution\"] = asm[\"_getResolution\"];\n\n  var _greatCircleDistanceKm = Module[\"_greatCircleDistanceKm\"] = asm[\"_greatCircleDistanceKm\"];\n\n  var _greatCircleDistanceM = Module[\"_greatCircleDistanceM\"] = asm[\"_greatCircleDistanceM\"];\n\n  var _greatCircleDistanceRads = Module[\"_greatCircleDistanceRads\"] = asm[\"_greatCircleDistanceRads\"];\n\n  var _gridDisk = Module[\"_gridDisk\"] = asm[\"_gridDisk\"];\n\n  var _gridDiskDistances = Module[\"_gridDiskDistances\"] = asm[\"_gridDiskDistances\"];\n\n  var _gridDistance = Module[\"_gridDistance\"] = asm[\"_gridDistance\"];\n\n  var _gridPathCells = Module[\"_gridPathCells\"] = asm[\"_gridPathCells\"];\n\n  var _gridPathCellsSize = Module[\"_gridPathCellsSize\"] = asm[\"_gridPathCellsSize\"];\n\n  var _gridRingUnsafe = Module[\"_gridRingUnsafe\"] = asm[\"_gridRingUnsafe\"];\n\n  var _i64Add = Module[\"_i64Add\"] = asm[\"_i64Add\"];\n\n  var _i64Subtract = Module[\"_i64Subtract\"] = asm[\"_i64Subtract\"];\n\n  var _isPentagon = Module[\"_isPentagon\"] = asm[\"_isPentagon\"];\n\n  var _isResClassIII = Module[\"_isResClassIII\"] = asm[\"_isResClassIII\"];\n\n  var _isValidCell = Module[\"_isValidCell\"] = asm[\"_isValidCell\"];\n\n  var _isValidDirectedEdge = Module[\"_isValidDirectedEdge\"] = asm[\"_isValidDirectedEdge\"];\n\n  var _isValidVertex = Module[\"_isValidVertex\"] = asm[\"_isValidVertex\"];\n\n  var _latLngToCell = Module[\"_latLngToCell\"] = asm[\"_latLngToCell\"];\n\n  var _llvm_maxnum_f64 = Module[\"_llvm_maxnum_f64\"] = asm[\"_llvm_maxnum_f64\"];\n\n  var _llvm_minnum_f64 = Module[\"_llvm_minnum_f64\"] = asm[\"_llvm_minnum_f64\"];\n\n  var _llvm_round_f64 = Module[\"_llvm_round_f64\"] = asm[\"_llvm_round_f64\"];\n\n  var _localIjToCell = Module[\"_localIjToCell\"] = asm[\"_localIjToCell\"];\n\n  var _malloc = Module[\"_malloc\"] = asm[\"_malloc\"];\n\n  var _maxFaceCount = Module[\"_maxFaceCount\"] = asm[\"_maxFaceCount\"];\n\n  var _maxGridDiskSize = Module[\"_maxGridDiskSize\"] = asm[\"_maxGridDiskSize\"];\n\n  var _maxPolygonToCellsSize = Module[\"_maxPolygonToCellsSize\"] = asm[\"_maxPolygonToCellsSize\"];\n\n  var _memcpy = Module[\"_memcpy\"] = asm[\"_memcpy\"];\n\n  var _memset = Module[\"_memset\"] = asm[\"_memset\"];\n\n  var _originToDirectedEdges = Module[\"_originToDirectedEdges\"] = asm[\"_originToDirectedEdges\"];\n\n  var _pentagonCount = Module[\"_pentagonCount\"] = asm[\"_pentagonCount\"];\n\n  var _polygonToCells = Module[\"_polygonToCells\"] = asm[\"_polygonToCells\"];\n\n  var _readInt64AsDoubleFromPointer = Module[\"_readInt64AsDoubleFromPointer\"] = asm[\"_readInt64AsDoubleFromPointer\"];\n\n  var _res0CellCount = Module[\"_res0CellCount\"] = asm[\"_res0CellCount\"];\n\n  var _round = Module[\"_round\"] = asm[\"_round\"];\n\n  var _sbrk = Module[\"_sbrk\"] = asm[\"_sbrk\"];\n\n  var _sizeOfCellBoundary = Module[\"_sizeOfCellBoundary\"] = asm[\"_sizeOfCellBoundary\"];\n\n  var _sizeOfCoordIJ = Module[\"_sizeOfCoordIJ\"] = asm[\"_sizeOfCoordIJ\"];\n\n  var _sizeOfGeoLoop = Module[\"_sizeOfGeoLoop\"] = asm[\"_sizeOfGeoLoop\"];\n\n  var _sizeOfGeoPolygon = Module[\"_sizeOfGeoPolygon\"] = asm[\"_sizeOfGeoPolygon\"];\n\n  var _sizeOfH3Index = Module[\"_sizeOfH3Index\"] = asm[\"_sizeOfH3Index\"];\n\n  var _sizeOfLatLng = Module[\"_sizeOfLatLng\"] = asm[\"_sizeOfLatLng\"];\n\n  var _sizeOfLinkedGeoPolygon = Module[\"_sizeOfLinkedGeoPolygon\"] = asm[\"_sizeOfLinkedGeoPolygon\"];\n\n  var _uncompactCells = Module[\"_uncompactCells\"] = asm[\"_uncompactCells\"];\n\n  var _uncompactCellsSize = Module[\"_uncompactCellsSize\"] = asm[\"_uncompactCellsSize\"];\n\n  var _vertexToLatLng = Module[\"_vertexToLatLng\"] = asm[\"_vertexToLatLng\"];\n\n  var establishStackSpace = Module[\"establishStackSpace\"] = asm[\"establishStackSpace\"];\n  var stackAlloc = Module[\"stackAlloc\"] = asm[\"stackAlloc\"];\n  var stackRestore = Module[\"stackRestore\"] = asm[\"stackRestore\"];\n  var stackSave = Module[\"stackSave\"] = asm[\"stackSave\"];\n  Module[\"asm\"] = asm;\n  Module[\"cwrap\"] = cwrap;\n  Module[\"setValue\"] = setValue;\n  Module[\"getValue\"] = getValue;\n\n  if (memoryInitializer) {\n    if (!isDataURI(memoryInitializer)) {\n      memoryInitializer = locateFile(memoryInitializer);\n    }\n\n    {\n      addRunDependency(\"memory initializer\");\n\n      var applyMemoryInitializer = function (data) {\n        if (data.byteLength) { data = new Uint8Array(data); }\n        HEAPU8.set(data, GLOBAL_BASE);\n        if (Module[\"memoryInitializerRequest\"]) { delete Module[\"memoryInitializerRequest\"].response; }\n        removeRunDependency(\"memory initializer\");\n      };\n\n      var doBrowserLoad = function () {\n        readAsync(memoryInitializer, applyMemoryInitializer, function () {\n          throw \"could not load memory initializer \" + memoryInitializer;\n        });\n      };\n\n      var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);\n\n      if (memoryInitializerBytes) {\n        applyMemoryInitializer(memoryInitializerBytes.buffer);\n      } else if (Module[\"memoryInitializerRequest\"]) {\n        var useRequest = function () {\n          var request = Module[\"memoryInitializerRequest\"];\n          var response = request.response;\n\n          if (request.status !== 200 && request.status !== 0) {\n            var data = tryParseAsDataURI(Module[\"memoryInitializerRequestURL\"]);\n\n            if (data) {\n              response = data.buffer;\n            } else {\n              console.warn(\"a problem seems to have happened with Module.memoryInitializerRequest, status: \" + request.status + \", retrying \" + memoryInitializer);\n              doBrowserLoad();\n              return;\n            }\n          }\n\n          applyMemoryInitializer(response);\n        };\n\n        if (Module[\"memoryInitializerRequest\"].response) {\n          setTimeout(useRequest, 0);\n        } else {\n          Module[\"memoryInitializerRequest\"].addEventListener(\"load\", useRequest);\n        }\n      } else {\n        doBrowserLoad();\n      }\n    }\n  }\n\n  var calledRun;\n\n  dependenciesFulfilled = function runCaller() {\n    if (!calledRun) { run(); }\n    if (!calledRun) { dependenciesFulfilled = runCaller; }\n  };\n\n  function run(args) {\n    args = args || arguments_;\n\n    if (runDependencies > 0) {\n      return;\n    }\n\n    preRun();\n    if (runDependencies > 0) { return; }\n\n    function doRun() {\n      if (calledRun) { return; }\n      calledRun = true;\n      if (ABORT) { return; }\n      initRuntime();\n      preMain();\n      if (Module[\"onRuntimeInitialized\"]) { Module[\"onRuntimeInitialized\"](); }\n      postRun();\n    }\n\n    if (Module[\"setStatus\"]) {\n      Module[\"setStatus\"](\"Running...\");\n      setTimeout(function () {\n        setTimeout(function () {\n          Module[\"setStatus\"](\"\");\n        }, 1);\n        doRun();\n      }, 1);\n    } else {\n      doRun();\n    }\n  }\n\n  Module[\"run\"] = run;\n\n  function abort(what) {\n    if (Module[\"onAbort\"]) {\n      Module[\"onAbort\"](what);\n    }\n\n    what += \"\";\n    out(what);\n    err(what);\n    ABORT = true;\n    throw \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n  }\n\n  Module[\"abort\"] = abort;\n\n  if (Module[\"preInit\"]) {\n    if (typeof Module[\"preInit\"] == \"function\") { Module[\"preInit\"] = [Module[\"preInit\"]]; }\n\n    while (Module[\"preInit\"].length > 0) {\n      Module[\"preInit\"].pop()();\n    }\n  }\n  run();\n  return libh3;\n}(typeof libh3 === 'object' ? libh3 : {});\n\n/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Define the C bindings for the h3 library\n// Add some aliases to make the function definitions more intelligible\nvar NUMBER = 'number';\nvar H3_ERROR = NUMBER;\nvar BOOLEAN = NUMBER;\nvar H3_LOWER = NUMBER;\nvar H3_UPPER = NUMBER;\nvar RESOLUTION = NUMBER;\nvar POINTER = NUMBER; // Define the bindings to functions in the C lib. Functions are defined as\n// [name, return type, [arg types]]. You must run `npm run build-emscripten`\n// before new functions added here will be available.\n\n/** @type {([string, string] | [string, string | null, string[]])[]} */\n\nvar BINDINGS = [// The size functions are inserted via build/sizes.h\n['sizeOfH3Index', NUMBER], ['sizeOfLatLng', NUMBER], ['sizeOfCellBoundary', NUMBER], ['sizeOfGeoLoop', NUMBER], ['sizeOfGeoPolygon', NUMBER], ['sizeOfLinkedGeoPolygon', NUMBER], ['sizeOfCoordIJ', NUMBER], ['readInt64AsDoubleFromPointer', NUMBER], // The remaining functions are defined in the core lib in h3Api.h\n['isValidCell', BOOLEAN, [H3_LOWER, H3_UPPER]], ['latLngToCell', H3_ERROR, [NUMBER, NUMBER, RESOLUTION, POINTER]], ['cellToLatLng', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['cellToBoundary', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['maxGridDiskSize', H3_ERROR, [NUMBER, POINTER]], ['gridDisk', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]], ['gridDiskDistances', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER, POINTER]], ['gridRingUnsafe', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]], ['maxPolygonToCellsSize', H3_ERROR, [POINTER, RESOLUTION, NUMBER, POINTER]], ['polygonToCells', H3_ERROR, [POINTER, RESOLUTION, NUMBER, POINTER]], ['cellsToLinkedMultiPolygon', H3_ERROR, [POINTER, NUMBER, POINTER]], ['destroyLinkedMultiPolygon', null, [POINTER]], ['compactCells', H3_ERROR, [POINTER, POINTER, NUMBER, NUMBER]], ['uncompactCells', H3_ERROR, [POINTER, NUMBER, NUMBER, POINTER, NUMBER, RESOLUTION]], ['uncompactCellsSize', H3_ERROR, [POINTER, NUMBER, NUMBER, RESOLUTION, POINTER]], ['isPentagon', BOOLEAN, [H3_LOWER, H3_UPPER]], ['isResClassIII', BOOLEAN, [H3_LOWER, H3_UPPER]], ['getBaseCellNumber', NUMBER, [H3_LOWER, H3_UPPER]], ['getResolution', NUMBER, [H3_LOWER, H3_UPPER]], ['maxFaceCount', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['getIcosahedronFaces', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['cellToParent', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]], ['cellToChildren', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]], ['cellToCenterChild', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]], ['cellToChildrenSize', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]], ['cellToChildPos', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]], ['childPosToCell', H3_ERROR, [NUMBER, NUMBER, H3_LOWER, H3_UPPER, RESOLUTION, POINTER]], ['areNeighborCells', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]], ['cellsToDirectedEdge', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]], ['getDirectedEdgeOrigin', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['getDirectedEdgeDestination', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['isValidDirectedEdge', BOOLEAN, [H3_LOWER, H3_UPPER]], ['directedEdgeToCells', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['originToDirectedEdges', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['directedEdgeToBoundary', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['gridDistance', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]], ['gridPathCells', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]], ['gridPathCellsSize', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]], ['cellToLocalIj', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, NUMBER, POINTER]], ['localIjToCell', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER, NUMBER, POINTER]], ['getHexagonAreaAvgM2', H3_ERROR, [RESOLUTION, POINTER]], ['getHexagonAreaAvgKm2', H3_ERROR, [RESOLUTION, POINTER]], ['getHexagonEdgeLengthAvgM', H3_ERROR, [RESOLUTION, POINTER]], ['getHexagonEdgeLengthAvgKm', H3_ERROR, [RESOLUTION, POINTER]], ['greatCircleDistanceM', NUMBER, [POINTER, POINTER]], ['greatCircleDistanceKm', NUMBER, [POINTER, POINTER]], ['greatCircleDistanceRads', NUMBER, [POINTER, POINTER]], ['cellAreaM2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['cellAreaKm2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['cellAreaRads2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['edgeLengthM', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['edgeLengthKm', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['edgeLengthRads', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['getNumCells', H3_ERROR, [RESOLUTION, POINTER]], ['getRes0Cells', H3_ERROR, [POINTER]], ['res0CellCount', NUMBER], ['getPentagons', H3_ERROR, [NUMBER, POINTER]], ['pentagonCount', NUMBER], ['cellToVertex', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]], ['cellToVertexes', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['vertexToLatLng', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]], ['isValidVertex', BOOLEAN, [H3_LOWER, H3_UPPER]]];\n\n/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Error codes from the code library, aliased here for legibility\nvar E_SUCCESS = 0;\nvar E_FAILED = 1;\nvar E_DOMAIN = 2;\nvar E_LATLNG_DOMAIN = 3;\nvar E_RES_DOMAIN = 4;\nvar E_CELL_INVALID = 5;\nvar E_DIR_EDGE_INVALID = 6;\nvar E_UNDIR_EDGE_INVALID = 7;\nvar E_VERTEX_INVALID = 8;\nvar E_PENTAGON = 9;\nvar E_DUPLICATE_INPUT = 10;\nvar E_NOT_NEIGHBORS = 11;\nvar E_RES_MISMATCH = 12;\nvar E_MEMORY_ALLOC = 13;\nvar E_MEMORY_BOUNDS = 14;\nvar E_OPTION_INVALID = 15;\n/**\n * Error messages corresponding to the core library error codes. See\n * https://h3geo.org/docs/library/errors#table-of-error-codes\n * @private\n */\n\nvar H3_ERROR_MSGS = {};\nH3_ERROR_MSGS[E_SUCCESS] = 'Success';\nH3_ERROR_MSGS[E_FAILED] = 'The operation failed but a more specific error is not available';\nH3_ERROR_MSGS[E_DOMAIN] = 'Argument was outside of acceptable range';\nH3_ERROR_MSGS[E_LATLNG_DOMAIN] = 'Latitude or longitude arguments were outside of acceptable range';\nH3_ERROR_MSGS[E_RES_DOMAIN] = 'Resolution argument was outside of acceptable range';\nH3_ERROR_MSGS[E_CELL_INVALID] = 'Cell argument was not valid';\nH3_ERROR_MSGS[E_DIR_EDGE_INVALID] = 'Directed edge argument was not valid';\nH3_ERROR_MSGS[E_UNDIR_EDGE_INVALID] = 'Undirected edge argument was not valid';\nH3_ERROR_MSGS[E_VERTEX_INVALID] = 'Vertex argument was not valid';\nH3_ERROR_MSGS[E_PENTAGON] = 'Pentagon distortion was encountered';\nH3_ERROR_MSGS[E_DUPLICATE_INPUT] = 'Duplicate input';\nH3_ERROR_MSGS[E_NOT_NEIGHBORS] = 'Cell arguments were not neighbors';\nH3_ERROR_MSGS[E_RES_MISMATCH] = 'Cell arguments had incompatible resolutions';\nH3_ERROR_MSGS[E_MEMORY_ALLOC] = 'Memory allocation failed';\nH3_ERROR_MSGS[E_MEMORY_BOUNDS] = 'Bounds of provided memory were insufficient';\nH3_ERROR_MSGS[E_OPTION_INVALID] = 'Mode or flags argument was not valid'; // Error codes for JS errors thrown in the bindings\n\nvar E_UNKNOWN_UNIT = 1000;\nvar E_ARRAY_LENGTH = 1001;\nvar E_NULL_INDEX = 1002;\n/**\n * Error messages for errors thrown in the binding code. These don't strictly\n * need error codes, but it's simpler to treat all of the errors consistently\n * @private\n */\n\nvar JS_ERROR_MESSAGES = {};\nJS_ERROR_MESSAGES[E_UNKNOWN_UNIT] = 'Unknown unit';\nJS_ERROR_MESSAGES[E_ARRAY_LENGTH] = 'Array length out of bounds';\nJS_ERROR_MESSAGES[E_NULL_INDEX] = 'Got unexpected null value for H3 index';\nvar UNKNOWN_ERROR_MSG = 'Unknown error';\n/**\n * Create an error with an attached code\n * @private\n * @param {Record<number, string>} messages  Map of code-to-messages to use\n * @param {number} errCode                   Numeric error code\n * @param {{value: unknown} | {}} [meta]     Metadata with value to associate with the error\n */\n\nfunction createError(messages, errCode, meta) {\n  // The error value may be \"undefined\", so check if the argument was provided\n  var hasValue = meta && 'value' in meta; // Throw a custom error type with the code attached\n\n  var err = new Error(((messages[errCode] || UNKNOWN_ERROR_MSG) + \" (code: \" + errCode + (hasValue ? (\", value: \" + (meta.value)) : '') + \")\")); // @ts-expect-error - TS doesn't like extending Error\n\n  err.code = errCode;\n  return err;\n}\n/**\n * Custom error for H3Error codes\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @param {unknown} [value]    Value to associate with the error, if any\n * @returns {Error}\n */\n\n\nfunction H3LibraryError(errCode, value) {\n  // The error value may be \"undefined\", so check if the argument was provided\n  var meta = arguments.length === 2 ? {\n    value: value\n  } : {};\n  return createError(H3_ERROR_MSGS, errCode, meta);\n}\n/**\n * Custom errors thrown from the JS bindings.\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @param {unknown} [value]    Value to associate with the error, if any\n * @returns {Error}\n */\n\nfunction JSBindingError(errCode, value) {\n  // The error value may be \"undefined\", so check if the argument was provided\n  var meta = arguments.length === 2 ? {\n    value: value\n  } : {};\n  return createError(JS_ERROR_MESSAGES, errCode, meta);\n}\n/**\n * Throw a JavaScript error if the C library return code is an error\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @throws {Error} Error if err is not E_SUCCESS (0)\n */\n\nfunction throwIfError(errCode) {\n  if (errCode !== 0) {\n    throw H3LibraryError(errCode);\n  }\n}\n\n/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Map of C-defined functions\n * @type {any}\n * @private\n */\n\nvar H3 = {}; // Create the bound functions themselves\n\nBINDINGS.forEach(function bind(def) {\n  H3[def[0]] = libh3.cwrap.apply(libh3, def);\n}); // Alias the hexidecimal base for legibility\n\nvar BASE_16 = 16; // Alias unused bits for legibility\n\nvar UNUSED_UPPER_32_BITS = 0; // ----------------------------------------------------------------------------\n// Byte size imports\n\nvar SZ_INT = 4;\nvar SZ_PTR = 4;\nvar SZ_DBL = 8;\nvar SZ_INT64 = 8;\nvar SZ_H3INDEX = H3.sizeOfH3Index();\nvar SZ_LATLNG = H3.sizeOfLatLng();\nvar SZ_CELLBOUNDARY = H3.sizeOfCellBoundary();\nvar SZ_GEOPOLYGON = H3.sizeOfGeoPolygon();\nvar SZ_GEOLOOP = H3.sizeOfGeoLoop();\nvar SZ_LINKED_GEOPOLYGON = H3.sizeOfLinkedGeoPolygon();\nvar SZ_COORDIJ = H3.sizeOfCoordIJ(); // ----------------------------------------------------------------------------\n// Custom types\n\n/**\n * 64-bit hexidecimal string representation of an H3 index\n * @static\n * @typedef {string} H3Index\n */\n\n/**\n * 64-bit hexidecimal string representation of an H3 index,\n * or two 32-bit integers in little endian order in an array.\n * @static\n * @typedef {string | number[]} H3IndexInput\n */\n\n/**\n * Coordinates as an `{i, j}` pair\n * @static\n * @typedef CoordIJ\n * @property {number} i\n * @property {number} j\n */\n\n/**\n * Custom JS Error instance with an attached error code. Error codes come from the\n * core H3 library and can be found [in the H3 docs](https://h3geo.org/docs/library/errors#table-of-error-codes).\n * @static\n * @typedef H3Error\n * @property {string} message\n * @property {number} code\n */\n\n/**\n * Pair of lat,lng coordinates (or lng,lat if GeoJSON output is specified)\n * @static\n * @typedef {number[]} CoordPair\n */\n\n/**\n * Pair of lower,upper 32-bit ints representing a 64-bit value\n * @static\n * @typedef {number[]} SplitLong\n */\n// ----------------------------------------------------------------------------\n// Unit constants\n\n/**\n * Length/Area units\n * @static\n * @property {string} m\n * @property {string} m2\n * @property {string} km\n * @property {string} km2\n * @property {string} rads\n * @property {string} rads2\n */\n\nvar UNITS = {\n  m: 'm',\n  m2: 'm2',\n  km: 'km',\n  km2: 'km2',\n  rads: 'rads',\n  rads2: 'rads2'\n}; // ----------------------------------------------------------------------------\n// Utilities and helpers\n\n/**\n * Validate a resolution, throwing an error if invalid\n * @private\n * @param  {unknown} res Value to validate\n * @return {number}      Valid res\n * @throws {H3Error}     If invalid\n */\n\nfunction validateRes(res) {\n  if (typeof res !== 'number' || res < 0 || res > 15 || Math.floor(res) !== res) {\n    throw H3LibraryError(E_RES_DOMAIN, res);\n  }\n\n  return res;\n}\n/**\n * Assert H3 index output, throwing an error if null\n * @private\n * @param {H3Index | null} h3Index    Index to validate\n * @return {H3Index}\n * @throws {H3Error}     If invalid\n */\n\n\nfunction validateH3Index(h3Index) {\n  if (!h3Index) { throw JSBindingError(E_NULL_INDEX); }\n  return h3Index;\n}\n\nvar MAX_JS_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n/**\n * Validate an array length. JS will throw its own error if you try\n * to create an array larger than 2^32 - 1, but validating beforehand\n * allows us to exit early before we try to process large amounts\n * of data that won't even fit in an output array\n * @private\n * @param  {number} length  Length to validate\n * @return {number}         Valid array length\n * @throws {H3Error}        If invalid\n */\n\nfunction validateArrayLength(length) {\n  if (length > MAX_JS_ARRAY_LENGTH) {\n    throw JSBindingError(E_ARRAY_LENGTH, length);\n  }\n\n  return length;\n}\n\nvar INVALID_HEXIDECIMAL_CHAR = /[^0-9a-fA-F]/;\n/**\n * Convert an H3 index (64-bit hexidecimal string) into a \"split long\" - a pair of 32-bit ints\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {SplitLong}             A two-element array with 32 lower bits and 32 upper bits\n */\n\nfunction h3IndexToSplitLong(h3Index) {\n  if (Array.isArray(h3Index) && h3Index.length === 2 && Number.isInteger(h3Index[0]) && Number.isInteger(h3Index[1])) {\n    return h3Index;\n  }\n\n  if (typeof h3Index !== 'string' || INVALID_HEXIDECIMAL_CHAR.test(h3Index)) {\n    return [0, 0];\n  }\n\n  var upper = parseInt(h3Index.substring(0, h3Index.length - 8), BASE_16);\n  var lower = parseInt(h3Index.substring(h3Index.length - 8), BASE_16);\n  return [lower, upper];\n}\n/**\n * Convert a 32-bit int to a hexdecimal string\n * @private\n * @param  {number} num  Integer to convert\n * @return {H3Index}     Hexidecimal string\n */\n\nfunction hexFrom32Bit(num) {\n  if (num >= 0) {\n    return num.toString(BASE_16);\n  } // Handle negative numbers\n\n\n  num = num & 0x7fffffff;\n  var tempStr = zeroPad(8, num.toString(BASE_16));\n  var topNum = (parseInt(tempStr[0], BASE_16) + 8).toString(BASE_16);\n  tempStr = topNum + tempStr.substring(1);\n  return tempStr;\n}\n/**\n * Get a H3 index string from a split long (pair of 32-bit ints)\n * @param  {number} lower Lower 32 bits\n * @param  {number} upper Upper 32 bits\n * @return {H3Index}       H3 index\n */\n\n\nfunction splitLongToH3Index(lower, upper) {\n  return hexFrom32Bit(upper) + zeroPad(8, hexFrom32Bit(lower));\n}\n/**\n * Zero-pad a string to a given length\n * @private\n * @param  {number} fullLen Target length\n * @param  {string} numStr  String to zero-pad\n * @return {string}         Zero-padded string\n */\n\nfunction zeroPad(fullLen, numStr) {\n  var numZeroes = fullLen - numStr.length;\n  var outStr = '';\n\n  for (var i = 0; i < numZeroes; i++) {\n    outStr += '0';\n  }\n\n  outStr = outStr + numStr;\n  return outStr;\n} // One more than the max size of an unsigned 32-bit int.\n// Dividing by this number is equivalent to num >>> 32\n\n\nvar UPPER_BIT_DIVISOR = Math.pow(2, 32);\n/**\n * Convert a JS double-precision floating point number to a split long\n * @private\n * @param  {number} num  Number to convert\n * @return {SplitLong}     A two-element array with 32 lower bits and 32 upper bits\n */\n\nfunction numberToSplitLong(num) {\n  if (typeof num !== 'number') {\n    return [0, 0];\n  }\n\n  return [num | 0, num / UPPER_BIT_DIVISOR | 0];\n}\n/**\n * Populate a C-appropriate GeoLoop struct from a polygon array\n * @private\n * @param  {number[][]} polygonArray  Polygon, as an array of coordinate pairs\n * @param  {number}  geoLoop          C pointer to a GeoLoop struct\n * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}                   C pointer to populated GeoLoop struct\n */\n\n\nfunction polygonArrayToGeoLoop(polygonArray, geoLoop, isGeoJson) {\n  var numVerts = polygonArray.length;\n\n  var geoCoordArray = libh3._calloc(numVerts, SZ_LATLNG); // Support [lng, lat] pairs if GeoJSON is specified\n\n\n  var latIndex = isGeoJson ? 1 : 0;\n  var lngIndex = isGeoJson ? 0 : 1;\n\n  for (var i = 0; i < numVerts * 2; i += 2) {\n    libh3.HEAPF64.set([polygonArray[i / 2][latIndex], polygonArray[i / 2][lngIndex]].map(degsToRads), geoCoordArray / SZ_DBL + i);\n  }\n\n  libh3.HEAPU32.set([numVerts, geoCoordArray], geoLoop / SZ_INT);\n  return geoLoop;\n}\n/**\n * Create a C-appropriate GeoPolygon struct from an array of polygons\n * @private\n * @param  {number[][][]} coordinates Array of polygons, each an array of coordinate pairs\n * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}                   C pointer to populated GeoPolygon struct\n */\n\n\nfunction coordinatesToGeoPolygon(coordinates, isGeoJson) {\n  // Any loops beyond the first loop are holes\n  var numHoles = coordinates.length - 1;\n\n  var geoPolygon = libh3._calloc(SZ_GEOPOLYGON); // Byte positions within the struct\n\n\n  var geoLoopOffset = 0;\n  var numHolesOffset = geoLoopOffset + SZ_GEOLOOP;\n  var holesOffset = numHolesOffset + SZ_INT; // geoLoop is first part of struct\n\n  polygonArrayToGeoLoop(coordinates[0], geoPolygon + geoLoopOffset, isGeoJson);\n  var holes;\n\n  if (numHoles > 0) {\n    holes = libh3._calloc(numHoles, SZ_GEOLOOP);\n\n    for (var i = 0; i < numHoles; i++) {\n      polygonArrayToGeoLoop(coordinates[i + 1], holes + SZ_GEOLOOP * i, isGeoJson);\n    }\n  }\n\n  libh3.setValue(geoPolygon + numHolesOffset, numHoles, 'i32');\n  libh3.setValue(geoPolygon + holesOffset, holes, 'i32');\n  return geoPolygon;\n}\n/**\n * Free memory allocated for a GeoPolygon struct. It is an error to access the struct\n * after passing it to this method.\n * @private\n * @param {number} geoPolygon     C pointer to GeoPolygon struct\n * @return {void}\n */\n\n\nfunction destroyGeoPolygon(geoPolygon) {\n  // Byte positions within the struct\n  var geoLoopOffset = 0;\n  var numHolesOffset = geoLoopOffset + SZ_GEOLOOP;\n  var holesOffset = numHolesOffset + SZ_INT; // Offset of the geoLoop vertex array pointer within the GeoLoop struct\n\n  var geoLoopArrayOffset = SZ_INT; // Free the outer vertex array\n\n  libh3._free(libh3.getValue(geoPolygon + geoLoopOffset + geoLoopArrayOffset, 'i8*')); // Free the vertex array for the holes, if any\n\n\n  var numHoles = libh3.getValue(geoPolygon + numHolesOffset, 'i32');\n\n  if (numHoles > 0) {\n    var holes = libh3.getValue(geoPolygon + holesOffset, 'i32');\n\n    for (var i = 0; i < numHoles; i++) {\n      libh3._free(libh3.getValue(holes + SZ_GEOLOOP * i + geoLoopArrayOffset, 'i8*'));\n    }\n\n    libh3._free(holes);\n  }\n\n  libh3._free(geoPolygon);\n}\n/**\n * Read an H3 index from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes, in case we're\n *                            reading an array\n * @return {H3Index | null}   H3 index, or null if index was invalid\n */\n\n\nfunction readH3IndexFromPointer(cAddress, offset) {\n  if ( offset === void 0 ) offset = 0;\n\n  var lower = libh3.getValue(cAddress + SZ_H3INDEX * offset, 'i32');\n  var upper = libh3.getValue(cAddress + SZ_H3INDEX * offset + SZ_INT, 'i32'); // The lower bits are allowed to be 0s, but if the upper bits are 0\n  // this represents an invalid H3 index\n\n  return upper ? splitLongToH3Index(lower, upper) : null;\n}\n/**\n * Read a boolean (32 bit) from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of booleans, in case we're\n *                            reading an array\n * @return {Boolean} Boolean value\n */\n\n\nfunction readBooleanFromPointer(cAddress, offset) {\n  if ( offset === void 0 ) offset = 0;\n\n  var val = libh3.getValue(cAddress + SZ_INT * offset, 'i32');\n  return Boolean(val);\n}\n/**\n * Read a double from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of doubles, in case we're\n *                            reading an array\n * @return {number} Double value\n */\n\n\nfunction readDoubleFromPointer(cAddress, offset) {\n  if ( offset === void 0 ) offset = 0;\n\n  return libh3.getValue(cAddress + SZ_DBL * offset, 'double');\n}\n/**\n * Read a 64-bit int from a pointer to C memory into a JS 64-bit float.\n * Note that this may lose precision if larger than MAX_SAFE_INTEGER\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @return {number} Double value\n */\n\n\nfunction readInt64AsDoubleFromPointer(cAddress) {\n  return H3.readInt64AsDoubleFromPointer(cAddress);\n}\n/**\n * Store an H3 index in C memory. Primarily used as an efficient way to\n * write sets of hexagons.\n * @private\n * @param  {H3IndexInput} h3Index  H3 index to store\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes from beginning\n *                            of the current array\n */\n\n\nfunction storeH3Index(h3Index, cAddress, offset) {\n  // HEAPU32 is a typed array projection on the index space\n  // as unsigned 32-bit integers. This means the index needs\n  // to be divided by SZ_INT (4) to access correctly. Also,\n  // the H3 index is 64 bits, so we skip by twos as we're writing\n  // to 32-bit integers in the proper order.\n  libh3.HEAPU32.set(h3IndexToSplitLong(h3Index), cAddress / SZ_INT + 2 * offset);\n}\n/**\n * Read an array of 64-bit H3 indexes from C and convert to a JS array of\n * H3 index strings\n * @private\n * @param  {number} cAddress    Pointer to C ouput array\n * @param  {number} maxCount    Max number of hexagons in array. Hexagons with\n *                              the value 0 will be skipped, so this isn't\n *                              necessarily the length of the output array.\n * @return {H3Index[]}          Array of H3 indexes\n */\n\n\nfunction readArrayOfH3Indexes(cAddress, maxCount) {\n  var out = [];\n\n  for (var i = 0; i < maxCount; i++) {\n    var h3Index = readH3IndexFromPointer(cAddress, i);\n\n    if (h3Index !== null) {\n      out.push(h3Index);\n    }\n  }\n\n  return out;\n}\n/**\n * Store an array of H3 index strings as a C array of 64-bit integers.\n * @private\n * @param  {number} cAddress    Pointer to C input array\n * @param  {H3IndexInput[]} hexagons H3 indexes to pass to the C lib\n */\n\n\nfunction storeArrayOfH3Indexes(cAddress, hexagons) {\n  // Assuming the cAddress points to an already appropriately\n  // allocated space\n  var count = hexagons.length;\n\n  for (var i = 0; i < count; i++) {\n    storeH3Index(hexagons[i], cAddress, i);\n  }\n}\n/**\n * Populate a C-appropriate LatLng struct from a [lat, lng] array\n * @private\n * @param {number} lat     Coordinate latitude\n * @param {number} lng     Coordinate longitude\n * @return {number}        C pointer to populated LatLng struct\n */\n\n\nfunction storeLatLng(lat, lng) {\n  var geoCoord = libh3._calloc(1, SZ_LATLNG);\n\n  libh3.HEAPF64.set([lat, lng].map(degsToRads), geoCoord / SZ_DBL);\n  return geoCoord;\n}\n/**\n * Read a single lat or lng value\n * @private\n * @param  {number} cAddress Pointer to C value\n * @return {number}\n */\n\n\nfunction readSingleCoord(cAddress) {\n  return radsToDegs(libh3.getValue(cAddress, 'double'));\n}\n/**\n * Read a LatLng from C and return a [lat, lng] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordPair}          [lat, lng] pair\n */\n\n\nfunction readLatLng(cAddress) {\n  return [readSingleCoord(cAddress), readSingleCoord(cAddress + SZ_DBL)];\n}\n/**\n * Read a LatLng from C and return a GeoJSON-style [lng, lat] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordPair}          [lng, lat] pair\n */\n\n\nfunction readLatLngGeoJson(cAddress) {\n  return [readSingleCoord(cAddress + SZ_DBL), readSingleCoord(cAddress)];\n}\n/**\n * Read the CellBoundary structure into a list of geo coordinate pairs\n * @private\n * @param {number}  cellBoundary       C pointer to CellBoundary struct\n * @param {boolean} [geoJsonCoords]    Whether to provide GeoJSON coordinate order: [lng, lat]\n * @param {boolean} [closedLoop]       Whether to close the loop\n * @return {CoordPair[]}               Array of geo coordinate pairs\n */\n\n\nfunction readCellBoundary(cellBoundary, geoJsonCoords, closedLoop) {\n  var numVerts = libh3.getValue(cellBoundary, 'i32'); // Note that though numVerts is an int, the coordinate doubles have to be\n  // aligned to 8 bytes, hence the 8-byte offset here\n\n  var vertsPos = cellBoundary + SZ_DBL;\n  var out = []; // Support [lng, lat] pairs if GeoJSON is specified\n\n  var readCoord = geoJsonCoords ? readLatLngGeoJson : readLatLng;\n\n  for (var i = 0; i < numVerts * 2; i += 2) {\n    out.push(readCoord(vertsPos + SZ_DBL * i));\n  }\n\n  if (closedLoop) {\n    // Close loop if GeoJSON is specified\n    out.push(out[0]);\n  }\n\n  return out;\n}\n/**\n * Read the LinkedGeoPolygon structure into a nested array of MultiPolygon coordinates\n * @private\n * @param {number}  polygon           C pointer to LinkedGeoPolygon struct\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[][][]}          MultiPolygon-style output.\n */\n\n\nfunction readMultiPolygon(polygon, formatAsGeoJson) {\n  var output = [];\n  var readCoord = formatAsGeoJson ? readLatLngGeoJson : readLatLng;\n  var loops;\n  var loop;\n  var coords;\n  var coord; // Loop through the linked structure, building the output\n\n  while (polygon) {\n    output.push(loops = []); // Follow ->first pointer\n\n    loop = libh3.getValue(polygon, 'i8*');\n\n    while (loop) {\n      loops.push(coords = []); // Follow ->first pointer\n\n      coord = libh3.getValue(loop, 'i8*');\n\n      while (coord) {\n        coords.push(readCoord(coord)); // Follow ->next pointer\n\n        coord = libh3.getValue(coord + SZ_DBL * 2, 'i8*');\n      }\n\n      if (formatAsGeoJson) {\n        // Close loop if GeoJSON is requested\n        coords.push(coords[0]);\n      } // Follow ->next pointer\n\n\n      loop = libh3.getValue(loop + SZ_PTR * 2, 'i8*');\n    } // Follow ->next pointer\n\n\n    polygon = libh3.getValue(polygon + SZ_PTR * 2, 'i8*');\n  }\n\n  return output;\n}\n/**\n * Read a CoordIJ from C and return an {i, j} pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordIJ}            {i, j} pair\n */\n\n\nfunction readCoordIJ(cAddress) {\n  return {\n    i: libh3.getValue(cAddress, 'i32'),\n    j: libh3.getValue(cAddress + SZ_INT, 'i32')\n  };\n}\n/**\n * Store an {i, j} pair to a C CoordIJ struct.\n * @private\n * @param  {number} cAddress    Pointer to C memory\n * @param {CoordIJ} ij          {i,j} pair to store\n * @return {void}\n */\n\n\nfunction storeCoordIJ(cAddress, ref) {\n  var i = ref.i;\n  var j = ref.j;\n\n  libh3.setValue(cAddress, i, 'i32');\n  libh3.setValue(cAddress + SZ_INT, j, 'i32');\n}\n/**\n * Read an array of positive integers array from C. Negative\n * values are considered invalid and ignored in output.\n * @private\n * @param  {number} cAddress    Pointer to C array\n * @param  {number} count       Length of C array\n * @return {number[]}           Javascript integer array\n */\n\n\nfunction readArrayOfPositiveIntegers(cAddress, count) {\n  var out = [];\n\n  for (var i = 0; i < count; i++) {\n    var int = libh3.getValue(cAddress + SZ_INT * i, 'i32');\n\n    if (int >= 0) {\n      out.push(int);\n    }\n  }\n\n  return out;\n} // ----------------------------------------------------------------------------\n// Public API functions: Core\n\n/**\n * Whether a given string represents a valid H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          Whether the index is valid\n */\n\n\nfunction isValidCell(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n  return Boolean(H3.isValidCell(lower, upper));\n}\n/**\n * Whether the given H3 index is a pentagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isPentagon\n */\n\nfunction isPentagon(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n  return Boolean(H3.isPentagon(lower, upper));\n}\n/**\n * Whether the given H3 index is in a Class III resolution (rotated versus\n * the icosahedron and subject to shape distortion adding extra points on\n * icosahedron edges, making them not true hexagons).\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isResClassIII\n */\n\nfunction isResClassIII(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n  return Boolean(H3.isResClassIII(lower, upper));\n}\n/**\n * Get the number of the base cell for a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get the base cell for\n * @return {number}           Index of the base cell (0-121)\n */\n\nfunction getBaseCellNumber(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n  return H3.getBaseCellNumber(lower, upper);\n}\n/**\n * Get the indices of all icosahedron faces intersected by a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get faces for\n * @return {number[]}              Indices (0-19) of all intersected faces\n * @throws {H3Error}               If input is invalid\n */\n\nfunction getIcosahedronFaces(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var countPtr = libh3._malloc(SZ_INT);\n\n  try {\n    throwIfError(H3.maxFaceCount(lower, upper, countPtr));\n    var count = libh3.getValue(countPtr, 'i32');\n\n    var faces = libh3._malloc(SZ_INT * count);\n\n    try {\n      throwIfError(H3.getIcosahedronFaces(lower, upper, faces));\n      return readArrayOfPositiveIntegers(faces, count);\n    } finally {\n      libh3._free(faces);\n    }\n  } finally {\n    libh3._free(countPtr);\n  }\n}\n/**\n * Returns the resolution of an H3 index\n * @static\n * @param  {H3IndexInput} h3Index H3 index to get resolution\n * @return {number}          The number (0-15) resolution, or -1 if invalid\n */\n\nfunction getResolution(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  if (!H3.isValidCell(lower, upper)) {\n    // Compatability with stated API\n    return -1;\n  }\n\n  return H3.getResolution(lower, upper);\n}\n/**\n * Get the hexagon containing a lat,lon point\n * @static\n * @param  {number} lat Latitude of point\n * @param  {number} lng Longtitude of point\n * @param  {number} res Resolution of hexagons to return\n * @return {H3Index}    H3 index\n * @throws {H3Error}    If input is invalid\n */\n\nfunction latLngToCell(lat, lng, res) {\n  var latLng = libh3._malloc(SZ_LATLNG); // Slightly more efficient way to set the memory\n\n\n  libh3.HEAPF64.set([lat, lng].map(degsToRads), latLng / SZ_DBL); // Read value as a split long\n\n  var h3Index = libh3._malloc(SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.latLngToCell(latLng, res, h3Index));\n    return validateH3Index(readH3IndexFromPointer(h3Index));\n  } finally {\n    libh3._free(h3Index);\n\n    libh3._free(latLng);\n  }\n}\n/**\n * Get the lat,lon center of a given hexagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index\n * @return {CoordPair}             Point as a [lat, lng] pair\n * @throws {H3Error}               If input is invalid\n */\n\nfunction cellToLatLng(h3Index) {\n  var latLng = libh3._malloc(SZ_LATLNG);\n\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  try {\n    throwIfError(H3.cellToLatLng(lower, upper, latLng));\n    return readLatLng(latLng);\n  } finally {\n    libh3._free(latLng);\n  }\n}\n/**\n * Get the vertices of a given hexagon (or pentagon), as an array of [lat, lng]\n * points. For pentagons and hexagons on the edge of an icosahedron face, this\n * function may return up to 10 vertices.\n * @static\n * @param  {H3IndexInput} h3Index          H3 index\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[]}              Array of [lat, lng] pairs\n * @throws {H3Error}                  If input is invalid\n */\n\nfunction cellToBoundary(h3Index, formatAsGeoJson) {\n  var cellBoundary = libh3._malloc(SZ_CELLBOUNDARY);\n\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  try {\n    throwIfError(H3.cellToBoundary(lower, upper, cellBoundary));\n    return readCellBoundary(cellBoundary, formatAsGeoJson, formatAsGeoJson);\n  } finally {\n    libh3._free(cellBoundary);\n  }\n} // ----------------------------------------------------------------------------\n// Public API functions: Algorithms\n\n/**\n * Get the parent of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get parent for\n * @param  {number} res       Resolution of hexagon to return\n * @return {H3Index}          H3 index of parent, or null for invalid input\n * @throws {H3Error}          If input is invalid\n */\n\nfunction cellToParent(h3Index, res) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var parent = libh3._malloc(SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.cellToParent(lower, upper, res, parent));\n    return validateH3Index(readH3IndexFromPointer(parent));\n  } finally {\n    libh3._free(parent);\n  }\n}\n/**\n * Get the children/descendents of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get children for\n * @param  {number} res       Resolution of hexagons to return\n * @return {H3Index[]}        H3 indexes of children, or empty array for invalid input\n * @throws {H3Error}          If resolution is invalid or output is too large for JS\n */\n\nfunction cellToChildren(h3Index, res) {\n  // Bad input in this case can potentially result in high computation volume\n  // using the current C algorithm. Validate and return an empty array on failure.\n  if (!isValidCell(h3Index)) {\n    return [];\n  }\n\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n  var count = validateArrayLength(cellToChildrenSize(h3Index, res));\n\n  var hexagons = libh3._calloc(count, SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.cellToChildren(lower, upper, res, hexagons));\n    return readArrayOfH3Indexes(hexagons, count);\n  } finally {\n    libh3._free(hexagons);\n  }\n}\n/**\n * Get the number of children for a cell at a given resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get child count for\n * @param  {number} res            Child resolution\n * @return {number}                Number of children at res for the given cell\n * @throws {H3Error}               If cell or parentRes are invalid\n */\n\nfunction cellToChildrenSize(h3Index, res) {\n  if (!isValidCell(h3Index)) {\n    throw H3LibraryError(E_CELL_INVALID);\n  }\n\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var countPtr = libh3._malloc(SZ_INT64);\n\n  try {\n    throwIfError(H3.cellToChildrenSize(lower, upper, res, countPtr));\n    return readInt64AsDoubleFromPointer(countPtr);\n  } finally {\n    libh3._free(countPtr);\n  }\n}\n/**\n * Get the center child of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get center child for\n * @param  {number} res       Resolution of cell to return\n * @return {H3Index}          H3 index of child, or null for invalid input\n * @throws {H3Error}          If resolution is invalid\n */\n\nfunction cellToCenterChild(h3Index, res) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var centerChild = libh3._malloc(SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.cellToCenterChild(lower, upper, res, centerChild));\n    return validateH3Index(readH3IndexFromPointer(centerChild));\n  } finally {\n    libh3._free(centerChild);\n  }\n}\n/**\n * Get the position of the cell within an ordered list of all children of the\n * cell's parent at the specified resolution.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get child pos for\n * @param  {number} parentRes      Resolution of reference parent\n * @return {number}                Position of child within parent at parentRes\n * @throws {H3Error}               If cell or parentRes are invalid\n */\n\nfunction cellToChildPos(h3Index, parentRes) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var childPos = libh3._malloc(SZ_INT64);\n\n  try {\n    throwIfError(H3.cellToChildPos(lower, upper, parentRes, childPos));\n    return readInt64AsDoubleFromPointer(childPos);\n  } finally {\n    libh3._free(childPos);\n  }\n}\n/**\n * Get the child cell at a given position within an ordered list of all children\n * at the specified resolution\n * @static\n * @param  {number} childPos       Position of the child cell to get\n * @param  {H3IndexInput} h3Index  H3 index of the parent cell\n * @param  {number} childRes       Resolution of child cell to return\n * @return {H3Index}          H3 index of child\n * @throws {H3Error}          If input is invalid\n */\n\nfunction childPosToCell(childPos, h3Index, childRes) {\n  var ref = numberToSplitLong(childPos);\n  var cpLower = ref[0];\n  var cpUpper = ref[1];\n  var ref$1 = h3IndexToSplitLong(h3Index);\n  var lower = ref$1[0];\n  var upper = ref$1[1];\n\n  var child = libh3._malloc(SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.childPosToCell(cpLower, cpUpper, lower, upper, childRes, child));\n    return validateH3Index(readH3IndexFromPointer(child));\n  } finally {\n    libh3._free(child);\n  }\n}\n/**\n * Get all hexagons in a k-ring around a given center. The order of the hexagons is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {H3Error}          If input is invalid or output is too large for JS\n */\n\nfunction gridDisk(h3Index, ringSize) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var countPtr = libh3._malloc(SZ_INT64);\n\n  try {\n    throwIfError(H3.maxGridDiskSize(ringSize, countPtr));\n    var count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n\n    var hexagons = libh3._calloc(count, SZ_H3INDEX);\n\n    try {\n      throwIfError(H3.gridDisk(lower, upper, ringSize, hexagons));\n      return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n      libh3._free(hexagons);\n    }\n  } finally {\n    libh3._free(countPtr);\n  }\n}\n/**\n * Get all hexagons in a k-ring around a given center, in an array of arrays\n * ordered by distance from the origin. The order of the hexagons within each ring is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[][]}      Array of arrays with H3 indexes for all hexagons each ring\n * @throws {H3Error}          If input is invalid or output is too large for JS\n */\n\nfunction gridDiskDistances(h3Index, ringSize) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var countPtr = libh3._malloc(SZ_INT64);\n\n  try {\n    throwIfError(H3.maxGridDiskSize(ringSize, countPtr));\n    var count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n\n    var kRings = libh3._calloc(count, SZ_H3INDEX);\n\n    var distances = libh3._calloc(count, SZ_INT);\n\n    try {\n      throwIfError(H3.gridDiskDistances(lower, upper, ringSize, kRings, distances));\n      /**\n       * An array of empty arrays to hold the output\n       * @type {string[][]}\n       * @private\n       */\n\n      var out = [];\n\n      for (var i = 0; i < ringSize + 1; i++) {\n        out.push([]);\n      } // Read the array of hexagons, putting them into the appropriate rings\n\n\n      for (var i$1 = 0; i$1 < count; i$1++) {\n        var cell = readH3IndexFromPointer(kRings, i$1);\n        var index = libh3.getValue(distances + SZ_INT * i$1, 'i32'); // eslint-disable-next-line max-depth\n\n        if (cell !== null) {\n          out[index].push(cell);\n        }\n      }\n\n      return out;\n    } finally {\n      libh3._free(kRings);\n\n      libh3._free(distances);\n    }\n  } finally {\n    libh3._free(countPtr);\n  }\n}\n/**\n * Get all hexagons in a hollow hexagonal ring centered at origin with sides of a given length.\n * Unlike kRing, this function will throw an error if there is a pentagon anywhere in the ring.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {Error}            If the algorithm could not calculate the ring\n * @throws {H3Error}          If input is invalid\n */\n\nfunction gridRingUnsafe(h3Index, ringSize) {\n  var maxCount = ringSize === 0 ? 1 : 6 * ringSize;\n\n  var hexagons = libh3._calloc(maxCount, SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.gridRingUnsafe.apply(H3, h3IndexToSplitLong(h3Index).concat( [ringSize], [hexagons] )));\n    return readArrayOfH3Indexes(hexagons, maxCount);\n  } finally {\n    libh3._free(hexagons);\n  }\n}\n/**\n * Get all hexagons with centers contained in a given polygon. The polygon\n * is specified with GeoJson semantics as an array of loops. Each loop is\n * an array of [lat, lng] pairs (or [lng, lat] if isGeoJson is specified).\n * The first loop is the perimeter of the polygon, and subsequent loops are\n * expected to be holes.\n * @static\n * @param  {number[][] | number[][][]} coordinates\n *                                  Array of loops, or a single loop\n * @param  {number} res             Resolution of hexagons to return\n * @param  {boolean} [isGeoJson]    Whether to expect GeoJson-style [lng, lat]\n *                                  pairs instead of [lat, lng]\n * @return {H3Index[]}              H3 indexes for all hexagons in polygon\n * @throws {H3Error}                If input is invalid or output is too large for JS\n */\n\nfunction polygonToCells(coordinates, res, isGeoJson) {\n  validateRes(res);\n  isGeoJson = Boolean(isGeoJson); // Guard against empty input\n\n  if (coordinates.length === 0 || coordinates[0].length === 0) {\n    return [];\n  } // Wrap to expected format if a single loop is provided\n\n\n  var polygon = typeof coordinates[0][0] === 'number' ? [coordinates] : coordinates;\n  var geoPolygon = coordinatesToGeoPolygon( // @ts-expect-error - There's no way to convince TS that polygon is now number[][][]\n  polygon, isGeoJson);\n\n  var countPtr = libh3._malloc(SZ_INT64);\n\n  try {\n    throwIfError(H3.maxPolygonToCellsSize(geoPolygon, res, 0, countPtr));\n    var count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n\n    var hexagons = libh3._calloc(count, SZ_H3INDEX);\n\n    try {\n      throwIfError(H3.polygonToCells(geoPolygon, res, 0, hexagons));\n      return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n      libh3._free(hexagons);\n    }\n  } finally {\n    libh3._free(countPtr);\n\n    destroyGeoPolygon(geoPolygon);\n  }\n}\n/**\n * Get the outlines of a set of H3 hexagons, returned in GeoJSON MultiPolygon\n * format (an array of polygons, each with an array of loops, each an array of\n * coordinates). Coordinates are returned as [lat, lng] pairs unless GeoJSON\n * is requested.\n *\n * It is the responsibility of the caller to ensure that all hexagons in the\n * set have the same resolution and that the set contains no duplicates. Behavior\n * is undefined if duplicates or multiple resolutions are present, and the\n * algorithm may produce unexpected or invalid polygons.\n *\n * @static\n * @param {H3IndexInput[]} h3Indexes  H3 indexes to get outlines for\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[][][]}          MultiPolygon-style output.\n * @throws {H3Error}                  If input is invalid\n */\n\nfunction cellsToMultiPolygon(h3Indexes, formatAsGeoJson) {\n  // Early exit on empty input\n  if (!h3Indexes || !h3Indexes.length) {\n    return [];\n  } // Set up input set\n\n\n  var indexCount = h3Indexes.length;\n\n  var set = libh3._calloc(indexCount, SZ_H3INDEX);\n\n  storeArrayOfH3Indexes(set, h3Indexes); // Allocate memory for output linked polygon\n\n  var polygon = libh3._calloc(SZ_LINKED_GEOPOLYGON);\n\n  try {\n    throwIfError(H3.cellsToLinkedMultiPolygon(set, indexCount, polygon));\n    return readMultiPolygon(polygon, formatAsGeoJson);\n  } finally {\n    // Clean up\n    H3.destroyLinkedMultiPolygon(polygon);\n\n    libh3._free(polygon);\n\n    libh3._free(set);\n  }\n}\n/**\n * Compact a set of hexagons of the same resolution into a set of hexagons across\n * multiple levels that represents the same area.\n * @static\n * @param  {H3IndexInput[]} h3Set H3 indexes to compact\n * @return {H3Index[]}       Compacted H3 indexes\n * @throws {H3Error}         If the input is invalid (e.g. duplicate hexagons)\n */\n\nfunction compactCells(h3Set) {\n  if (!h3Set || !h3Set.length) {\n    return [];\n  } // Set up input set\n\n\n  var count = h3Set.length;\n\n  var set = libh3._calloc(count, SZ_H3INDEX);\n\n  storeArrayOfH3Indexes(set, h3Set); // Allocate memory for compacted hexagons, worst-case is no compaction\n\n  var compactedSet = libh3._calloc(count, SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.compactCells(set, compactedSet, count, UNUSED_UPPER_32_BITS));\n    return readArrayOfH3Indexes(compactedSet, count);\n  } finally {\n    libh3._free(set);\n\n    libh3._free(compactedSet);\n  }\n}\n/**\n * Uncompact a compacted set of hexagons to hexagons of the same resolution\n * @static\n * @param  {H3IndexInput[]} compactedSet H3 indexes to uncompact\n * @param  {number}    res          The resolution to uncompact to\n * @return {H3Index[]}              The uncompacted H3 indexes\n * @throws {H3Error}                If the input is invalid (e.g. invalid resolution)\n */\n\nfunction uncompactCells(compactedSet, res) {\n  validateRes(res);\n\n  if (!compactedSet || !compactedSet.length) {\n    return [];\n  } // Set up input set\n\n\n  var count = compactedSet.length;\n\n  var set = libh3._calloc(count, SZ_H3INDEX);\n\n  storeArrayOfH3Indexes(set, compactedSet); // Estimate how many hexagons we need (always overestimates if in error)\n\n  var uncompactCellSizePtr = libh3._malloc(SZ_INT64);\n\n  try {\n    throwIfError(H3.uncompactCellsSize(set, count, UNUSED_UPPER_32_BITS, res, uncompactCellSizePtr));\n    var uncompactCellSize = validateArrayLength(readInt64AsDoubleFromPointer(uncompactCellSizePtr)); // Allocate memory for uncompacted hexagons\n\n    var uncompactedSet = libh3._calloc(uncompactCellSize, SZ_H3INDEX);\n\n    try {\n      throwIfError(H3.uncompactCells(set, count, UNUSED_UPPER_32_BITS, uncompactedSet, uncompactCellSize, UNUSED_UPPER_32_BITS, res));\n      return readArrayOfH3Indexes(uncompactedSet, uncompactCellSize);\n    } finally {\n      libh3._free(set);\n\n      libh3._free(uncompactedSet);\n    }\n  } finally {\n    libh3._free(uncompactCellSizePtr);\n  }\n} // ----------------------------------------------------------------------------\n// Public API functions: Directed edges\n\n/**\n * Whether two H3 indexes are neighbors (share an edge)\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {boolean}             Whether the hexagons share an edge\n * @throws {H3Error}             If the input is invalid\n */\n\nfunction areNeighborCells(origin, destination) {\n  var ref = h3IndexToSplitLong(origin);\n  var oLower = ref[0];\n  var oUpper = ref[1];\n  var ref$1 = h3IndexToSplitLong(destination);\n  var dLower = ref$1[0];\n  var dUpper = ref$1[1];\n\n  var out = libh3._malloc(SZ_INT);\n\n  try {\n    throwIfError(H3.areNeighborCells(oLower, oUpper, dLower, dUpper, out));\n    return readBooleanFromPointer(out);\n  } finally {\n    libh3._free(out);\n  }\n}\n/**\n * Get an H3 index representing a unidirectional edge for a given origin and destination\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index}             H3 index of the edge, or null if no edge is shared\n * @throws {H3Error}             If the input is invalid\n */\n\nfunction cellsToDirectedEdge(origin, destination) {\n  var ref = h3IndexToSplitLong(origin);\n  var oLower = ref[0];\n  var oUpper = ref[1];\n  var ref$1 = h3IndexToSplitLong(destination);\n  var dLower = ref$1[0];\n  var dUpper = ref$1[1];\n\n  var h3Index = libh3._malloc(SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.cellsToDirectedEdge(oLower, oUpper, dLower, dUpper, h3Index));\n    return validateH3Index(readH3IndexFromPointer(h3Index));\n  } finally {\n    libh3._free(h3Index);\n  }\n}\n/**\n * Get the origin hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge origin\n * @throws {H3Error}           If the input is invalid\n */\n\nfunction getDirectedEdgeOrigin(edgeIndex) {\n  var ref = h3IndexToSplitLong(edgeIndex);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var h3Index = libh3._malloc(SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.getDirectedEdgeOrigin(lower, upper, h3Index));\n    return validateH3Index(readH3IndexFromPointer(h3Index));\n  } finally {\n    libh3._free(h3Index);\n  }\n}\n/**\n * Get the destination hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge destination\n * @throws {H3Error}           If the input is invalid\n */\n\nfunction getDirectedEdgeDestination(edgeIndex) {\n  var ref = h3IndexToSplitLong(edgeIndex);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var h3Index = libh3._malloc(SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.getDirectedEdgeDestination(lower, upper, h3Index));\n    return validateH3Index(readH3IndexFromPointer(h3Index));\n  } finally {\n    libh3._free(h3Index);\n  }\n}\n/**\n * Whether the input is a valid unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {boolean}           Whether the index is valid\n */\n\nfunction isValidDirectedEdge(edgeIndex) {\n  var ref = h3IndexToSplitLong(edgeIndex);\n  var lower = ref[0];\n  var upper = ref[1];\n  return Boolean(H3.isValidDirectedEdge(lower, upper));\n}\n/**\n * Get the [origin, destination] pair represented by a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index[]}         [origin, destination] pair as H3 indexes\n * @throws {H3Error}           If the input is invalid\n */\n\nfunction directedEdgeToCells(edgeIndex) {\n  var ref = h3IndexToSplitLong(edgeIndex);\n  var lower = ref[0];\n  var upper = ref[1];\n  var count = 2;\n\n  var hexagons = libh3._calloc(count, SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.directedEdgeToCells(lower, upper, hexagons));\n    return readArrayOfH3Indexes(hexagons, count);\n  } finally {\n    libh3._free(hexagons);\n  }\n}\n/**\n * Get all of the unidirectional edges with the given H3 index as the origin (i.e. an edge to\n * every neighbor)\n * @static\n * @param  {H3IndexInput} h3Index   H3 index of the origin hexagon\n * @return {H3Index[]}         List of unidirectional edges\n * @throws {H3Error}           If the input is invalid\n */\n\nfunction originToDirectedEdges(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n  var count = 6;\n\n  var edges = libh3._calloc(count, SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.originToDirectedEdges(lower, upper, edges));\n    return readArrayOfH3Indexes(edges, count);\n  } finally {\n    libh3._free(edges);\n  }\n}\n/**\n * Get the vertices of a given edge as an array of [lat, lng] points. Note that for edges that\n * cross the edge of an icosahedron face, this may return 3 coordinates.\n * @static\n * @param  {H3IndexInput} edgeIndex        H3 index of the edge\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat]\n * @return {CoordPair[]}              Array of geo coordinate pairs\n * @throws {H3Error}                  If the input is invalid\n */\n\nfunction directedEdgeToBoundary(edgeIndex, formatAsGeoJson) {\n  var cellBoundary = libh3._malloc(SZ_CELLBOUNDARY);\n\n  var ref = h3IndexToSplitLong(edgeIndex);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  try {\n    throwIfError(H3.directedEdgeToBoundary(lower, upper, cellBoundary));\n    return readCellBoundary(cellBoundary, formatAsGeoJson);\n  } finally {\n    libh3._free(cellBoundary);\n  }\n}\n/**\n * Get the grid distance between two hex indexes. This function may fail\n * to find the distance between two indexes if they are very far apart or\n * on opposite sides of a pentagon.\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {number}          Distance between hexagons\n * @throws {H3Error}         If input is invalid or the distance could not be calculated\n */\n\nfunction gridDistance(origin, destination) {\n  var ref = h3IndexToSplitLong(origin);\n  var oLower = ref[0];\n  var oUpper = ref[1];\n  var ref$1 = h3IndexToSplitLong(destination);\n  var dLower = ref$1[0];\n  var dUpper = ref$1[1];\n\n  var countPtr = libh3._malloc(SZ_INT64);\n\n  try {\n    throwIfError(H3.gridDistance(oLower, oUpper, dLower, dUpper, countPtr));\n    return readInt64AsDoubleFromPointer(countPtr);\n  } finally {\n    libh3._free(countPtr);\n  }\n}\n/**\n * Given two H3 indexes, return the line of indexes between them (inclusive).\n *\n * This function may fail to find the line between two indexes, for\n * example if they are very far apart. It may also fail when finding\n * distances for indexes on opposite sides of a pentagon.\n *\n * Notes:\n *\n *  - The specific output of this function should not be considered stable\n *    across library versions. The only guarantees the library provides are\n *    that the line length will be `h3Distance(start, end) + 1` and that\n *    every index in the line will be a neighbor of the preceding index.\n *  - Lines are drawn in grid space, and may not correspond exactly to either\n *    Cartesian lines or great arcs.\n *\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index[]}           H3 indexes connecting origin and destination\n * @throws {H3Error}             If input is invalid or the line cannot be calculated\n */\n\nfunction gridPathCells(origin, destination) {\n  var ref = h3IndexToSplitLong(origin);\n  var oLower = ref[0];\n  var oUpper = ref[1];\n  var ref$1 = h3IndexToSplitLong(destination);\n  var dLower = ref$1[0];\n  var dUpper = ref$1[1];\n\n  var countPtr = libh3._malloc(SZ_INT64);\n\n  try {\n    throwIfError(H3.gridPathCellsSize(oLower, oUpper, dLower, dUpper, countPtr));\n    var count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n\n    var hexagons = libh3._calloc(count, SZ_H3INDEX);\n\n    try {\n      H3.gridPathCells(oLower, oUpper, dLower, dUpper, hexagons);\n      return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n      libh3._free(hexagons);\n    }\n  } finally {\n    libh3._free(countPtr);\n  }\n}\nvar LOCAL_IJ_DEFAULT_MODE = 0;\n/**\n * Produces IJ coordinates for an H3 index anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin      Origin H3 index\n * @param  {H3IndexInput} destination H3 index for which to find relative coordinates\n * @return {CoordIJ}             Coordinates as an `{i, j}` pair\n * @throws {H3Error}             If the IJ coordinates cannot be calculated\n */\n\nfunction cellToLocalIj(origin, destination) {\n  var ij = libh3._malloc(SZ_COORDIJ);\n\n  try {\n    throwIfError(H3.cellToLocalIj.apply(H3, h3IndexToSplitLong(origin).concat( h3IndexToSplitLong(destination), [LOCAL_IJ_DEFAULT_MODE], [ij] )));\n    return readCoordIJ(ij);\n  } finally {\n    libh3._free(ij);\n  }\n}\n/**\n * Produces an H3 index for IJ coordinates anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin     Origin H3 index\n * @param  {CoordIJ} coords     Coordinates as an `{i, j}` pair\n * @return {H3Index}            H3 index at the relative coordinates\n * @throws {H3Error}            If the H3 index cannot be calculated\n */\n\nfunction localIjToCell(origin, coords) {\n  // Validate input coords\n  if (!coords || typeof coords.i !== 'number' || typeof coords.j !== 'number') {\n    throw new Error('Coordinates must be provided as an {i, j} object');\n  } // Allocate memory for the CoordIJ struct and an H3 index to hold the return value\n\n\n  var ij = libh3._malloc(SZ_COORDIJ);\n\n  var out = libh3._malloc(SZ_H3INDEX);\n\n  storeCoordIJ(ij, coords);\n\n  try {\n    throwIfError(H3.localIjToCell.apply(H3, h3IndexToSplitLong(origin).concat( [ij], [LOCAL_IJ_DEFAULT_MODE], [out] )));\n    return validateH3Index(readH3IndexFromPointer(out));\n  } finally {\n    libh3._free(ij);\n\n    libh3._free(out);\n  }\n} // ----------------------------------------------------------------------------\n// Public API functions: Distance/area utilities\n\n/**\n * Great circle distance between two geo points. This is not specific to H3,\n * but is implemented in the library and provided here as a convenience.\n * @static\n * @param  {number[]} latLng1 Origin coordinate as [lat, lng]\n * @param  {number[]} latLng2 Destination coordinate as [lat, lng]\n * @param  {string}   unit    Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Great circle distance\n * @throws {H3Error}          If the unit is invalid\n */\n\nfunction greatCircleDistance(latLng1, latLng2, unit) {\n  var coord1 = storeLatLng(latLng1[0], latLng1[1]);\n  var coord2 = storeLatLng(latLng2[0], latLng2[1]);\n  var result;\n\n  switch (unit) {\n    case UNITS.m:\n      result = H3.greatCircleDistanceM(coord1, coord2);\n      break;\n\n    case UNITS.km:\n      result = H3.greatCircleDistanceKm(coord1, coord2);\n      break;\n\n    case UNITS.rads:\n      result = H3.greatCircleDistanceRads(coord1, coord2);\n      break;\n\n    default:\n      result = null;\n  }\n\n  libh3._free(coord1);\n\n  libh3._free(coord2);\n\n  if (result === null) {\n    throw JSBindingError(E_UNKNOWN_UNIT, unit);\n  }\n\n  return result;\n}\n/**\n * Exact area of a given cell\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of the hexagon to measure\n * @param  {string}  unit     Distance unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}           Cell area\n * @throws {H3Error}          If the input is invalid\n */\n\nfunction cellArea(h3Index, unit) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var out = libh3._malloc(SZ_DBL);\n\n  try {\n    switch (unit) {\n      case UNITS.m2:\n        throwIfError(H3.cellAreaM2(lower, upper, out));\n        break;\n\n      case UNITS.km2:\n        throwIfError(H3.cellAreaKm2(lower, upper, out));\n        break;\n\n      case UNITS.rads2:\n        throwIfError(H3.cellAreaRads2(lower, upper, out));\n        break;\n\n      default:\n        throw JSBindingError(E_UNKNOWN_UNIT, unit);\n    }\n\n    return readDoubleFromPointer(out);\n  } finally {\n    libh3._free(out);\n  }\n}\n/**\n * Calculate length of a given unidirectional edge\n * @static\n * @param  {H3IndexInput} edge     H3 index of the edge to measure\n * @param  {string}  unit     Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Cell area\n * @throws {H3Error}          If the input is invalid\n */\n\nfunction edgeLength(edge, unit) {\n  var ref = h3IndexToSplitLong(edge);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var out = libh3._malloc(SZ_DBL);\n\n  try {\n    switch (unit) {\n      case UNITS.m:\n        throwIfError(H3.edgeLengthM(lower, upper, out));\n        break;\n\n      case UNITS.km:\n        throwIfError(H3.edgeLengthKm(lower, upper, out));\n        break;\n\n      case UNITS.rads:\n        throwIfError(H3.edgeLengthRads(lower, upper, out));\n        break;\n\n      default:\n        throw JSBindingError(E_UNKNOWN_UNIT, unit);\n    }\n\n    return readDoubleFromPointer(out);\n  } finally {\n    libh3._free(out);\n  }\n}\n/**\n * Average hexagon area at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Area unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}      Average area\n * @throws {H3Error}     If the input is invalid\n */\n\nfunction getHexagonAreaAvg(res, unit) {\n  validateRes(res);\n\n  var out = libh3._malloc(SZ_DBL);\n\n  try {\n    switch (unit) {\n      case UNITS.m2:\n        throwIfError(H3.getHexagonAreaAvgM2(res, out));\n        break;\n\n      case UNITS.km2:\n        throwIfError(H3.getHexagonAreaAvgKm2(res, out));\n        break;\n\n      default:\n        throw JSBindingError(E_UNKNOWN_UNIT, unit);\n    }\n\n    return readDoubleFromPointer(out);\n  } finally {\n    libh3._free(out);\n  }\n}\n/**\n * Average hexagon edge length at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}      Average edge length\n * @throws {H3Error}     If the input is invalid\n */\n\nfunction getHexagonEdgeLengthAvg(res, unit) {\n  validateRes(res);\n\n  var out = libh3._malloc(SZ_DBL);\n\n  try {\n    switch (unit) {\n      case UNITS.m:\n        throwIfError(H3.getHexagonEdgeLengthAvgM(res, out));\n        break;\n\n      case UNITS.km:\n        throwIfError(H3.getHexagonEdgeLengthAvgKm(res, out));\n        break;\n\n      default:\n        throw JSBindingError(E_UNKNOWN_UNIT, unit);\n    }\n\n    return readDoubleFromPointer(out);\n  } finally {\n    libh3._free(out);\n  }\n} // ----------------------------------------------------------------------------\n// Public API functions: Vertex mode\n\n/**\n * Find the index for a vertex of a cell.\n * @static\n * @param {H3IndexInput} h3Index     Cell to find the vertex for\n * @param {number} vertexNum         Number (index) of the vertex to calculate\n * @return {H3Index}     Vertex index\n * @throws {H3Error}     If the input is invalid\n */\n\nfunction cellToVertex(h3Index, vertexNum) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  var vertexIndex = libh3._malloc(SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.cellToVertex(lower, upper, vertexNum, vertexIndex));\n    return validateH3Index(readH3IndexFromPointer(vertexIndex));\n  } finally {\n    libh3._free(vertexIndex);\n  }\n}\n/**\n * Find the indexes for all vertexes of a cell.\n * @static\n * @param {H3IndexInput} h3Index     Cell to find all vertexes for\n * @return {H3Index[]}   All vertex indexes of this cell\n * @throws {H3Error}     If the input is invalid\n */\n\nfunction cellToVertexes(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n  var maxNumVertexes = 6;\n\n  var vertexIndexes = libh3._calloc(maxNumVertexes, SZ_H3INDEX);\n\n  try {\n    throwIfError(H3.cellToVertexes(lower, upper, vertexIndexes));\n    return readArrayOfH3Indexes(vertexIndexes, maxNumVertexes);\n  } finally {\n    libh3._free(vertexIndexes);\n  }\n}\n/**\n * Get the lat, lng of a given vertex\n * @static\n * @param {H3IndexInput} h3Index A vertex index\n * @returns {CoordPair}          Latitude, longitude coordinates of the vertex\n * @throws {H3Error}             If the input is invalid\n */\n\nfunction vertexToLatLng(h3Index) {\n  var latlng = libh3._malloc(SZ_LATLNG);\n\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n\n  try {\n    throwIfError(H3.vertexToLatLng(lower, upper, latlng));\n    return readLatLng(latlng);\n  } finally {\n    libh3._free(latlng);\n  }\n}\n/**\n * Returns true if the input is a valid vertex index.\n * @static\n * @param {H3IndexInput} h3Index An index to test for being a vertex index\n * @returns {boolean} True if the index represents a vertex\n */\n\nfunction isValidVertex(h3Index) {\n  var ref = h3IndexToSplitLong(h3Index);\n  var lower = ref[0];\n  var upper = ref[1];\n  return Boolean(H3.isValidVertex(lower, upper));\n} // ----------------------------------------------------------------------------\n// Public informational utilities\n\n/**\n * The total count of hexagons in the world at a given resolution. Note that above\n * resolution 8 the exact count cannot be represented in a JavaScript 32-bit number,\n * so consumers should use caution when applying further operations to the output.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {number}      Count\n * @throws {H3Error}     If the resolution is invalid\n */\n\nfunction getNumCells(res) {\n  validateRes(res);\n\n  var countPtr = libh3._malloc(SZ_INT64);\n\n  try {\n    // Get number as a long value\n    throwIfError(H3.getNumCells(res, countPtr));\n    return readInt64AsDoubleFromPointer(countPtr);\n  } finally {\n    libh3._free(countPtr);\n  }\n}\n/**\n * Get all H3 indexes at resolution 0. As every index at every resolution > 0 is\n * the descendant of a res 0 index, this can be used with h3ToChildren to iterate\n * over H3 indexes at any resolution.\n * @static\n * @return {H3Index[]}  All H3 indexes at res 0\n */\n\nfunction getRes0Cells() {\n  var count = H3.res0CellCount();\n\n  var hexagons = libh3._malloc(SZ_H3INDEX * count);\n\n  try {\n    throwIfError(H3.getRes0Cells(hexagons));\n    return readArrayOfH3Indexes(hexagons, count);\n  } finally {\n    libh3._free(hexagons);\n  }\n}\n/**\n * Get the twelve pentagon indexes at a given resolution.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {H3Index[]}   All H3 pentagon indexes at res\n * @throws {H3Error}     If the resolution is invalid\n */\n\nfunction getPentagons(res) {\n  validateRes(res);\n  var count = H3.pentagonCount();\n\n  var hexagons = libh3._malloc(SZ_H3INDEX * count);\n\n  try {\n    throwIfError(H3.getPentagons(res, hexagons));\n    return readArrayOfH3Indexes(hexagons, count);\n  } finally {\n    libh3._free(hexagons);\n  }\n}\n/**\n * Convert degrees to radians\n * @static\n * @param  {number} deg Value in degrees\n * @return {number}     Value in radians\n */\n\nfunction degsToRads(deg) {\n  return deg * Math.PI / 180;\n}\n/**\n * Convert radians to degrees\n * @static\n * @param  {number} rad Value in radians\n * @return {number}     Value in degrees\n */\n\nfunction radsToDegs(rad) {\n  return rad * 180 / Math.PI;\n}\n\nexports.UNITS = UNITS;\nexports.h3IndexToSplitLong = h3IndexToSplitLong;\nexports.splitLongToH3Index = splitLongToH3Index;\nexports.isValidCell = isValidCell;\nexports.isPentagon = isPentagon;\nexports.isResClassIII = isResClassIII;\nexports.getBaseCellNumber = getBaseCellNumber;\nexports.getIcosahedronFaces = getIcosahedronFaces;\nexports.getResolution = getResolution;\nexports.latLngToCell = latLngToCell;\nexports.cellToLatLng = cellToLatLng;\nexports.cellToBoundary = cellToBoundary;\nexports.cellToParent = cellToParent;\nexports.cellToChildren = cellToChildren;\nexports.cellToChildrenSize = cellToChildrenSize;\nexports.cellToCenterChild = cellToCenterChild;\nexports.cellToChildPos = cellToChildPos;\nexports.childPosToCell = childPosToCell;\nexports.gridDisk = gridDisk;\nexports.gridDiskDistances = gridDiskDistances;\nexports.gridRingUnsafe = gridRingUnsafe;\nexports.polygonToCells = polygonToCells;\nexports.cellsToMultiPolygon = cellsToMultiPolygon;\nexports.compactCells = compactCells;\nexports.uncompactCells = uncompactCells;\nexports.areNeighborCells = areNeighborCells;\nexports.cellsToDirectedEdge = cellsToDirectedEdge;\nexports.getDirectedEdgeOrigin = getDirectedEdgeOrigin;\nexports.getDirectedEdgeDestination = getDirectedEdgeDestination;\nexports.isValidDirectedEdge = isValidDirectedEdge;\nexports.directedEdgeToCells = directedEdgeToCells;\nexports.originToDirectedEdges = originToDirectedEdges;\nexports.directedEdgeToBoundary = directedEdgeToBoundary;\nexports.gridDistance = gridDistance;\nexports.gridPathCells = gridPathCells;\nexports.cellToLocalIj = cellToLocalIj;\nexports.localIjToCell = localIjToCell;\nexports.greatCircleDistance = greatCircleDistance;\nexports.cellArea = cellArea;\nexports.edgeLength = edgeLength;\nexports.getHexagonAreaAvg = getHexagonAreaAvg;\nexports.getHexagonEdgeLengthAvg = getHexagonEdgeLengthAvg;\nexports.cellToVertex = cellToVertex;\nexports.cellToVertexes = cellToVertexes;\nexports.vertexToLatLng = vertexToLatLng;\nexports.isValidVertex = isValidVertex;\nexports.getNumCells = getNumCells;\nexports.getRes0Cells = getRes0Cells;\nexports.getPentagons = getPentagons;\nexports.degsToRads = degsToRads;\nexports.radsToDegs = radsToDegs;\n//# sourceMappingURL=h3-js.js.map\n\n\n//# sourceURL=webpack://my_module/./node_modules/h3-js/dist/browser/h3-js.js?");

/***/ }),

/***/ "./node_modules/h3-js/dist/legacy.js":
/*!*******************************************!*\
  !*** ./node_modules/h3-js/dist/legacy.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst h3v4 = __webpack_require__(/*! ./h3-js */ \"./node_modules/h3-js/dist/browser/h3-js.js\");\n\nmodule.exports = {\nUNITS: h3v4.UNITS,\nh3IndexToSplitLong: h3v4.h3IndexToSplitLong,\nsplitLongToH3Index: h3v4.splitLongToH3Index,\nh3IsValid: h3v4.isValidCell,\nh3IsPentagon: h3v4.isPentagon,\nh3IsResClassIII: h3v4.isResClassIII,\nh3GetBaseCell: h3v4.getBaseCellNumber,\nh3GetFaces: h3v4.getIcosahedronFaces,\nh3GetResolution: h3v4.getResolution,\ngeoToH3: h3v4.latLngToCell,\nh3ToGeo: h3v4.cellToLatLng,\nh3ToGeoBoundary: h3v4.cellToBoundary,\nh3ToParent: h3v4.cellToParent,\nh3ToChildren: h3v4.cellToChildren,\nh3ToCenterChild: h3v4.cellToCenterChild,\nkRing: h3v4.gridDisk,\nkRingDistances: h3v4.gridDiskDistances,\nhexRing: h3v4.gridRingUnsafe,\npolyfill: h3v4.polygonToCells,\nh3SetToMultiPolygon: h3v4.cellsToMultiPolygon,\ncompact: h3v4.compactCells,\nuncompact: h3v4.uncompactCells,\nh3IndexesAreNeighbors: h3v4.areNeighborCells,\ngetH3UnidirectionalEdge: h3v4.cellsToDirectedEdge,\ngetOriginH3IndexFromUnidirectionalEdge: h3v4.getDirectedEdgeOrigin,\ngetDestinationH3IndexFromUnidirectionalEdge: h3v4.getDirectedEdgeDestination,\nh3UnidirectionalEdgeIsValid: h3v4.isValidDirectedEdge,\ngetH3IndexesFromUnidirectionalEdge: h3v4.directedEdgeToCells,\ngetH3UnidirectionalEdgesFromHexagon: h3v4.originToDirectedEdges,\ngetH3UnidirectionalEdgeBoundary: h3v4.directedEdgeToBoundary,\nh3Distance: h3v4.gridDistance,\nh3Line: h3v4.gridPathCells,\nexperimentalH3ToLocalIj: h3v4.cellToLocalIj,\nexperimentalLocalIjToH3: h3v4.localIjToCell,\npointDist: h3v4.greatCircleDistance,\ncellArea: h3v4.cellArea,\nexactEdgeLength: h3v4.edgeLength,\nhexArea: h3v4.getHexagonAreaAvg,\nedgeLength: h3v4.getHexagonEdgeLengthAvg,\nnumHexagons: h3v4.getNumCells,\ngetRes0Indexes: h3v4.getRes0Cells,\ngetPentagonIndexes: h3v4.getPentagons,\ndegsToRads: h3v4.degsToRads,\nradsToDegs: h3v4.radsToDegs\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/h3-js/dist/legacy.js?");

/***/ }),

/***/ "./node_modules/h3-js/legacy.js":
/*!**************************************!*\
  !*** ./node_modules/h3-js/legacy.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * Copyright 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"),\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = __webpack_require__(/*! ./dist/legacy */ \"./node_modules/h3-js/dist/legacy.js\");\n\n\n//# sourceURL=webpack://my_module/./node_modules/h3-js/legacy.js?");

/***/ }),

/***/ "./node_modules/haversine/haversine.js":
/*!*********************************************!*\
  !*** ./node_modules/haversine/haversine.js ***!
  \*********************************************/
/***/ ((module) => {

eval("var haversine = (function () {\n  var RADII = {\n    km:    6371,\n    mile:  3960,\n    meter: 6371000,\n    nmi:   3440\n  }\n\n  // convert to radians\n  var toRad = function (num) {\n    return num * Math.PI / 180\n  }\n\n  // convert coordinates to standard format based on the passed format option\n  var convertCoordinates = function (format, coordinates) {\n    switch (format) {\n    case '[lat,lon]':\n      return { latitude: coordinates[0], longitude: coordinates[1] }\n    case '[lon,lat]':\n      return { latitude: coordinates[1], longitude: coordinates[0] }\n    case '{lon,lat}':\n      return { latitude: coordinates.lat, longitude: coordinates.lon }\n    case '{lat,lng}':\n      return { latitude: coordinates.lat, longitude: coordinates.lng }\n    case 'geojson':\n      return { latitude: coordinates.geometry.coordinates[1], longitude: coordinates.geometry.coordinates[0] }\n    default:\n      return coordinates\n    }\n  }\n\n  return function haversine (startCoordinates, endCoordinates, options) {\n    options   = options || {}\n\n    var R = options.unit in RADII\n      ? RADII[options.unit]\n      : RADII.km\n\n    var start = convertCoordinates(options.format, startCoordinates)\n    var end = convertCoordinates(options.format, endCoordinates)\n\n    var dLat = toRad(end.latitude - start.latitude)\n    var dLon = toRad(end.longitude - start.longitude)\n    var lat1 = toRad(start.latitude)\n    var lat2 = toRad(end.latitude)\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2)\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\n\n    if (options.threshold) {\n      return options.threshold > (R * c)\n    }\n\n    return R * c\n  }\n\n})()\n\nif ( true && module.exports) {\n  module.exports = haversine\n}\n\n\n//# sourceURL=webpack://my_module/./node_modules/haversine/haversine.js?");

/***/ }),

/***/ "./node_modules/pako/index.js":
/*!************************************!*\
  !*** ./node_modules/pako/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Top level file is just a mixin of submodules & constants\n\n\nconst { Deflate, deflate, deflateRaw, gzip } = __webpack_require__(/*! ./lib/deflate */ \"./node_modules/pako/lib/deflate.js\");\n\nconst { Inflate, inflate, inflateRaw, ungzip } = __webpack_require__(/*! ./lib/inflate */ \"./node_modules/pako/lib/inflate.js\");\n\nconst constants = __webpack_require__(/*! ./lib/zlib/constants */ \"./node_modules/pako/lib/zlib/constants.js\");\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = ungzip;\nmodule.exports.constants = constants;\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/index.js?");

/***/ }),

/***/ "./node_modules/pako/lib/deflate.js":
/*!******************************************!*\
  !*** ./node_modules/pako/lib/deflate.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n\nconst zlib_deflate = __webpack_require__(/*! ./zlib/deflate */ \"./node_modules/pako/lib/zlib/deflate.js\");\nconst utils        = __webpack_require__(/*! ./utils/common */ \"./node_modules/pako/lib/utils/common.js\");\nconst strings      = __webpack_require__(/*! ./utils/strings */ \"./node_modules/pako/lib/utils/strings.js\");\nconst msg          = __webpack_require__(/*! ./zlib/messages */ \"./node_modules/pako/lib/zlib/messages.js\");\nconst ZStream      = __webpack_require__(/*! ./zlib/zstream */ \"./node_modules/pako/lib/zlib/zstream.js\");\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED\n} = __webpack_require__(/*! ./zlib/constants */ \"./node_modules/pako/lib/zlib/constants.js\");\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = zlib_deflate.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    this.result = utils.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.constants = __webpack_require__(/*! ./zlib/constants */ \"./node_modules/pako/lib/zlib/constants.js\");\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/deflate.js?");

/***/ }),

/***/ "./node_modules/pako/lib/inflate.js":
/*!******************************************!*\
  !*** ./node_modules/pako/lib/inflate.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n\nconst zlib_inflate = __webpack_require__(/*! ./zlib/inflate */ \"./node_modules/pako/lib/zlib/inflate.js\");\nconst utils        = __webpack_require__(/*! ./utils/common */ \"./node_modules/pako/lib/utils/common.js\");\nconst strings      = __webpack_require__(/*! ./utils/strings */ \"./node_modules/pako/lib/utils/strings.js\");\nconst msg          = __webpack_require__(/*! ./zlib/messages */ \"./node_modules/pako/lib/zlib/messages.js\");\nconst ZStream      = __webpack_require__(/*! ./zlib/zstream */ \"./node_modules/pako/lib/zlib/zstream.js\");\nconst GZheader     = __webpack_require__(/*! ./zlib/gzheader */ \"./node_modules/pako/lib/zlib/gzheader.js\");\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = __webpack_require__(/*! ./zlib/constants */ \"./node_modules/pako/lib/zlib/constants.js\");\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = __webpack_require__(/*! ./zlib/constants */ \"./node_modules/pako/lib/zlib/constants.js\");\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/inflate.js?");

/***/ }),

/***/ "./node_modules/pako/lib/utils/common.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/utils/common.js ***!
  \***********************************************/
/***/ ((module) => {

eval("\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/utils/common.js?");

/***/ }),

/***/ "./node_modules/pako/lib/utils/strings.js":
/*!************************************************!*\
  !*** ./node_modules/pako/lib/utils/strings.js ***!
  \************************************************/
/***/ ((module) => {

eval("// String encode/decode helpers\n\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/utils/strings.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/adler32.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/adler32.js ***!
  \***********************************************/
/***/ ((module) => {

eval("\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/adler32.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/constants.js":
/*!*************************************************!*\
  !*** ./node_modules/pako/lib/zlib/constants.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/constants.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/crc32.js":
/*!*********************************************!*\
  !*** ./node_modules/pako/lib/zlib/crc32.js ***!
  \*********************************************/
/***/ ((module) => {

eval("\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/crc32.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/deflate.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/deflate.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = __webpack_require__(/*! ./trees */ \"./node_modules/pako/lib/zlib/trees.js\");\nconst adler32 = __webpack_require__(/*! ./adler32 */ \"./node_modules/pako/lib/zlib/adler32.js\");\nconst crc32   = __webpack_require__(/*! ./crc32 */ \"./node_modules/pako/lib/zlib/crc32.js\");\nconst msg     = __webpack_require__(/*! ./messages */ \"./node_modules/pako/lib/zlib/messages.js\");\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN,\n  Z_DEFLATED\n} = __webpack_require__(/*! ./constants */ \"./node_modules/pako/lib/zlib/constants.js\");\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = msg[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH) ||\n                        flush === Z_NO_FLUSH ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH && flush !== Z_FINISH &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH) && flush !== Z_NO_FLUSH &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\n/* ========================================================================= */\nconst deflate = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nmodule.exports.deflateInit = deflateInit;\nmodule.exports.deflateInit2 = deflateInit2;\nmodule.exports.deflateReset = deflateReset;\nmodule.exports.deflateResetKeep = deflateResetKeep;\nmodule.exports.deflateSetHeader = deflateSetHeader;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateEnd = deflateEnd;\nmodule.exports.deflateSetDictionary = deflateSetDictionary;\nmodule.exports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/deflate.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/gzheader.js":
/*!************************************************!*\
  !*** ./node_modules/pako/lib/zlib/gzheader.js ***!
  \************************************************/
/***/ ((module) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/gzheader.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/inffast.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/inffast.js ***!
  \***********************************************/
/***/ ((module) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/inffast.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/inflate.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/inflate.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = __webpack_require__(/*! ./adler32 */ \"./node_modules/pako/lib/zlib/adler32.js\");\nconst crc32         = __webpack_require__(/*! ./crc32 */ \"./node_modules/pako/lib/zlib/crc32.js\");\nconst inflate_fast  = __webpack_require__(/*! ./inffast */ \"./node_modules/pako/lib/zlib/inffast.js\");\nconst inflate_table = __webpack_require__(/*! ./inftrees */ \"./node_modules/pako/lib/zlib/inftrees.js\");\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = __webpack_require__(/*! ./constants */ \"./node_modules/pako/lib/zlib/constants.js\");\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/inflate.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/inftrees.js":
/*!************************************************!*\
  !*** ./node_modules/pako/lib/zlib/inftrees.js ***!
  \************************************************/
/***/ ((module) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/inftrees.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/messages.js":
/*!************************************************!*\
  !*** ./node_modules/pako/lib/zlib/messages.js ***!
  \************************************************/
/***/ ((module) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/messages.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/trees.js":
/*!*********************************************!*\
  !*** ./node_modules/pako/lib/zlib/trees.js ***!
  \*********************************************/
/***/ ((module) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nmodule.exports._tr_init  = _tr_init;\nmodule.exports._tr_stored_block = _tr_stored_block;\nmodule.exports._tr_flush_block  = _tr_flush_block;\nmodule.exports._tr_tally = _tr_tally;\nmodule.exports._tr_align = _tr_align;\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/trees.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/zstream.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/zstream.js ***!
  \***********************************************/
/***/ ((module) => {

eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n\n\n//# sourceURL=webpack://my_module/./node_modules/pako/lib/zlib/zstream.js?");

/***/ }),

/***/ "./node_modules/protobufjs/index.js":
/*!******************************************!*\
  !*** ./node_modules/protobufjs/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// full library entry point.\n\n\nmodule.exports = __webpack_require__(/*! ./src/index */ \"./node_modules/protobufjs/src/index.js\");\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/index.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/common.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/common.js ***!
  \***********************************************/
/***/ ((module) => {

eval("\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/common.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/converter.js":
/*!**************************************************!*\
  !*** ./node_modules/protobufjs/src/converter.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/converter.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/decoder.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/decoder.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = decoder;\n\nvar Enum    = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    types   = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util    = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/decoder.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/encoder.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/encoder.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = encoder;\n\nvar Enum     = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    types    = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util     = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/encoder.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/enum.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/enum.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\"),\n    util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/enum.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/field.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/field.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    types = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util  = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/field.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/index-light.js":
/*!****************************************************!*\
  !*** ./node_modules/protobufjs/src/index-light.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar protobuf = module.exports = __webpack_require__(/*! ./index-minimal */ \"./node_modules/protobufjs/src/index-minimal.js\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = __webpack_require__(/*! ./encoder */ \"./node_modules/protobufjs/src/encoder.js\");\nprotobuf.decoder          = __webpack_require__(/*! ./decoder */ \"./node_modules/protobufjs/src/decoder.js\");\nprotobuf.verifier         = __webpack_require__(/*! ./verifier */ \"./node_modules/protobufjs/src/verifier.js\");\nprotobuf.converter        = __webpack_require__(/*! ./converter */ \"./node_modules/protobufjs/src/converter.js\");\n\n// Reflection\nprotobuf.ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\nprotobuf.Namespace        = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\");\nprotobuf.Root             = __webpack_require__(/*! ./root */ \"./node_modules/protobufjs/src/root.js\");\nprotobuf.Enum             = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\");\nprotobuf.Type             = __webpack_require__(/*! ./type */ \"./node_modules/protobufjs/src/type.js\");\nprotobuf.Field            = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\");\nprotobuf.OneOf            = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\");\nprotobuf.MapField         = __webpack_require__(/*! ./mapfield */ \"./node_modules/protobufjs/src/mapfield.js\");\nprotobuf.Service          = __webpack_require__(/*! ./service */ \"./node_modules/protobufjs/src/service.js\");\nprotobuf.Method           = __webpack_require__(/*! ./method */ \"./node_modules/protobufjs/src/method.js\");\n\n// Runtime\nprotobuf.Message          = __webpack_require__(/*! ./message */ \"./node_modules/protobufjs/src/message.js\");\nprotobuf.wrappers         = __webpack_require__(/*! ./wrappers */ \"./node_modules/protobufjs/src/wrappers.js\");\n\n// Utility\nprotobuf.types            = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\");\nprotobuf.util             = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/index-light.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/index-minimal.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/index-minimal.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = __webpack_require__(/*! ./writer */ \"./node_modules/protobufjs/src/writer.js\");\nprotobuf.BufferWriter = __webpack_require__(/*! ./writer_buffer */ \"./node_modules/protobufjs/src/writer_buffer.js\");\nprotobuf.Reader       = __webpack_require__(/*! ./reader */ \"./node_modules/protobufjs/src/reader.js\");\nprotobuf.BufferReader = __webpack_require__(/*! ./reader_buffer */ \"./node_modules/protobufjs/src/reader_buffer.js\");\n\n// Utility\nprotobuf.util         = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\nprotobuf.rpc          = __webpack_require__(/*! ./rpc */ \"./node_modules/protobufjs/src/rpc.js\");\nprotobuf.roots        = __webpack_require__(/*! ./roots */ \"./node_modules/protobufjs/src/roots.js\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/index-minimal.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar protobuf = module.exports = __webpack_require__(/*! ./index-light */ \"./node_modules/protobufjs/src/index-light.js\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = __webpack_require__(/*! ./tokenize */ \"./node_modules/protobufjs/src/tokenize.js\");\nprotobuf.parse            = __webpack_require__(/*! ./parse */ \"./node_modules/protobufjs/src/parse.js\");\nprotobuf.common           = __webpack_require__(/*! ./common */ \"./node_modules/protobufjs/src/common.js\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/index.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/mapfield.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/mapfield.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = MapField;\n\n// extends Field\nvar Field = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util    = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/mapfield.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/message.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/message.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Message;\n\nvar util = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/message.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/method.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/method.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/method.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/namespace.js":
/*!**************************************************!*\
  !*** ./node_modules/protobufjs/src/namespace.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    util     = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\"),\n    OneOf    = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/namespace.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/object.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/object.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/object.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/oneof.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/oneof.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    util  = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/oneof.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/parse.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/parse.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = __webpack_require__(/*! ./tokenize */ \"./node_modules/protobufjs/src/tokenize.js\"),\n    Root      = __webpack_require__(/*! ./root */ \"./node_modules/protobufjs/src/root.js\"),\n    Type      = __webpack_require__(/*! ./type */ \"./node_modules/protobufjs/src/type.js\"),\n    Field     = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    MapField  = __webpack_require__(/*! ./mapfield */ \"./node_modules/protobufjs/src/mapfield.js\"),\n    OneOf     = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\"),\n    Enum      = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    Service   = __webpack_require__(/*! ./service */ \"./node_modules/protobufjs/src/service.js\"),\n    Method    = __webpack_require__(/*! ./method */ \"./node_modules/protobufjs/src/method.js\"),\n    types     = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util      = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/parse.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/reader.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/reader.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Reader;\n\nvar util      = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/reader.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/reader_buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/reader_buffer.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = __webpack_require__(/*! ./reader */ \"./node_modules/protobufjs/src/reader.js\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/reader_buffer.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/root.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/root.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    Enum    = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    OneOf   = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\"),\n    util    = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/root.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/roots.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/roots.js ***!
  \**********************************************/
/***/ ((module) => {

eval("\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/roots.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/rpc.js":
/*!********************************************!*\
  !*** ./node_modules/protobufjs/src/rpc.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = __webpack_require__(/*! ./rpc/service */ \"./node_modules/protobufjs/src/rpc/service.js\");\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/rpc.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/rpc/service.js":
/*!****************************************************!*\
  !*** ./node_modules/protobufjs/src/rpc/service.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Service;\n\nvar util = __webpack_require__(/*! ../util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/rpc/service.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/service.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/service.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = __webpack_require__(/*! ./method */ \"./node_modules/protobufjs/src/method.js\"),\n    util   = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\"),\n    rpc    = __webpack_require__(/*! ./rpc */ \"./node_modules/protobufjs/src/rpc.js\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/service.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/tokenize.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/tokenize.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        // look for 1 or 2 slashes since startOffset would already point past\n        // the first slash that started the comment.\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/tokenize.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/type.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/type.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    OneOf     = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\"),\n    Field     = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    MapField  = __webpack_require__(/*! ./mapfield */ \"./node_modules/protobufjs/src/mapfield.js\"),\n    Service   = __webpack_require__(/*! ./service */ \"./node_modules/protobufjs/src/service.js\"),\n    Message   = __webpack_require__(/*! ./message */ \"./node_modules/protobufjs/src/message.js\"),\n    Reader    = __webpack_require__(/*! ./reader */ \"./node_modules/protobufjs/src/reader.js\"),\n    Writer    = __webpack_require__(/*! ./writer */ \"./node_modules/protobufjs/src/writer.js\"),\n    util      = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\"),\n    encoder   = __webpack_require__(/*! ./encoder */ \"./node_modules/protobufjs/src/encoder.js\"),\n    decoder   = __webpack_require__(/*! ./decoder */ \"./node_modules/protobufjs/src/decoder.js\"),\n    verifier  = __webpack_require__(/*! ./verifier */ \"./node_modules/protobufjs/src/verifier.js\"),\n    converter = __webpack_require__(/*! ./converter */ \"./node_modules/protobufjs/src/converter.js\"),\n    wrappers  = __webpack_require__(/*! ./wrappers */ \"./node_modules/protobufjs/src/wrappers.js\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/type.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/types.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/types.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/types.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/util.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/util.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\nvar roots = __webpack_require__(/*! ./roots */ \"./node_modules/protobufjs/src/roots.js\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = __webpack_require__(/*! @protobufjs/codegen */ \"./node_modules/@protobufjs/codegen/index.js\");\nutil.fetch   = __webpack_require__(/*! @protobufjs/fetch */ \"./node_modules/@protobufjs/fetch/index.js\");\nutil.path    = __webpack_require__(/*! @protobufjs/path */ \"./node_modules/@protobufjs/path/index.js\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = __webpack_require__(/*! ./type */ \"./node_modules/protobufjs/src/type.js\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (__webpack_require__(/*! ./root */ \"./node_modules/protobufjs/src/root.js\"))());\n    }\n});\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/util.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/util/longbits.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/util/longbits.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = LongBits;\n\nvar util = __webpack_require__(/*! ../util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/util/longbits.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/util/minimal.js":
/*!*****************************************************!*\
  !*** ./node_modules/protobufjs/src/util/minimal.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = __webpack_require__(/*! @protobufjs/aspromise */ \"./node_modules/@protobufjs/aspromise/index.js\");\n\n// converts to / from base64 encoded strings\nutil.base64 = __webpack_require__(/*! @protobufjs/base64 */ \"./node_modules/@protobufjs/base64/index.js\");\n\n// base class of rpc.Service\nutil.EventEmitter = __webpack_require__(/*! @protobufjs/eventemitter */ \"./node_modules/@protobufjs/eventemitter/index.js\");\n\n// float handling accross browsers\nutil.float = __webpack_require__(/*! @protobufjs/float */ \"./node_modules/@protobufjs/float/index.js\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = __webpack_require__(/*! @protobufjs/inquire */ \"./node_modules/@protobufjs/inquire/index.js\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = __webpack_require__(/*! @protobufjs/utf8 */ \"./node_modules/@protobufjs/utf8/index.js\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = __webpack_require__(/*! @protobufjs/pool */ \"./node_modules/@protobufjs/pool/index.js\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = __webpack_require__(/*! ./longbits */ \"./node_modules/protobufjs/src/util/longbits.js\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof __webpack_require__.g !== \"undefined\"\n                   && __webpack_require__.g\n                   && __webpack_require__.g.process\n                   && __webpack_require__.g.process.versions\n                   && __webpack_require__.g.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && __webpack_require__.g\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/util/minimal.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/verifier.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/verifier.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = verifier;\n\nvar Enum      = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    util      = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/verifier.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/wrappers.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/wrappers.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = __webpack_require__(/*! ./message */ \"./node_modules/protobufjs/src/message.js\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/wrappers.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/writer.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/writer.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = Writer;\n\nvar util      = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/writer.js?");

/***/ }),

/***/ "./node_modules/protobufjs/src/writer_buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/writer_buffer.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = __webpack_require__(/*! ./writer */ \"./node_modules/protobufjs/src/writer.js\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n\n\n//# sourceURL=webpack://my_module/./node_modules/protobufjs/src/writer_buffer.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// src/index.js\r\n\r\n// import { inflate } from 'pako';\r\nconst pako = __webpack_require__(/*! pako */ \"./node_modules/pako/index.js\")\r\nconst inflate = pako.inflate;\r\nconst h3 = __webpack_require__(/*! h3-js/legacy */ \"./node_modules/h3-js/legacy.js\")\r\nconst axios = __webpack_require__(/*! axios */ \"./node_modules/axios/dist/browser/axios.cjs\")\r\nconst haversine = __webpack_require__(/*! haversine */ \"./node_modules/haversine/haversine.js\")\r\nconst protobuf = __webpack_require__(/*! protobufjs */ \"./node_modules/protobufjs/index.js\")\r\n// import axios from 'axios';\r\n// import haversine from 'haversine';\r\n// import protobuf from 'protobufjs';\r\n\r\nlet CONFIG = {\r\n  debug: true,\r\n  cacheSize: 50\r\n}\r\nlet RUNTIME = {\r\n  isReady: false,\r\n  readyFlags: {\r\n      ca: false,\r\n  },\r\n  cache: {},\r\n  consumedOp: 0,\r\n}\r\n\r\n\r\n// 名前から機能が推定できる注入可能なレベルに疎な関数をhelperとしてまとめる\r\nconst helper = {\r\n  storeCache(key, obj, kvStore = RUNTIME.cache, cacheMaxSize = CONFIG.cacheSize) {\r\n      const len = Object.keys(kvStore).length\r\n      if (len >= cacheMaxSize) {\r\n          const rand = Math.floor(Math.random() * len)\r\n          delete kvStore[Object.keys()[rand]]\r\n      }\r\n      kvStore[key] = obj\r\n  },\r\n  loadCache(key, kvStore = RUNTIME.cache) {\r\n      if (kvStore[key]) {\r\n          return kvStore[key]\r\n      }\r\n      let NULL\r\n      return NULL\r\n  },\r\n  async fetchJSON(url) {\r\n      const cache = helper.loadCache(url)\r\n      if (cache) {\r\n          return cache\r\n      }\r\n      try {\r\n          if (CONFIG.debug) {\r\n              console.log(url)\r\n          }\r\n          RUNTIME.consumedOp++\r\n          const resp = await fetch(url)\r\n          if (!resp.ok) {\r\n              throw new Error(\"something wrong\") // TODO\r\n          }\r\n          const data = await resp.json()\r\n          helper.storeCache(url, data)\r\n          return data\r\n      } catch {\r\n          throw new Error(\"something wrong\") // TODO\r\n      }\r\n  },\r\n  async fetchTarCSV(url) {\r\n      const cache = helper.loadCache(url)\r\n      if (cache) {\r\n          return cache\r\n      }\r\n      // tarファイルを解凍する関数\r\n      // 機能的には関数に独立させたいが，この関数の内部でしか使わないのでここでいいや\r\n      const untar = (data) => {\r\n          const files = []\r\n          const headerSize = 512\r\n          let offset = 0\r\n\r\n          while (offset < data.length) {\r\n              const header = new Uint8Array(data.slice(offset, offset + headerSize))\r\n              const nameEncoded = new TextDecoder().decode(header.subarray(0, 100)).replace(/\\u0000/g, '').trim()\r\n              const name = decodeURI(nameEncoded)\r\n              const size = parseInt(new TextDecoder().decode(header.subarray(124, 136)).trim(), 8)\r\n              offset += headerSize\r\n\r\n              if (name) {\r\n                  const buffer = data.slice(offset, offset + size)\r\n                  files.push({ name, size, buffer })\r\n              }\r\n\r\n              offset += size\r\n              if (size % 512 !== 0) {\r\n                  offset += 512 - (size % 512)\r\n              }\r\n          }\r\n          return files\r\n      }\r\n\r\n      if (CONFIG.debug) {\r\n          console.log(url)\r\n      }\r\n      try {\r\n          RUNTIME.consumedOp++\r\n          const resp = await fetch(url)\r\n          if (!resp.ok) {\r\n              throw new Error(\"something wrong\") // TODO\r\n          }\r\n          const gzipData = await resp.arrayBuffer()\r\n\r\n          // gzip形式のデータを解凍する\r\n          const rawBytes = inflate(gzipData)\r\n\r\n          // tarファイルを解凍する\r\n          const files = untar(rawBytes)\r\n\r\n          let ret = {}\r\n\r\n          // ファイルの中身を操作する\r\n          files.forEach((file) => {\r\n              const name = file.name\r\n              const content = new TextDecoder('utf-8').decode(file.buffer)\r\n              if (name.endsWith(\".sig\")) {\r\n                  // TODO\r\n              } else {\r\n                  const obj = helper.csvToObject(content)\r\n                  ret[name] = obj\r\n              }\r\n          })\r\n          helper.storeCache(url, ret)\r\n          return ret\r\n      } catch {\r\n          throw new Error(\"something wrong\") // TODO\r\n      }\r\n  },\r\n  async fetchCSV(url) {\r\n      const cache = helper.loadCache(url)\r\n      if (cache) {\r\n          return cache\r\n      }\r\n      try {\r\n          if (CONFIG.debug) {\r\n              console.log(url)\r\n          }\r\n          RUNTIME.consumedOp++\r\n          const resp = await fetch(url)\r\n          if (!resp.ok) {\r\n              throw new Error(\"something wrong\") // TODO\r\n          }\r\n          const text = await resp.text()\r\n          const data = helper.csvToObject(text)\r\n          helper.storeCache(url, data)\r\n          return data\r\n      } catch {\r\n          throw new Error(\"something wrong\") // TODO\r\n      }\r\n  },\r\n  csvToObject(csv) {\r\n      const lines = csv.replace(/\\r/g, \"\").trim().split('\\n') // 行に分割\r\n      const headers = lines.shift().split(',') // ヘッダーを取得\r\n      return lines.map(line => {\r\n          const values = line.split(',') // 値を取得\r\n          return headers.reduce((obj, header, index) => {\r\n              obj[header] = values[index] // ヘッダーと値を組み合わせてオブジェクトを生成\r\n              return obj\r\n          }, {})\r\n      })\r\n  },\r\n  async sleep(ms) {\r\n      return new Promise(resolve => setTimeout(resolve, ms))\r\n  },\r\n  parseDate(dateStr) {\r\n      // YYYYMMDDの形式\r\n      const year = dateStr.slice(0, 4);\r\n      const month = dateStr.slice(4, 6);\r\n      const day = dateStr.slice(6, 8);\r\n      return new Date(`${year}-${month}-${day}`);\r\n  },\r\n  getDayOfWeek(dateStr) {\r\n      const date = helper.parseDate(dateStr)\r\n\r\n      // 曜日を取得する\r\n      const weekdays = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\r\n      return weekdays[date.getDay()];\r\n  },\r\n  isHoliday(dateStr) {\r\n      const dayOfWeek = helper.getDayOfWeek(dateStr)\r\n      flags = [\r\n          [\"土\", \"日\"].includes(dayOfWeek)\r\n      ]\r\n      return flags.some(f => f)\r\n  },\r\n  setIntersection(setA, setB) {\r\n      let ret = new Set()\r\n      for (const e of setB) {\r\n          if (setA.has(e)) {\r\n              ret.add(e);\r\n          }\r\n      }\r\n      return ret;\r\n  },\r\n  hash: {\r\n      async SHA256(msg) {\r\n          const hashBuffer = await crypto.subtle.digest(\"SHA-256\", new TextEncoder().encode(msg))\r\n          const hashArray = Array.from(new Uint8Array(hashBuffer))\r\n          return hashArray.map(b => b.toString(16).padStart(2, \"0\")).join(\"\")\r\n      },\r\n      async v1(str, mod) {\r\n          const hash = helper.hash.SHA256(str)\r\n          if (CONFIG.debug) {\r\n              {\r\n                  str, hash\r\n              }\r\n          }\r\n          return (await hash).slice(0, mod)\r\n      },\r\n      async v2(str, mod) {\r\n          const hash = helper.hash.SHA256(encodeURI(str))\r\n          if (CONFIG.debug) {\r\n              {\r\n                  str, hash\r\n              }\r\n          }\r\n          return (await hash).slice(0, mod)\r\n      }\r\n  }\r\n}\r\n\r\nconst internal = {\r\n  async setCA(rootCA) {\r\n      //末尾をスラッシュなしに統一する\r\n      if (!rootCA.endsWith(\"root.json\")) {\r\n          return // TODO\r\n      }\r\n      CONFIG.rootCA = rootCA\r\n\r\n      try {\r\n          const req = await (await fetch(CONFIG.rootCA)).json()\r\n          RUNTIME.CA = req\r\n\r\n          RUNTIME.host = RUNTIME.CA.hosts[0] //TODO\r\n          RUNTIME.readyFlags.ca = true\r\n      } catch {\r\n          throw new Error(\"something wrong\") // TODO\r\n      }\r\n  },\r\n  async waitReady() {\r\n      while (!RUNTIME.isReady) {\r\n          await helper.sleep(100)\r\n          if (Object.values(RUNTIME.readyFlags).every(e => e)) {\r\n              RUNTIME.isReady = true\r\n          }\r\n      }\r\n  },\r\n  async waitCAReady() {\r\n      while (!RUNTIME.readyFlags.ca) {\r\n          await helper.sleep(100)\r\n      }\r\n  },\r\n  // 緯度・経度の距離を計算する関数\r\n  async distance(lat1, lon1, lat2, lon2) {\r\n      const R = 6371; // 地球の半径（km）\r\n      const dLat = (lat2 - lat1) * (Math.PI / 180);\r\n      const dLon = (lon2 - lon1) * (Math.PI / 180);\r\n      const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(lat1 * (Math.PI / 180)) *\r\n          Math.cos(lat2 * (Math.PI / 180)) *\r\n          Math.sin(dLon / 2) *\r\n          Math.sin(dLon / 2);\r\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n      return R * c;\r\n  }\r\n}\r\n\r\nfunction addNumbers(a, b) {\r\n  return a + b;\r\n}\r\n\r\nconst Butter = {\r\n  addNumbers,\r\n  getComsumedOp() {\r\n      return RUNTIME.consumedOp\r\n  },\r\n  async getHostDataList() {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchJSON(`${RUNTIME.host}/datalist.json`)\r\n      return data.data_list\r\n  },\r\n  async getAgencyInfo(gtfsID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchJSON(`${RUNTIME.host}/${gtfsID}/info.json`)\r\n      return data\r\n  },\r\n  async getVersionInfo(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchJSON(`${RUNTIME.host}/${gtfsID}/${versionID}/info.json`)\r\n      return data\r\n  },\r\n  async getBusStops(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/stops.txt`)\r\n      return data\r\n  },\r\n  async getAgency(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/agency.txt`)\r\n      return data\r\n  },\r\n  async getCalendar(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/calendar.txt`)\r\n      return data\r\n  },\r\n  async getCalendarDates(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/calendar_dates.txt`)\r\n      return data\r\n  },\r\n  async getFareAttributes(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/fare_attributes.txt`)\r\n      return data\r\n  },\r\n  async getFareRules(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/fare_rules.txt`)\r\n      return data\r\n  },\r\n  async getFeedInfo(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/feed_info.txt`)\r\n      return data\r\n  },\r\n  async getOfficeJp(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/office_jp.txt`)\r\n      return data\r\n  },\r\n  async getRoutes(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/routes.txt`)\r\n      return data\r\n  },\r\n  async getShapes(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/shapes.txt`)\r\n      return data\r\n  },\r\n  async getStopTimes(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/stop_times.txt`)\r\n      return data\r\n  },\r\n  async getTransfers(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/transfers.txt`)\r\n      return data\r\n  },\r\n  async getTranslations(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/translations.txt`)\r\n      return data\r\n  },\r\n  async getTrips(gtfsID, versionID) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/GTFS/trips.txt`)\r\n      return data\r\n  },\r\n  async getTimeTableByStopHash(gtfsID, versionID, stopHash) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchTarCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/byStops/${stopHash}.tar.gz`)\r\n      return data\r\n  },\r\n  async getTimeTableByTripHash(gtfsID, versionID, tripHash) {\r\n      await internal.waitCAReady()\r\n      const data = await helper.fetchTarCSV(`${RUNTIME.host}/${gtfsID}/${versionID}/byTrips/${tripHash}.tar.gz`)\r\n      return data\r\n  },\r\n  async getTimeTableByStopID(gtfsID, versionID, stopID) {\r\n      const versionInfo = await Butter.getVersionInfo(gtfsID, versionID)\r\n      const stopHash = await helper.hash.v2(stopID, versionInfo.by_stop_hash_value_size)\r\n      const timeTables = await Butter.getTimeTableByStopHash(gtfsID, versionID, stopHash)\r\n      return timeTables[stopID]\r\n  },\r\n  async getTimeTableByTripID(gtfsID, versionID, tripID) {\r\n      const versionInfo = await Butter.getVersionInfo(gtfsID, versionID)\r\n      const tripHash = await helper.hash.v2(tripID, versionInfo.by_trip_hash_value_size)\r\n      const timeTables = await Butter.getTimeTableByTripHash(gtfsID, versionID, tripHash)\r\n      return timeTables[tripID]\r\n  },\r\n  async getServiceIDs(gtfsID, versionID, dateStr) {\r\n      const data = await Promise.all([\r\n          Butter.getCalendar(gtfsID, versionID),\r\n          Butter.getCalendarDates(gtfsID, versionID),\r\n      ])\r\n      const service = data[0]\r\n      const calendar = data[1]\r\n  \r\n      const special = calendar.filter(e => {\r\n          return e.date == dateStr\r\n      })\r\n  \r\n      const addedServiceIds = special\r\n          .filter(e => e.exception_type === \"1\")\r\n          .map(e => e.service_id);\r\n  \r\n      const removedServiceIds = special\r\n          .filter(e => e.exception_type === \"2\")\r\n          .map(e => e.service_id);\r\n  \r\n      if (special.length > 0) {\r\n          return addedServiceIds;\r\n      }\r\n  \r\n      const date = helper.parseDate(dateStr);\r\n      const weekOfDay = helper.getDayOfWeek(dateStr);\r\n  \r\n      const enabled = service.filter(e => {\r\n          const endDate = helper.parseDate(e.end_date);\r\n          return date.getTime() <= endDate.getTime();\r\n      })\r\n  \r\n      return enabled.filter(e => {\r\n          const flags = [\r\n              e.monday == \"1\" && weekOfDay === \"月\",\r\n              e.tuesday == \"1\" && weekOfDay === \"火\",\r\n              e.wednesday == \"1\" && weekOfDay === \"水\",\r\n              e.thursday == \"1\" && weekOfDay === \"木\",\r\n              e.friday == \"1\" && weekOfDay === \"金\",\r\n              e.saturday == \"1\" && weekOfDay === \"土\",\r\n              e.sunday == \"1\" && weekOfDay === \"日\",\r\n          ]\r\n          return flags.some(f => f) && !removedServiceIds.includes(e.service_id);\r\n      }).map(e => e.service_id)\r\n  },\r\n  async findTrips(gtfsID, versionID, stopIDs) {\r\n      const data = await Promise.all(stopIDs.map(e => Butter.getTimeTableByStopID(gtfsID, versionID, e)))\r\n      const trips = data.map(x => new Set(x.map(y => y.trip_id)))\r\n      const interSection = trips.reduce((prev, cur) => helper.setIntersection(prev, cur), trips.length > 0 ? trips[0] : new Set()) //TODO\r\n      return [...interSection]\r\n  },\r\n  async findTimeTableByStopID(gtfsID, versionID, stopID, date) {\r\n      const data = await Promise.all([\r\n          Butter.getTimeTableByStopID(gtfsID, versionID, stopID),\r\n          Butter.getServiceIDs(gtfsID, versionID, date)\r\n      ])\r\n      const timetable = data[0]\r\n      const services = data[1]\r\n      let ret = [];\r\n      for (const serviceID of services) {\r\n          ret = ret.concat(\r\n              timetable.filter(e => e.service_id == serviceID)\r\n          )\r\n      }\r\n      return ret\r\n  },\r\n  async findTimeTableByTripIDs(gtfsID, versionID, TripIDs) {\r\n      const data = await Promise.all(TripIDs.map(e => Butter.getTimeTableByTripID(gtfsID, versionID, e)))\r\n      let ret = []\r\n      for (const e of data) {\r\n          ret = ret.concat(e)\r\n      }\r\n      return ret\r\n  },\r\n  async fetchTimeTableV1(gtfsID, options, version = \"optional\") {\r\n      const optionSample = {\r\n          // INDEX1\r\n          \"stop_ids\": [\"出発するバス停のID\", \"目的地のバス停ID\", \"経由地のバス停ID\"],\r\n          // INDEX1-REQUIRED OPTION\r\n          \"date\": \"20230101\",\r\n          // INDEX2\r\n          \"trip_ids\": [\r\n              \"取得したいバスのID\"\r\n          ],\r\n          // FILTER1\r\n          \"start_time\": \"いつのバスからリストアップするか\",\r\n          // FILTER2\r\n          \"end_time\": \"いつまでのバスをリストアップするか\",\r\n          // TODO\r\n          \"positions\": [\r\n              { \"lat\": \"\", \"lon\": \"\", \"r\": \"半径\" }\r\n          ],//優先度低い\r\n      }\r\n      if (version == \"optional\") {\r\n          const versionInfo = await Butter.getAgencyInfo(gtfsID)\r\n          version = versionInfo.slice(-1)[0].version_id\r\n      }\r\n      let stop_times = []\r\n      if (options.stop_ids) {\r\n          if (!options.date) {\r\n              throw new Error(\"date is required when stop_ids are selected\")\r\n          }\r\n          const stopID = options.stop_ids[0]\r\n          const constraints = options.stop_ids\r\n          const data = await Promise.all([\r\n              Butter.findTimeTableByStopID(gtfsID, version, stopID, options.date),\r\n              Butter.findTrips(gtfsID, version, constraints)\r\n          ])\r\n          const tripSet = new Set(data[1].concat(options.trip_ids || []))\r\n          const filtered = data[0].filter(e => tripSet.has(e.trip_id))\r\n          for (const e of filtered) {\r\n              stop_times.push({\r\n                  trip_id: e.trip_id,\r\n                  stop_id: e.stop_id,\r\n                  arrival_time: e.arrival_time,\r\n                  departure_time: e.departure_time,\r\n                  predict_time: \"NOT IMPLEMENTED\"\r\n              })\r\n          }\r\n      } else if (options.trip_ids) {\r\n          const data = await Butter.findTimeTableByTripIDs(gtfsID, version, options.trip_ids)\r\n          for (const e of data) {\r\n              stop_times.push({\r\n                  trip_id: e.trip_id,\r\n                  stop_id: e.stop_id,\r\n                  arrival_time: e.arrival_time,\r\n                  departure_time: e.departure_time,\r\n                  predict_time: \"NOT IMPLEMENTED\"\r\n              })\r\n          }\r\n      } else {\r\n          throw new Error(\"stop_ids or trip_ids are required\")\r\n      }\r\n      if (options.start_time) {\r\n          stop_times = stop_times.filter(e => e.arrival_time >= options.start_time)\r\n      }\r\n      if (options.end_time) {\r\n          stop_times = stop_times.filter(e => e.arrival_time <= options.end_time)\r\n      }\r\n      stop_times = stop_times.sort((a, b) => {\r\n          if (a.arrival_time < b.arrival_time) return -1;\r\n          if (a.arrival_time > b.arrival_time) return 1;\r\n          if (a.trip_id < b.trip_id) return -1;\r\n          if (a.trip_id > b.trip_id) return 1;\r\n          return 0;\r\n      });\r\n      return {\r\n          stop_times: Object.values(stop_times),\r\n          properties: \"NOT IMPLEMENTED\"\r\n      }\r\n  },\r\n  async getStopsWithinRadius(lat, lon, radius) {\r\n      const h3Index = h3.geoToH3(lat, lon, 7);\r\n      // const neighboringH3Indexes = h3.kRing(h3Index, 1);\r\n      \r\n      const h3IndexesToSearch = [h3Index];\r\n      // const h3IndexesToSearch = [h3Index, ...neighboringH3Indexes];\r\n      const stopDataPromises = h3IndexesToSearch.map(index => {\r\n          const url = `${RUNTIME.host}/byH3index/${index}_stops.csv`;\r\n          return axios.get(url);\r\n      });\r\n      \r\n      const stopDataResponses = await Promise.allSettled(stopDataPromises);\r\n      const stopData = stopDataResponses\r\n          .filter(response => response.status === 'fulfilled')\r\n          .map(response => response.value.data);\r\n      \r\n      const stops = stopData\r\n          .flatMap(data => data.split('\\n'))\r\n          .slice(1)\r\n          .map(line => {\r\n          const [\r\n              stop_id,\r\n              stop_name,\r\n              platform_code,\r\n              stop_lat,\r\n              stop_lon,\r\n              zone_id,\r\n              location_type,\r\n              gtfs_id,\r\n              stop_code,\r\n              stop_desc,\r\n              stop_url,\r\n              parent_station,\r\n              stop_timezone,\r\n              wheelchair_boarding,\r\n              level_id,\r\n              h3index\r\n          ] = line.split(',');\r\n      \r\n          return {\r\n              stop_id,\r\n              stop_name,\r\n              platform_code,\r\n              stop_lat: parseFloat(stop_lat),\r\n              stop_lon: parseFloat(stop_lon),\r\n              zone_id,\r\n              location_type,\r\n              gtfs_id,\r\n              stop_code,\r\n              stop_desc,\r\n              stop_url,\r\n              parent_station,\r\n              stop_timezone,\r\n              wheelchair_boarding,\r\n              level_id,\r\n              h3index\r\n          };\r\n          });\r\n      \r\n          const stopsWithinRadius = stops.filter(stop => {\r\n          const start = { latitude: lat, longitude: lon };\r\n          const end = { latitude: stop.stop_lat, longitude: stop.stop_lon };\r\n          const distance = haversine(start, end, { unit: 'meter' });\r\n          return distance <= radius;\r\n          });\r\n      \r\n          return stopsWithinRadius;\r\n      },\r\n      async getStopsBySubstring(substring) {\r\n      try {\r\n          const url = `${RUNTIME.host}/n-gram/${encodeURIComponent(substring[0])}.csv`;\r\n          const response = await axios.get(url);\r\n      \r\n          if (response.status !== 200) {\r\n          throw new Error(\"Failed to fetch data from URL.\");\r\n          }\r\n      \r\n          const data = response.data;\r\n          const lines = data.split(\"\\n\");\r\n          const headers = lines[0].split(\",\");\r\n      \r\n          const stops = [];\r\n      \r\n          for (let i = 1; i < lines.length; i++) {\r\n          if (lines[i].trim() === \"\") continue;\r\n      \r\n          const values = lines[i].split(\",\");\r\n          const stop = {};\r\n      \r\n          for (let j = 0; j < headers.length; j++) {\r\n              stop[headers[j]] = values[j];\r\n          }\r\n      \r\n          // stop_name に substring が含まれる場合のみ、結果に追加\r\n          if (stop.stop_name.includes(substring)) {\r\n              stops.push(stop);\r\n          }\r\n          }\r\n      \r\n          return stops;\r\n      } catch (error) {\r\n          console.error(`Error fetching stops data: ${error.message}`);\r\n          return [];\r\n      }\r\n      },\r\n      async getVehiclePositionFromURL(url){\r\n      // GTFS-RTの.protoファイルのパス\r\n      const PROTO_PATH = 'https://butter.takoyaki3.com/gtfs-realtime.proto';\r\n\r\n      // Protobuf Rootオブジェクトの作成\r\n      let root = new protobuf.Root();\r\n\r\n      // .protoファイルのロード\r\n      let loadProto = new Promise(async (resolve, reject) => {\r\n          const t = await root.load(PROTO_PATH, async function(err, root) {\r\n              if (err) {\r\n                  reject(err);\r\n              }\r\n\r\n              // メッセージタイプの取得\r\n              let FeedMessage = root.lookupType('transit_realtime.FeedMessage');\r\n\r\n              // GTFS-RTデータの取得\r\n              const resp = await fetch('https://cros-proxy.api.takoyaki3.com/'+url)\r\n              const buffer = await resp.arrayBuffer()\r\n              // Protobufメッセージのデコード\r\n              let message = await FeedMessage.decode(new Uint8Array(buffer));\r\n\r\n              // バスの位置情報の取得\r\n              let entity = message.entity;\r\n\r\n              resolve(entity);\r\n          });\r\n      });\r\n\r\n      let entity = await loadProto;\r\n      return entity;\r\n      },\r\n      async getVehiclePositionUrls() {\r\n      const url = `${RUNTIME.host}/datalist.json`;  // JSONデータが存在するURLを指定します\r\n      let response = await fetch(url);\r\n      let data = await response.json();\r\n      \r\n      const result = {};\r\n      for (const item of data.data_list) {\r\n          if (item.VehiclePosition_url) {\r\n          result[item.gtfs_id] = item.VehiclePosition_url;\r\n          }\r\n      }\r\n      return result;\r\n  },\r\n      async getBusInfo(latitude, longitude) {\r\n\r\n      const vehiclePositionUrls = await this.getVehiclePositionUrls();\r\n\r\n      // Convert latitude and longitude to H3 index\r\n      const h3Index = h3.geoToH3(latitude, longitude, 7);\r\n\r\n      try {\r\n          const url = `${RUNTIME.host}/byH3index/${h3Index}_stops.csv`;\r\n          const response = await axios.get(url);\r\n\r\n          if (response.status !== 200) {\r\n              throw new Error(\"Failed to fetch data from URL.\");\r\n          }\r\n\r\n          const data = response.data;\r\n          const lines = data.split(\"\\n\");\r\n          const headers = lines[0].split(\",\");\r\n\r\n          const gtfsIds = [];\r\n\r\n          for (let i = 1; i < lines.length; i++) {\r\n              if (lines[i].trim() === \"\") continue;\r\n\r\n              const values = lines[i].split(\",\");\r\n              const stop = {};\r\n\r\n              for (let j = 0; j < headers.length; j++) {\r\n                  stop[headers[j]] = values[j];\r\n              }\r\n\r\n              // Include the gtfs_id in the result if it's not already there\r\n              if (!gtfsIds.includes(stop.gtfs_id)) {\r\n                  gtfsIds.push(stop.gtfs_id);\r\n              }                    }\r\n\r\n          const busInfos = [];\r\n          for (const gtfs_id of gtfsIds) {\r\n              const url = vehiclePositionUrls[gtfs_id];\r\n              if(url==null) continue;\r\n              const busInfo = await this.getVehiclePositionFromURL(url);\r\n              busInfos.push(busInfo);\r\n          }\r\n          return busInfos;\r\n\r\n      } catch (error) {\r\n          console.error(`Error fetching stops data: ${error.message}`);\r\n          return [];\r\n      }\r\n  },\r\n  init(){\r\n    internal.setCA(\"https://butter.takoyaki3.com/v0.0.0/root.json\")\r\n  }\r\n};\r\n\r\n// module.exports = Butter;\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Butter);\r\n\n\n//# sourceURL=webpack://my_module/./src/index.js?");

/***/ }),

/***/ "./node_modules/axios/dist/browser/axios.cjs":
/*!***************************************************!*\
  !*** ./node_modules/axios/dist/browser/axios.cjs ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Axios v1.4.0 Copyright (c) 2023 Matt Zabriskie and contributors\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : __webpack_require__.g)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n};\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0];\n  }\n\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nvar utils = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nvar platform = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nvar cookies = platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nvar isURLSameOrigin = platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders$1.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n};\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nconst VERSION = \"1.4.0\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n\n\n//# sourceURL=webpack://my_module/./node_modules/axios/dist/browser/axios.cjs?");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/global */
/******/ (() => {
/******/ 	__webpack_require__.g = (function() {
/******/ 		if (typeof globalThis === 'object') return globalThis;
/******/ 		try {
/******/ 			return this || new Function('return this')();
/******/ 		} catch (e) {
/******/ 			if (typeof window === 'object') return window;
/******/ 		}
/******/ 	})();
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ var __webpack_exports__default = __webpack_exports__["default"];
/******/ export { __webpack_exports__default as default };
/******/ 
